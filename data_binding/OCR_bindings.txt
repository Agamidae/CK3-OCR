# macro = {
# 	description = "Sets the locale view's contest tab to specified variable"
# 	definition = "SetContestInfoTab(ViewVariable)"
# 	replace_with = "VariableSystem.Set( 'activity_contest_info_tab', ViewVariable ))"
# }
#
# macro = {
# 	description = "Clears the locale view's contest tab"
# 	definition = "ClearContestInfoTab"
# 	replace_with = "VariableSystem.Clear( 'activity_contest_info_tab' )"
# }

macro = {
	definition = "vassals_per_page"
	replace_with = "'(CFixedPoint)5'"
}
macro = {
	description = "Shows the number in the datamodel + 1"
	definition = "IndexNumber"
	replace_with = "Add_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)1')"
}

macro = {
	description = "Is this the first item in the datamodel?"
	definition = "IsIndexFirst"
	replace_with = "EqualTo_int32(PdxGuiWidget.GetIndexInDataModel, '(int32)0')"
}

macro = {
	description = "Is this the x item in the datamodel?"
	definition = "IsIndex(IndexNum)"
	replace_with = "EqualTo_int32(PdxGuiWidget.GetIndexInDataModel, IndexNum)"
}

macro = {
	definition = "DistanceToCapital(root, ORIGIN)"
	replace_with = "GuiScope.SetRoot(root).AddScope('origin', ORIGIN).ScriptValue('sq_origin_distance')"
}

macro = {
	definition = "MyCapital"
	replace_with = "GetPlayer.GetCapitalLocation"
}

macro = {
	definition = "DistanceTo(ORIGIN, PROVINCE)"
	replace_with = "Select_CFixedPoint( GreaterThan_CFixedPoint( GuiScope.SetRoot(PROVINCE.MakeScope).AddScope('origin', ORIGIN.MakeScope).ScriptValue('origin_distance'), '(CFixedPoint)3600'), Divide_CFixedPoint(GuiScope.SetRoot(PROVINCE.MakeScope).AddScope('origin', ORIGIN.MakeScope).ScriptValue('sq_origin_distance'), '(CFixedPoint)30'), GuiScope.SetRoot(PROVINCE.MakeScope).AddScope('origin', ORIGIN.MakeScope).ScriptValue('sq_origin_distance'))|0"
}

macro = {
	definition = "DaysTo(ORIGIN, PROVINCE)"
	replace_with = "Select_CString( GreaterThan_CFixedPoint( GuiScope.SetRoot(PROVINCE.MakeScope).AddScope('origin', ORIGIN.MakeScope).ScriptValue('origin_distance'), '(CFixedPoint)3600'), 'months', 'days')"
}

macro = {
	definition = "Direction(ORIGIN, PROVINCE)"
	replace_with = "GuiScope.SetRoot(ORIGIN.MakeScope).AddScope('second', PROVINCE.MakeScope).Custom('province_direction')"
}

macro = {
	definition = "Is(NAME)"
	replace_with = "GetVariableSystem.Exists(NAME)"
}
macro = {
	definition = "Toggle(NAME)"
	replace_with = "GetVariableSystem.Toggle(NAME)"
}
macro = {
	definition = "Set(NAME, VALUE)"
	replace_with = "GetVariableSystem.Set(NAME, VALUE)"
}
macro = {
	definition = "Has(NAME)"
	replace_with = "GetVariableSystem.HasValue(NAME)"
}
macro = {
	definition = "Clear(NAME)"
	replace_with = "GetVariableSystem.Clear(NAME)"
}
macro = {
	definition = "Get(NAME)"
	replace_with = "GetVariableSystem.Get(NAME)"
}
macro = {
	definition = "Isnt(NAME)"
	replace_with = "Not(GetVariableSystem.Exists(NAME))"
}