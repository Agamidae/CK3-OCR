### DYNASTY HOUSE WINDOW
window = {
	name = "dynasty_house_view"
	widgetid = "dynasty_house_view"
	datacontext = "[DynastyHouseView.GetDynastyHouse]"
	datacontext = "[DynastyHouse.GetDynasty]"
	movable = no
	allow_outside = yes
	layer = windows_layer

	using = Window_Size_Sidebar
	using = Window_Background_Sidebar

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		position_x = 0
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"
	}

	state = {
		name = _hide

		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		position_x = -60
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
	}

	vbox = {
		name = "dynasty_house"
		margin_left = 10

		using = Window_Margins_Sidebar

		background = {
			using = Background_Bottom_Fade
			margin_right = -10
		}

		### HOUSE ###
		vbox = {
			layoutpolicy_horizontal = expanding

			#### HEADER
			hbox = {
				layoutpolicy_horizontal = expanding

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed

							text_single = {
								layoutpolicy_vertical = expanding
								text = "HOUSE_VIEW_NAME_WITH_HOUSE"
							}

							dot = { }

							expand = { }

							buttons_window_control = {

								blockoverride "button_close"
								{
									onclick = "[DynastyHouseView.Close]"
									onclick = "[DynastyHouseView.CloseMembersWindow]"
								}

								blockoverride "button_back"
								{
									size = { 0 0 }
									visible = "[HasViewHistory]"
									onclick = "[OpenFromViewHistory]"
									tooltip = "[GetViewHistoryTooltip]"
								}

								blockoverride "button_me"
								{
									size = { 0 0 }
									onclick = "[DefaultOnCharacterClick(GetPlayer.GetID)]"
								}
							}
						}

						button_text = {
							layoutpolicy_horizontal = expanding
							visible = "[DynastyHouse.CanPlayerCustomize]"
							onclick = "[OpenHouseCustomizationWindow(DynastyHouse.Self)]"
							blockoverride "text" {
								raw_text = "Change name."
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_bottom = 10
							margin_right = 25
							spacing = 3

							state = {
								name = "house_view_refresh"
								using = Animation_Refresh_FadeOut
							}

							state = {
								using = Animation_Refresh_FadeIn
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "HOUSE_VIEW_CONCEPT"
								autoresize = no
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									layoutpolicy_horizontal = expanding
									maximumsize = { 0 40 }
									max_width = 400
									autoresize = yes
									text = "HOUSE_VIEW_MOTTO"
									fontsize = 17
									default_format = "#medium;bold;italic"
								}

								expand = { }
							}

							hbox = {
								visible = "[DataModelHasItems( DynastyHouseView.GetHouseModifiers )]"
								layoutpolicy_horizontal = expanding

								hbox = {
									datamodel = "[DynastyHouseView.GetHouseModifiers]"

									text_single = {
										maximumsize = { 0 40 }
										max_width = 400
										autoresize = yes
										text = "HOUSE_MODIFIERS"
										align = left
									}

									item = {
										icon = {
											size = { 25 25 }
											alwaystransparent = no
											texture = "[ModifierItem.GetIcon]"
											tooltip = "[ModifierItem.GetTooltip]"
										}
									}
								}

								expand = { }
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									layoutpolicy_horizontal = expanding
									text = "HOUSE_VIEW_FOUNDED"
									default_format = "#low"
									autoresize = yes
									max_width = 400
								}
								expand = { }
							}
						}
					}
				}
			}

			### INVALID ###
			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[DynastyHouse.GetFounder]"
				visible = "[Not( DynastyHouse.GetHeadOfHouse.IsValid )]"
				margin = { 15 0 }
				minimumsize = { 0 260 }

				datacontext = "[GetIllustration( 'character_view_bg' )]"

				state = {
					name = "house_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				background = {
					visible = "[Character.IsValid]"
					texture = "[Illustration.GetTexture( Character.Self )]"
					alpha = 0.5
					fittype = centercrop
					using = Mask_Rough_Edges
					margin_top = 10

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						blend_mode = alphamultiply
						mirror = horizontal
					}
				}

				spacer = {
					size = { 100 100 }
				}

				expand = { }

				text_label_center = {
					layoutpolicy_horizontal = expanding
					text = "DYNASTY_TT_DEAD_HOUSE"
					max_width = 370
				}

				expand = { }
			}

			#### VALID ####
			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[DynastyHouse.GetHeadOfHouse]"
				datacontext = "[GetIllustration( 'character_view_bg' )]"
				visible = "[DynastyHouse.GetHeadOfHouse.IsValid]"

				state = {
					name = "house_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				expand = { }

				hbox = {
					margin = { 10 2 }
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_bottom = 5
							spacing = 0

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 5

								text_label_center = {
									text = "[Character.GetUINameNotMeNoTooltip|U]"
									default_format = "#high"
									using = Font_Size_Medium
									max_width = 355
								}

								expand = { }
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 5

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "[Character.GetRelationToString( GetPlayer )]"
									tooltip = "EXTENDED_RELATIONS_TOOLTIP"
									max_width = 400
								}

								expand = { }
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }
							margin_right = 20

							divider_light = {
								layoutpolicy_horizontal = expanding
							}
						}

						### House Head
						vbox = {
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								text_single = {
									layoutpolicy_horizontal = expanding
									raw_text = "[Localize('HOUSE_VIEW_HOUSE_HEAD_OF')]."
									autoresize = no
									max_width = 500
								}

								expand = { }
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "HOUSE_VIEW_MAX_MILITARY_STRENGTH"
								autoresize = no
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									visible = "[DynastyHouse.HasHeirOfHouse]"
									datacontext = "[DynastyHouse.GetHeirOfHouse]"

									text = "HOUSE_HEAD_HEIR"
									max_width = 500
									autoresize = yes
								}

								expand = { }
							}
						}


						### Dynasty Head
						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Character.IsDynast]"

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5


								text_single = {
									layoutpolicy_horizontal = expanding
									text = "DYNASTY_VIEW_DYNAST_OF"
									autoresize = no
									max_width = 360
									default_format = "#high"
									align = left
								}

								expand = { }
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									visible = "[NotEqualTo_int32(Character.GetDynasty.GetFoundedDynastyHousesCount, '(int32)1')]"
									text = "DYNASTY_VIEW_BECOME_DYNAST"
									max_width = 500
									autoresize = yes
								}

								expand = { }
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									visible = "[EqualTo_int32(Character.GetDynasty.GetFoundedDynastyHousesCount, '(int32)1')]"
									text = "DYNASTY_VIEW_BECOME_DYNAST_ONE_HOUSE"
									max_width = 500
									autoresize = yes
								}
								expand = { }
							}
						}
					}
				}
			}

			### DYNASTY
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				background = {
					using = Background_Area
					alpha = 0.5
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					margin = {  0 5 }
					margin_top = 10
					margin_left = 15
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 5

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_bottom = 5
								margin_right = 5

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									hbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5

										text_multi = {
											text = "HOUSE_VIEW_PART_OF_DYNASTY"
											autoresize = yes
											maximumsize = { 0 60 }
											max_width = 390
										}

										# button_text = {
										#     blockoverride "text" {
										#         raw_text = "Change name."
										#     }
										# 	visible = "[Dynasty.CanPlayerCustomize]"
										# 	onclick = "[OpenDynastyCustomizationWindow(Dynasty.Self)]"
										# }

											expand = { }
										}

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_VIEW_CONCEPT"
											max_width = 600
											align = left
										}

										text_single = {
											visible = "[Dynasty.GetDynast.IsValid]"
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_TT_DYNAST"
											default_format = "#low"
											autoresize = no
											max_width = 600
											align = left
										}

										text_single = {
											visible = "[Not( Dynasty.GetDynast.IsValid )]"
											layoutpolicy_horizontal = expanding
											text = "DYNASTY_TT_DEAD_DYNASTY"
											default_format = "#low"
											autoresize = no
											max_width = 600
											align = left
										}

										### MODIFIERS ###
										hbox = {
											visible = "[DataModelHasItems( DynastyHouseView.GetDynastyModifiers )]"
											layoutpolicy_horizontal = expanding
											spacing = 5

											text_single = {
												text =  "DYNASTY_MODIFIERS"
												align = left
											}

											hbox = {
												name = "dynasty modifiers"
												datamodel = "[DynastyHouseView.GetDynastyModifiers]"

												item = {
													icon = {
														size = { 25 25 }
														alwaystransparent = no
														texture = "[ModifierItem.GetIcon]"
														tooltip = "[ModifierItem.GetTooltip]"
													}
												}
											}
											expand = { }
											}

											expand = { }

												text_single = {
													layoutpolicy_horizontal = expanding
													raw_text = "Level of splendor: [Dynasty.GetPrestigeLevelName]. Next level: [Dynasty.GetNextPrestigeLevelName]."
												}
											}
										}

							text_single = {
								layoutpolicy_horizontal = expanding
								raw_text = "[Dynasty.GetPrestigeLevelProgressTooltip]."
							}

							expand = { }
						}
					}


					hbox = {
						layoutpolicy_horizontal = expanding
						minimumsize = { 0 54 }

						### DYNASTY TREE ###
						button_standard_clean = {
							tooltip = "DYNASTY_VIEW_TT_DYNASTY_TREE"
							onclick = "[OpenDynastyTreeViewFromCharacter( DynastyHouse.GetHeadOfHouseOrLastHistoricHead.GetID )]"
							size = { 300 42 }
							visible = no

							button_dynasty_tree = {
								alwaystransparent = yes
								position = { 10 0 }
								parentanchor = left|vcenter
							}

							text_label_center = {
								name = "legacies"
								text = "DYNASTY_VIEW_DYNASTY_TREE"
								parentanchor = center
								align = center
								default_format = "#clickable"
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							button_sidepanel_right = {
								layoutpolicy_horizontal = expanding
								onclick = "[DynastyHouseView.ToggleMembersWindow('dynasty')]"
								tooltip = "DYNASTY_VIEW_MEMBERS_TT"
								blockoverride "button_text"
								{
									text = "DYNASTY_VIEW_MEMBERS"
								}
							}

							hbox = {
								visible = "[GreaterThan_int32( GetDataModelSize( Dynasty.GetDynastyHouses ), '(int32)1' )]"
								layoutpolicy_horizontal = expanding

								button_sidepanel_right = {
									layoutpolicy_horizontal = expanding
									visible = "[GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' )]"
									onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'none' )]"
									tooltip = "DYNASTY_VIEW_HOUSES_TT"

									blockoverride "button_text"
									{
										text = "DYNASTY_VIEW_HOUSES_AMOUNT"
									}
								}

								button_sidepanel_right = {
									layoutpolicy_horizontal = expanding
									visible = "[Not(GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' ))]"
									onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'houses' )]"
									tooltip = "DYNASTY_VIEW_HOUSES_TT"

									blockoverride "button_text"
									{
										text = "DYNASTY_VIEW_HOUSES_AMOUNT"
									}
								}
							}
						}
					}
				}

				### LEGACY ###
				vbox = {
					datacontext = "[DynastyHouse.GetDynasty]"
					datacontext = "[DynastyHouseView.GetTopLegacy]"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					spacing = 3

					flowcontainer = {
						ignoreinvisible = yes
						layoutpolicy_horizontal = expanding

						text_single = {
							raw_text = "DYNASTY_HOUSE_VIEW_PROGRESS_TOOLTIP"
						}
						dot = { }
					}

					vbox = {
						name = "tutorial_highlight_dynasty_perks_button"
						layoutpolicy_horizontal = expanding
						spacing = 5
					}

					button_primary_text = {
						layoutpolicy_horizontal = expanding
					    blockoverride "text" {
					        raw_text = "HOUSE_VIEW_SHOW_LEGACIES"
					    }
						datacontext = "[DynastyHouseView.GetTopLegacy]"

						onclick = "[OpenDynastyViewFromDynasty(Dynasty.GetID)]"
					}

					expand = {
						layoutpolicy_vertical = expanding
					}
				}
			}
		}

		expand = {
			layoutpolicy_vertical = expanding
		}
	}

	window = {
		name = "houses_list"
		size = { 580 100% }
		resizable = no
		focuspolicy = click
		visible = "[GetVariableSystem.HasValue( 'dynasty_view_expand', 'houses' )]"
		datacontext = "[DynastyHouseView.GetDynastyHouse.GetDynasty]"

		attachto = {
			widgetid = "dynasty_house_view"
			inherit_visibility = no
		}

		using = Window_Movable
		using = Window_Background_No_Edge

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetVariableSystem.Set( 'houses_list_open', 'true'  )]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			on_start = "[GetVariableSystem.Clear( 'houses_list_open' )]"
		}

		vbox = {
			# using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "DYNASTY_VIEW_HOUSES"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set( 'dynasty_view_expand', 'none' )]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 10
				margin_right = 20
				margin_top = 5
				spacing = 1

				text_single = {
					raw_text = "Sort by:"
					align = left
				}

				dropdown_menu_standard =
				{
					blockoverride "dropdown_properties"
					{
						datamodel = "[DynastyHouseView.GetOrderOptions]"
						onselectionchanged = "[DynastyHouseView.SortHouses]"
						selectedindex = "[DynastyHouseView.GetSortSelectedIndex]"
					}

					blockoverride "dropdown_active_item_properties"
					{
						raw_text = "[HouseOrderOption.GetName]."
					}

					blockoverride "dropdown_item_properties"
					{
						raw_text = "[HouseOrderOption.GetName]."
					}

				}

				expand = { }
			}

			scrollbox = {
				name = "houses"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					vbox = {
						layoutpolicy_horizontal = expanding
						datamodel = "[DynastyHouseView.GetDynastyHouses]"

						item = {
							button_standard_hover = {
								visible = "[DynastyHouse.HasBeenFounded]"
								layoutpolicy_horizontal = expanding
								size = { 0 0 }

								onclick = "[PdxGuiTriggerAllAnimations('house_view_refresh')]"
								onclick = "[DefaultOnHouseCoatOfArmsClick(DynastyHouse.GetID)]"

								vbox = {
									resizeparent = yes
									margin_left = 5
									hbox = {
										layoutpolicy_horizontal = expanding

										vbox = {
											layoutpolicy_horizontal = expanding

											hbox = {
												layoutpolicy_horizontal = expanding

												text_single = {
													raw_text = "[DynastyHouse.GetBaseNameNoTooltip],"
												}
												space = { }

												text_single = {
													text = "HOUSE_LIST_MEMBERS"
												}

												dot = { }
												space = { }

												text_single = {
													visible = "[DynastyHouse.IsFoundingHouse]"
													text = "HOUSE_LIST_FOUNDING"
												}

												text_single = {
													visible = "[Not(DynastyHouse.IsFoundingHouse)]"
													text = "HOUSE_LIST_CADET"
												}
												text_single = {
													raw_text = ","
												}
												space = { }

												text_single = {
													text = "HOUSE_LIST_FOUNDATION"
												}
												dot = { }
												expand = { }
											}

											flowcontainer = {
												visible = "[DynastyHouse.GetHeadOfHouse.IsValid]"
												layoutpolicy_horizontal = expanding

												text_single = {
													layoutpolicy_horizontal = expanding
													text = HOUSE_LIST_HEAD
												}

												dot = { }

												text_single = {
													text = "HOUSE_LIST_HEAD_MAX_MILITARY_STRENGTH"
													tooltip = "HOUSE_LIST_MILITARY_STRENGTH_TT"
												}

												text_single = {
													raw_text = " soldiers."
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

types DynastyView
{
	type widget_legacy_icon = widget {
		size = { 100% 100% }

		background = {
			texture = "gfx/interface/icons/lifestyle_tree_backgrounds/temptation.dds"
			tintcolor = { 0.2 0.2 0.2 1 }

			using = Mask_Rough_Edges
			alpha = 0.8
			fittype = centercrop
			mirror = horizontal

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				blend_mode = alphamultiply
			}
		}

		background = {
			texture = "gfx/interface/icons/lifestyle_tree_backgrounds/temptation.dds"
			tintcolor = { 1 0.9 1 0.15 }

			using = Mask_Rough_Edges
			fittype = centercrop
			mirror = horizontal
			margin_right = 10
			margin_top = 20

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				blend_mode = alphamultiply
			}
		}

		icon_flat_standard = {
			size = { 80 80 }
			parentanchor = top|hcenter
			visible = "[GreaterThan_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
		}

		icon_flat_standard = {
			size = { 80 80 }
			parentanchor = top|hcenter
			visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)5')]"
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
		}

		icon_flat_standard = {
			visible = "[EqualTo_int32(DynastyLegacyItem.GetUnlockedPerksCount, '(int32)0')]"
			size = { 80 80 }
			parentanchor = top|hcenter
			texture = "[DynastyLegacyItem.GetLegacy.GetIcon]"
			alwaystransparent = yes
			blockoverride "master_color_frame" {
				frame = 6
			}
		}
	}

	type legacy_progress_none = icon {
		texture = "gfx/interface/progressbars/progress_scheme.dds"
		size = { 14 14 }
		framesize = { 45 45 }
	}

	type legacy_progress = icon {
		texture = "gfx/interface/progressbars/progress_scheme.dds"
		size = { 14 14 }
		framesize = { 45 45 }
		frame = 3
	}
}