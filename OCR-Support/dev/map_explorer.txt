Constantinople: 2758 1966 - 16 / 41
Kopenhagen - 1200
Chalcedon: 2639 1960
Rome: 1675 1995

Sri Lanka - 4300 / 80

size: 64x40
Roma is 12 12
Constantinople 22 12

###

# make a smaller list
every_province = {
  limit = {
    OR = {
      is_county_capital = yes
      is_sea_province = yes
      is_river_province = yes
    }
    add_to_list = map_provinces
  }
}

# set up the stories
set_local_variable = {
  name = x
  value = -1
}

clear_variable_list = x_county_grid

while = {
  count = 64

  # reset for the new cycle
  set_local_variable = {
    name = y
    value = -1
  }

  # we'll start at 0 since the var is set to -1
  change_local_variable = {
    name = x
    add = 1
  }

  # first we make 64 columns
  create_story = {
    type = x_county_grid
    set_variable = {
      name = x
      value = local_var:x
    }

    root = {
      add_to_variable_list = {
        name = x_county_grid
        target = prev
      }
    }

    save_scope_as = x

    # create 40 stories at x 0, then at x 1, etc
    while = {
      count = 40

      change_local_variable = {
        name = y
        add = 1
      }

      # and each column will have 40 rows, but stories need to have an owner, so we create them on the root and then add to a variable list in the previous story
      root = {
        create_story = {
          type = y_county_grid

          scope:x = {
            add_to_variable_list = {
              name = y_county_grid
              target = prev
            }
          }

          set_variable = {
            name = y
            value = local_var:y
          }

          # add provinces to the story
          every_in_list = {
            name = map_provinces

            limit = {
              rounded_x = scope:x.var:x
              rounded_y = prev.var:y
            }

            prev = {
              add_to_variable_list = {
                name = grid_provinces
                target = prev
              }
            }
            remove_from_list = map_provinces
          }
        }
      }
    }
  }
}

rounded_x = {
  value = var:pos_x
  divide = 100 # going from 2348 to 23.48
  round = yes # 23
}

rounded_y = {
  value = var:pos_y
  divide = 100 # going from 2348 to 23.48
  round = yes # 23
}

###

button_text = {
  onclick = "[GetScriptedGui('open_map_grid').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('province', Province.MakeScope).End )]"
  blockoverride "pre" {
    text_single = {
      raw_text = "[County.GetTitle.GetProvince.ScriptValue('rounded_x')] east, [County.GetTitle.GetProvince.ScriptValue('rounded_y')] north."
    }
  }
  blockoverride "text" {
    raw_text = "Open map grid."
  }
}

#open map grid
if = {
  limit = {
    NOT = { has_variable = x_county_grid }
  }
  set_variable = {
    name = x_county_grid
    value = {
      value = scope:province.county.title_province.var:pos_x
      divide = 100
      round = yes
    }
  }
}

if = {
  limit = {
    NOT = { has_variable = y_county_grid }
  }
  set_variable = {
    name = y_county_grid
    value = {
      value = scope:province.county.title_province.var:pos_y
      divide = 100
      round = yes
    }
  }
}

#moving:
set_variable = {
  name = x_county_grid
  value = {
    value = var:x_county_grid
    if = {
      limit = { exists = scope:east }
      add = scope:east #value added in sgui, -1, 1
    }
  }
}

set_variable = {
  name = y_county_grid
  value = {
    value = var:y_county_grid
    if = {
      limit = { exists = scope:north }
      add = scope:north #value added in sgui, -1, 1
    }
  }
}

# find the column
random_in_list = {
  variable = x_county_grid
  limit = {
    var:x = root.var:x_county_grid
  }
  save_scope_as = x
  # find the row
  random_in_list = {
    variable = y_county_grid
    limit = {
      var:y = prev.var:y
    }
    # save the story to show in UI
    root = {
      set_variable = {
        name = county_grid_cell
        value = prev
      }
      set_variable = {
        name = x_county_grid
        value = scope:x.var:x
      }
      set_variable = {
        name = y_county_grid
        value = prev.var:y
      }
    }
  }
}

flowcontainer = {
  layoutpolicy_horizontal = expanding
  ignoreinvisible = yes
  direction = vertical
  spacing = 5

  flowcontainer = {
    ignoreinvisible = yes
    parentanchor = hcenter

    button_standard = {
      size = { 30 30 }
      raw_text = "W"
      shortcut = map_mode_10
      onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('north', MakeScopeValue( '(CFixedPoint)1')).End )]"
    }
  }

  flowcontainer = {
    ignoreinvisible = yes
    spacing = 5

    button_standard = {
      size = { 30 30 }
      raw_text = "A"
      shortcut = mapmode_faith_secondary
      onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('east', MakeScopeValue( '(CFixedPoint)-1')).End )]"
    }
    button_standard = {
      size = { 30 30 }
      raw_text = "S"
      shortcut = mapmode_culture_secondary
      onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('north', MakeScopeValue( '(CFixedPoint)-1')).End )]"
    }
    button_standard = {
      size = { 30 30 }
      raw_text = "D"
      shortcut = mapmode_house_secondary
      onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('east', MakeScopeValue( '(CFixedPoint)1')).End )]"
    }
  }

}

# UI
datacontext = "[GetPlayer.MakeScope.Var('county_grid_cell').Story]"

text_single = {
  layoutpolicy_horizontal = expanding
  raw_text = "[GetDataModelSize(Story.MakeScope.GetList('grid_provinces'))] items:"
}

vbox = {
  layoutpolicy_horizontal = expanding
  datamodel = "[Story.MakeScope.GetList('grid_provinces')]"

  item = {
    vbox = {
      layoutpolicy_horizontal = expanding

      hbox = {
        layoutpolicy_horizontal = expanding

        visible = "[GetScriptedGui('is_land').IsShown( GuiScope.SetRoot( Province.MakeScope ).End )]"

        adjacent_county_button = {
          datacontext = "[Province.GetCounty.GetTitle]"
        }

        expand = {}
      }

      hbox = {
        layoutpolicy_horizontal = expanding

        visible = "[Not(GetScriptedGui('is_land').IsShown( GuiScope.SetRoot( Province.MakeScope ).End ))]"

        button_sea = {}

        expand = {}
      }
    }
  }
}
