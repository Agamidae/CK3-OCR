types OCR {
	type old_activities = window {
		using = old_window

		margin_widget = {
			size = { 100% 100% }
			margin = { 0 26 }
			margin_right = 13

			widget = {
				size = { 100% 100% }

				vbox = {
					using = Window_Margins

					widget_header_with_picture = {
						layoutpolicy_horizontal = expanding

						max_height = 100

						blockoverride "illustration_texture" {
							texture = "gfx/interface/illustrations/window_headers/header_activity.dds"
							fittype = centercrop
							alpha = 0.4
						}

						blockoverride "header_text"
						{
							text = "ACTIVITY_LIST"
						}

						blockoverride "button_close"
						{
							onclick = "[ActivityListWindow.Close]"
						}

						vbox = {
							name = "activity_status"
							layoutpolicy_horizontal = expanding
							datacontext = "[Character.GetInvolvedActivity]"
							margin_top = 40

							text_single = {
								name = "status_no_activity"
								text = "ACTIVITY_LIST_NO_ONGOING_ACTIVITY"
								visible = "[Not( Activity.IsValid )]"
								autoresize = yes
								maximumsize = { 450 -1 }
								align = center
								default_format = "#weak"
							}

							vbox = {
								name = "status_involved_activity"
								layoutpolicy_horizontal = expanding
								visible = "[Activity.IsValid]"

								text_multi = {
									name = "status_involved_activity"
									text = "ACTIVITY_LIST_INVOLVED_ACTIVITY"
									visible = "[Not( ObjectsEqual( Activity.GetHost.Self, Character.Self ) )]"
									autoresize = yes
									max_width = 450
									align = center
								}

								text_multi = {
									name = "status_hosting_activity"
									text = "ACTIVITY_LIST_HOSTING_ACTIVITY"
									visible = "[ObjectsEqual( Activity.GetHost.Self, Character.Self )]"
									autoresize = yes
									max_width = 450
									align = center
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									margin_left = 10
									spacing = 10

									activity_hud_button = {
										name = "activity_hud_icon"
									}

									vbox = {
										text_single = {
											layoutpolicy_horizontal = expanding
											text = "ACTIVITY_LIST_CURRENT_PHASE"
										}
										text_single = {
											layoutpolicy_horizontal = expanding
											text = "ACTIVITY_LIST_CURRENT_STATE"
										}
									}

									expand = {}
								}
							}

							expand = {}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						vbox = {
							name = "activity_content"

							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin_top = 30

							scrollbox = {
								name = "host_scrollbox"

								using = Animation_Tab_Switch

								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_content"
								{
									name = "activities_container"

									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									vbox = {
										name = "activity_groups_container"
										margin_bottom = 8
										spacing = 2

										layoutpolicy_horizontal = expanding

										datamodel = "[ActivityListWindow.GetActivityGroupItems]"
										item = {
											vbox_activity_group_foldout = {}
										}
									}

									blockoverride "scrollbox_expand" {
										expand = {}
									}

									divider_light = {
										layoutpolicy_horizontal = expanding
									}

									vbox = {
										margin_top = 8

										button_checkbox_label = {
											name = "notify_can_join"
											datacontext = "[GetActivityType( 'activity_tournament' )]"

											onclick = "[ActivityType.ToggleShouldNotifyCanJoinOpenActivity]"

											blockoverride "checkbox"
											{
												checked = "[ActivityType.ShouldNotifyCanJoinOpenActivity]"
											}

											blockoverride "text"
											{
												text = "ACTIVITY_LIST_NOTIFY_ME_ABOUT_TOURNAMENTS"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	type old_activity_details = window {
		using = old_window
		position = { -650 110 }
		size = { 630 935 }
		using = Window_Movable
		using = Window_Background
		using = Window_Decoration_Spike

		state = {
			name = _show
			using = Animation_FadeIn_Standard
			using = Sound_WindowShow_Standard
			position = { -650 110 }
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		vbox = {
			using = Window_Margins

			header_pattern = {
				size = { 0 40 }
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "ACTIVITY_LIST_DETAIL_HOST_TITLE"
				}

				blockoverride "button_close"
				{
					onclick = "[ActivityListDetailHostView.Close]"
				}
			}

			vbox = {
				name = "contents"

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				vbox = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 550 220 }

					background = {
						name = "illustrations"
						texture = "[ActivityType.GetHeaderBackground]"
						margin_top = 10
						alpha = 0.7
						using = Mask_Rough_Edges
					}
				}

				text_multi = {
					name = "description"
					minimumsize = { 515 -1 }
					maximumsize = { 515 -1 }
					margin = { 15 15 }
					autoresize = yes
					text = "[ActivityType.GetDescription]"
					using = Font_Size_Small
				}

				scrollbox = {
					name = "description_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							vbox = {
								name = "effect"
								layoutpolicy_horizontal = expanding

								# No visible check as we always want the base you host this activity effect description

								background = {
									name = "illustrations"
									texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
									tintcolor = { 0.6 0.8 0.8 0.8 }

									margin = { 0 5 }
									using = Mask_Rough_Edges
									alpha = 0.8
									fittype = centercrop
									mirror = horizontal

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
										blend_mode = alphamultiply
										alpha = 0.6
									}

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_rough_edges.dds"
										blend_mode = overlay
										alpha = 0.4
									}
								}

								text_label_center = {
									text = "DECISION_DETAIL_EFFECTS"
								}

								text_multi = {
									layoutpolicy_horizontal = expanding
									margin = { 15 15 }
									max_width = 515
									autoresize = yes
									text = "ACTIVITY_LIST_DETAIL_HOST_EFFECTS"
								}
							}

							vbox = {
								name = "requirements"
								visible = "[ActivityListDetailHostView.HasRequirements]"
								layoutpolicy_horizontal = expanding

								text_label_center = {
									text = "DECISION_DETAIL_REQUIREMENTS"
								}

								text_multi = {
									alwaystransparent = no
									minimumsize = { 515 -1 }
									maximumsize = { 515 -1 }
									margin = { 15 15 }
									autoresize = yes
									text = "[ActivityListDetailHostView.GetRequirementsDescription]"
								}
							}

							expand = {}

						}
					}

					blockoverride "scrollbox_background_fade" {}
				}

				vbox = {
					name = "footer"
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 4
						margin_bottom = 10
						spacing = 5

						text_single = {
							name = "cost"
							visible = "[ActivityListDetailHostView.HasCost]"
							text = "[ActivityListDetailHostView.GetCostDescription]"
							tooltip = "ACTIVITY_BASE_COST_TT"
							using = Font_Size_Medium
							default_format = "#high"
							align = nobaseline
						}

						spacer = {
							size = { 10 2 }
						}

						button_primary = {
							name = "confirm"
							size = { 380 50 }

							onclick = "[ActivityListDetailHostView.Confirm]"

							text = "ACTIVITY_LIST_DETAIL_HOST_CONFIRM"

							default_clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
							clicksound = "[ActivityListDetailHostView.GetConfirmClickSound]"
						}

						spacer = {
							size = { 0 2 }
						}

						button_checkbox_label = {
							name = "major_checkbox"
							onclick = "[ActivityType.ToggleShouldNotifyCanHost]"

							blockoverride "checkbox"
							{
								checked = "[ActivityType.ShouldNotifyCanHost]"
							}

							blockoverride "text"
							{
								text = "ACTIVITY_LIST_DETAIL_TOGGLE_SHOULD_NOTIFY_CAN_HOST"
							}
						}

						expand = {}
					}
				}
			}
		}
	}
}
