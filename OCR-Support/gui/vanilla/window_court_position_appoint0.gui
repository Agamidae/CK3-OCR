types OCR {
	type appoint_court_position_view_old = window {
		name = "appoint_court_position_view"
		parentanchor = "top|right"
		position = { -610 80 }
		size = { 680 920 }
		movable = no
		layer = middle
		allow_outside = yes
		using = vanilla

		using = Window_Background
		using = Window_Decoration

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
		}

		vbox = {
			using = Window_Margins
			layoutpolicy_vertical = expanding

			#Header for appointing
			header_pattern = {
				layoutpolicy_horizontal = expanding
				visible = "[AppointCourtPositionView.IsAppointingNewPosition]"

				blockoverride "header_text"
				{
					text = APPOINT_COURT_POSITION_VIEW_select_character_header
				}

				blockoverride "button_close"
				{
					onclick = "[AppointCourtPositionView.Close]"
				}
			}

			#Header for replacing
			header_pattern = {
				layoutpolicy_horizontal = expanding
				visible = "[AppointCourtPositionView.IsReplacingPosition]"

				blockoverride "header_text"
				{
					text = APPOINT_COURT_POSITION_VIEW_replace_character_header
				}

				blockoverride "button_close"
				{
					onclick = "[AppointCourtPositionView.Close]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed

				vbox = {
					datacontext = "[AppointCourtPositionView.GetCourtPositionType]"
					visible = "[AppointCourtPositionView.IsAppointingNewPosition]"

					layoutpolicy_horizontal = expanding
					spacing = 5
					margin = { 20 2 }
					margin_bottom = 8

					background = {
						using = Background_Area_With_Header_Dark
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							default_format = "#high"
							text = "[CourtPositionType.GetNameNoTooltip]"
						}

						text_single = {
							align = right
							text = "APPOINT_COURT_POSITION_VIEW_salary"
							tooltip = "[CourtPositionType.GetSalaryBreakdownFor(AppointCourtPositionView.GetCourtOwner)]"
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 5

						text_multi = {
							default_format = "#F"
							autoresize = yes
							max_width = 550
							min_width = 550
							text = "[CourtPositionType.GetDescription]"
						}

						expand = {}
					}
				}

				hbox = {
					datacontext = "[AppointCourtPositionView.GetCourtPositionToReplace]"
					datacontext = "[CourtPosition.GetEmployee]"
					visible = "[AppointCourtPositionView.IsReplacingPosition]"
					layoutpolicy_horizontal = expanding
					spacing = 5
					margin = { 20 10 }

					background = {
						using = Background_Area_Dark
						alpha = 0.5
					}

					portrait_head = { }

					vbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "APPOINT_COURT_POSITION_VIEW_REPLACE_CURRENTLY_APPOINTED"
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[Character.GetNameNoTooltip]"
							default_format = "#high"
						}

						text_single = {
							name = "character_relation"
							layoutpolicy_horizontal = expanding
							text = "[Character.GetRelationToString( GetPlayer )]"
							tooltip = "EXTENDED_RELATIONS_TOOLTIP"
							default_format = "#low"
							autoresize = no
							visible = "[Character.HasRelationTo( GetPlayer )]"
						}


						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 5

							vbox = {
								layoutpolicy_vertical = expanding

								expand = {}

								button_standard = {
									size = { 130 33 }

									text = "APPOINT_COURT_POSITION_VIEW_REPLACE_FIRE_CURRENT_HOLDER"
									onclick = "[AppointCourtPositionView.RevokeSelectedPosition]"
									tooltip = COURT_POSITION_REVOKE
								}
							}

							expand = {}

							caravan_master_travel_info = {
								margin_top = 10
								visible = "[AppointCourtPositionView.GetCourtPositionType.IsTravelRelated]"
							}

							vbox = {
								minimumsize = { 200 0 }

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "COURT_POSITION_aptitude_description_position"
									max_width = 200
									align = right

									tooltipwidget = {
										court_position_aptitude_breakdown_tooltip = {
											datacontext = "[CourtPosition.GetAptitudeTooltip]"

											blockoverride "header_text" {
												text = COURT_POSITION_aptitude_description_position
											}

											blockoverride "modifier_list" {
												text = "[CourtPosition.GetEmployerBonuses]"
											}
										}
									}
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "APPOINT_COURT_POSITION_VIEW_REPLACE_CURRENT_SALARY"
									tooltip = "[CourtPosition.GetSalaryBreakdownTooltip]"
									max_width = 200
									align = right
								}
							}
						}
					}
				}
			}

			#Character List
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				### fades in correctly but does something wierd on hide, investigate ###
				#using = Animation_ShowHide_Quick

				vbox_character_list = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[AppointCourtPositionView.GetCourt]"

					blockoverride "sort_buttons"
					{
						hbox_list_sort_buttons = {
							layoutpolicy_horizontal = expanding

							blockoverride "sort_dropdown" {
								dropdown_sort_characterlist = {
									name = "eligible_courtiers_sort_options"
								}
							}

							blockoverride "skill_sort_buttons" {}
						}
					}

					blockoverride "special_character" {
						hbox = {
							visible = "[AppointCourtPositionView.IsReplacingPosition]"
						}

					}

					blockoverride "container_implementation" {
						vbox = {
							name = "characters_grid"
							datamodel = "[CharacterSelectionList.GetList]"
							visible = "[Not(CharacterSelectionList.IsBuildingList)]"
							layoutpolicy_horizontal = expanding
							ignoreinvisible = yes

							item = {
								court_position_candidate_list_item = {
									datacontext = "[CharacterListItem.GetCharacter]"

									block "item_size" {
										size = { 420 110 }
										layoutpolicy_horizontal = expanding
									}
								}
							}
						}
					}
				}
			}

			hbox_liege_modifiers = {
				datacontext = "[AppointCourtPositionView.GetCourtPositionType]"
				visible = "[AppointCourtPositionView.IsAppointingNewPosition]"
			}

			hbox_liege_modifiers = {
				datacontext = "[AppointCourtPositionView.GetCourtPositionToReplace.GetPositionType]"
				visible = "[AppointCourtPositionView.IsReplacingPosition]"
			}

			hbox = {
				spacing = 5
				margin = { 0 10 }

				warning_icon = {
					size = { 32 32 }
					visible = "[And(AppointCourtPositionView.HasSelectedCharacter, AppointCourtPositionView.IsReplacingPosition)]"
					tooltip = APPOINT_COURT_POSITION_VIEW_REPLACE_CONSEQUENCE_FOR_REVOKE_TOOLTIP
				}

				alert_icon = {
					size = { 32 32 }
					visible = "[And(AppointCourtPositionView.HasSelectedCharacter, AppointCourtPositionView.IsAppointingNewPosition )]"
					tooltip = APPOINT_COURT_POSITION_VIEW_REVOKE_CONSEQUENCE_FOR_APPOINTMENT_TOOLTIP
				}

				button_primary = {
					onclick = "[AppointCourtPositionView.AppointSelectedCourtier]"
					enabled = "[AppointCourtPositionView.HasSelectedCharacter]"
					text = APPOINT_COURT_POSITION_VIEW_appoint_button
				}
			}
		}
	}
}
