types OCR {
	type old_decisions = window {
		name = "decisions_view"
		parentanchor = top|right
		layer = windows_layer
		using = vanilla
		movable = no

		using = Window_Size_MainTab

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 0 26 }
			margin_right = 13

			widget = {
				size = { 100% 100% }

				vbox = {
					using = Window_Margins

					header_pattern = {
						layoutpolicy_horizontal = expanding

						blockoverride "header_text"
						{
							datacontext = "[GetPlayer]"
							text = "DECISIONS_VIEW_TITLE_CONTAINER"
						}

						blockoverride "button_close"
						{
							onclick = "[DecisionsView.Close]"
						}
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						margin_bottom = 5

						button_tab = {
							layoutpolicy_horizontal = expanding
							visible = "[Or( IsAdministrativeRuler( GetPlayer ), IsLandlessAdventurer( GetPlayer) )]"
							onclick = "[GetVariableSystem.Set( 'decision_tab', 'decision' )]"
							down = "[GetVariableSystem.HasValue( 'decision_tab', 'decision' )]"

							text_single = {
								text = "DECISIONS_VIEW_DECISION_TAB_TITLE"
								parentanchor = center

								maximumsize = { 400 -1 }
								default_format = "#low"
							}
						}
						button_tab = {
							layoutpolicy_horizontal = expanding
							visible = "[Or( GetPlayer.IsGovernor, IsLandlessAdventurer( GetPlayer ) )]"
							onclick = "[GetVariableSystem.Set( 'decision_tab', 'task_contract' )]"
							down = "[GetVariableSystem.HasValue( 'decision_tab', 'task_contract' )]"

							text_single = {
								text = "DECISIONS_VIEW_CONTRACTS_TAB_TITLE"
								parentanchor = center

								maximumsize = { 400 -1 }
								default_format = "#low"
							}
						}
					}

					scrollbox = {
						name = "decision_scrollarea"
						visible = "[GetVariableSystem.HasValue( 'decision_tab', 'decision' )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						background = {
							texture = "gfx/interface/skinned/illustrations/decisions.dds"
							fittype = end
							alpha = 0.4
							framesize = { 1200 848 }

							using = Mask_Rough_Edges

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
								blend_mode = alphamultiply
								mirror = vertical
							}
						}

						blockoverride "scrollbox_content"
						{
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							vbox = {
								name = "decision_groups_container"
								spacing = 2

								layoutpolicy_horizontal = expanding

								datamodel = "[DecisionsView.GetDecisionGroupItems]"
								item = {
									vbox_decision_group_foldout = {}
								}
							}
						}
						blockoverride "scrollbox_expand" {
							expand = {}
						}
					}

					scrollbox = {
						name = "tab_contracts"
						visible = "[GetVariableSystem.HasValue( 'decision_tab', 'task_contract' )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						background = {
							using = Background_Area
						}

						blockoverride "scrollbox_content"
						{
							text_label_center = {
								text = "DECISIONS_VIEW_ONGOING_CONTRACTS"
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 10

								datamodel = "[GetPlayer.GetAcceptedTaskContracts]"
								item = {
									contract_item = {}
								}
								expand = {}
							}
						}
					}

					expand = {}
				}
			}
		}
	}
}
