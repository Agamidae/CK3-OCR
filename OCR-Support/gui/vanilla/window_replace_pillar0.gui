types Vanilla {
	type window_replace_ethos_old = window {
		using = vanilla
		parentanchor = center
		layer = windows_layer
		size = { 600 100% }
		using = Window_Background
		using = Window_Decoration

		vbox = {
			set_parent_size_to_minimum = yes
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "REPLACE_PILLAR_WINDOW_TITLE"
				}

				blockoverride "button_close"
				{
					onclick = "[ReplacePillarWindow.Close]"
				}
			}

			vbox = {
				name = "pillar_selection"
				margin = { 0 8 }
				spacing = 6

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				scrollbox = {
					size = { 0 500 }

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						flowcontainer = {
							datamodel = "[ReplacePillarWindow.GetPossiblePillars]"
							direction = vertical
							spacing = 15

							layoutpolicy_vertical = growing

							item = {
								widget_pillar_item = {
								}
							}
						}
					}
				}

				vbox = {
					name = "cost"
					datacontext = "[ReplacePillarWindow.GetSelectedPillar]"
					visible = "[CulturePillar.IsValid]"
					minimumsize = { 0 28 }
					spacing = 10
					tooltip = "REPLACE_PILLAR_COST_TOOLTIP"

					text_single = {
						layoutpolicy_horizontal = expanding
						align = center|nobaseline
						text = "REPLACE_PILLAR_TOTAL_COST"
						default_format = "#high"
						using = Font_Size_Medium

						background = {
							visible = "[Not( ReplacePillarWindow.CanPayCost )]"
							margin = { 5 0 }
							using = Status_Bad
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 44 8 }
					spacing = 20

					button_standard= {
						name = "decline_button"
						text = "CANCEL_BUTTON"
						onclick = [ReplacePillarWindow.Close]
						shortcut = "close_window"
					}

					button_primary = {
						name = "done"
						layoutpolicy_horizontal = expanding
						onclick = "[ReplacePillarWindow.ReplacePillar]"
						onclick = "[ReplacePillarWindow.Close]"
						enabled = "[ReplacePillarWindow.CanReplacePillar]"
						text = "REPLACE_PILLAR_EXECUTE_LABEL"

						tooltip = "REPLACE_PILLAR_EXECUTE_TOOLTIP"

						warning_icon = {
							visible = "[Culture.IsReforming]"
							parentanchor = vcenter|right
							size = { 25 25 }
							position = { -3 0 }
							alwaystransparent = yes
						}
					}
				}
			}
		}
	}
}
