types OCR {
	type legend_chronicle_old = window {
		parentanchor = center
		position = { 0 20 }
		size = { 780 940 }

		using = Window_Background
		using = Window_Decoration
		datacontext = "[LegendChronicleWindow.GetLegend]"
		datacontext = "[Legend.GetType]"

		vbox = {
			using = Window_Margins

			datacontext = "[LegendChronicleWindow.GetLegend]"
			datacontext = "[Legend.GetType]"

			background = {
				name = "header"
				texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
				spriteType = Corneredtiled
				texture_density = 2

				margin = { -38 0 }
				margin_bottom = -870
				margin_top = -20

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_title_big_top.dds"
					spriteType = Corneredtiled
					spriteborder = { 160 0 }
					blend_mode = alphamultiply
					alpha = 0.5
				}

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
			}

			vbox = {
				name = "parchment_background"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				background = {
					name = "paper_texture_shadow"
					texture = "gfx/interface/window_event/tile_letter_shadow.dds"
					spriteType = Corneredtiled
					spriteborder = { 200 200 }

					modify_texture = {
						name = "top_edge_mask"
						texture = "gfx/interface/component_masks/legend_chronicle_mask.dds"
						blend_mode = alphamultiply
					}
				}

				background = {
					name = "paper_texture_flat"
					texture = "gfx/interface/window_event/tile_letter_flat.dds"
					spriteType = Corneredtiled
					spriteborder = { 200 200 }

					modify_texture = {
						name = "paper_texture_overlay"
						texture = "gfx/interface/window_event/overlay_letter_texture.dds"
						spriteType = Corneredstretched
						blend_mode = overlay
					}

					modify_texture = {
						name = "top_edge_mask"
						texture = "gfx/interface/component_masks/legend_chronicle_mask.dds"
						blend_mode = alphamultiply
					}
				}

				background = {
					name = "decal"
					texture = "gfx/interface/window_legend_chronicle/marginalia_decal_ground.dds"
					fittype = end
					margin = { -64 0 }
					margin_bottom = -25
					alpha = 0.7
				}

				background = {
					name = "top_edge_overlay"
					texture = "gfx/interface/window_legend_chronicle/legend_chronicle_overlay.dds"
					alpha = 0.8
				}

				background = {
					texture = "[GetIllustration( 'legend_chronicle_frame' ).GetTexture( Legend.MakeScope )]"
					margin = { -16 0 }
					margin_top = -16
					margin_bottom = -18
				}

				background = {
					name = "top_edge_highlight_and_shadow"
					texture = "gfx/interface/window_legend_chronicle/legend_chronicle_highlight_shadow.dds"
				}

				margin_widget = {
					size = { 0 50 }
					layoutpolicy_horizontal = expanding

					buttons_window_control = {
						parentanchor = top|right
						position = { -2 2 }
						blockoverride "button_close"
						{
							onclick = "[LegendChronicleWindow.Close]"
						}
					}

					text_single = {
						name = "header_text"
						parentanchor = top|hcenter
						position = { 0 6 }

						text = "LEGEND_CHRONICLE_HEADER"
						align = nobaseline
						default_format = "#light_background"
						max_width = 200
						using = Text_Light_Background_Overrides
						using = Font_Size_Big
						using = Font_Type_Flavor

						margin_top = 16

					}
				}

				spacer = {
					size = { 0 2 }
				}

				icon = {
					texture = "[GetIllustration( 'legend_chronicle_illustration' ).GetTexture( Legend.MakeScope )]"
					size = { 600 242 }
				}

				vbox = {
					name = "main_content"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					margin = { 64 0 }
					margin_bottom = 72

					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 8 0 }
						spacing = 4

						background = {
							using = Background_Area

							margin_left = -28
							margin_top = -4
							margin_bottom = -6

							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
								mirror = horizontal
							}
						}

						icon_legend = {
							blockoverride "icon_size"
							{
								size = { 50 50 }
							}
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							name = "legend_title"
							text = "[Legend.GetNameNoTooltip]"
							default_format = "#light_background"
							align = nobaseline
							using = Font_Size_Big
							using = Font_Type_Flavor
							using = Text_Light_Background_Overrides

							max_width = 490
						}
					}

					hbox = {
						name = "legend_flavor"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						expand = {}

						vbox = {
							layoutpolicy_vertical = expanding
							margin_top = 16

							scrollbox = {
								size = { 350 362 }

								blockoverride "scrollbox_background" {}

								blockoverride "scrollbox_background_fade" {}

								blockoverride "scrollbox_margins" {}

								blockoverride "scrollbox_scrollbar_vertical" {
									scrollbar_vertical = {
										using = Chronicle_Scrollbar_Vertical
									}
								}

								blockoverride "scrollbox_content"
								{
									vbox = {
										name = "chapters"
										datamodel = "[LegendChronicleWindow.GetChapters]"
										spacing = 16

										item = {
											text_multi = {
												name = "chapter_text"
												layoutpolicy_vertical = expanding

												margin_right = 16

												min_width = 350
												max_width = 350
												autoresize = yes

												text = "[CString.GetString]"

												default_format = "#light_background"
												using = Text_Light_Background_Overrides
											}
										}
									}
								}
							}

							expand = {}
						}

						vbox = {
							layoutpolicy_vertical = expanding

							portrait_legend_chronicle = {}

							expand = {}
						}

						expand = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						margin_bottom = 16

						icon = {
							name = "divider"
							size = { 524 40 }
							texture = "[GetIllustration( 'legend_chronicle_divider' ).GetTexture( Legend.MakeScope )]"
						}
					}

					vbox = {
						name = "buttons"
						layoutpolicy_horizontal = expanding
						visible = "[GetPlayer.IsValid]"

						hbox = {
							name = "owner_buttons"
							visible = "[ObjectsEqual( Legend.GetOwner.Self, GetPlayer )]"

							spacing = 8

							button_primary = {
								text = "LEGEND_CHRONICLE_COMPLETE"
								onclick = "[CreateCommandPopup( Legend.Complete )]"
								enabled = "[IsValidCommand( Legend.Complete )]"
								tooltip = "[GetCommandDesc( Legend.Complete )]"

								background = {
									using = Background_Area_Light
									alpha = 0.7
								}
							}

							button_primary = {
								text = "LEGEND_CHRONICLE_INCREASE_QUALITY"
								onclick = "[PostCommand( Legend.IncreaseLegendQuality )]"
								enabled = "[IsValidCommand( Legend.IncreaseLegendQuality )]"
								tooltip = "[GetCommandDesc( Legend.IncreaseLegendQuality )]"

								background = {
									using = Background_Area_Light
									alpha = 0.7
								}
							}
						}

						hbox = {
							name = "unowned_buttons"
							visible = "[And( Not( Legend.GetOwner.IsValid ), Not( ObjectsEqual( Legend.GetOwner.Self, GetPlayer ) ) )]"

							spacing = 10

							button_primary = {
								text = "LEGEND_CHRONICLE_START_OWNING"
								onclick = "[PostCommand( GetPlayer.TakeUnownedLegend( Legend.Self ) )]"
								enabled = "[IsValidCommand( GetPlayer.TakeUnownedLegend( Legend.Self ) )]"
								tooltip = "[GetCommandDesc( GetPlayer.TakeUnownedLegend( Legend.Self ) )]"
								visible = "[Not( Legend.IsCompleted )]"

								background = {
									using = Background_Area_Light
									alpha = 0.7
								}
							}
						}

						hbox = {
							name = "library_buttons"
	                    	visible = "[Legend.IsCompleted]"

							button_primary = {
	                            text = "LEGEND_CHRONICLE_ADD_TO_LIBRARY"

	                            visible = "[Not( Legend.IsInPlayerLibrary( GetPlayer ) )]"

	                            onclick = "[PostCommand( GetPlayer.AddToLegendLibrary( Legend.Self ) )]"
	                            enabled = "[IsValidCommand( GetPlayer.AddToLegendLibrary( Legend.Self ) )]"
	                            tooltip = "[GetCommandDesc( GetPlayer.AddToLegendLibrary( Legend.Self ) )]"

	                            background = {
	                                using = Background_Area_Light
	                                alpha = 0.7
	                            }
	                        }

	                        button_primary = {
	                            text = "LEGEND_CHRONICLE_REMOVE_FROM_LIBRARY"

	                            visible = "[Legend.IsInPlayerLibrary( GetPlayer )]"

	                            onclick = "[PostCommand( GetPlayer.RemoveFromLegendLibrary( Legend.Self ) )]"
								onclick = "[LegendChronicleWindow.Close]"
								enabled = "[IsValidCommand( GetPlayer.RemoveFromLegendLibrary( Legend.Self ) )]"
								tooltip = "[GetCommandDesc( GetPlayer.RemoveFromLegendLibrary( Legend.Self ) )]"

	                            background = {
	                                using = Background_Area_Light
	                                alpha = 0.7
	                            }
	                        }
						}

						hbox = {
							name = "non_owner_buttons"
							visible = "[And( Legend.GetOwner.IsValid, Not( ObjectsEqual( Legend.GetOwner.Self, GetPlayer ) ) )]"

							spacing = 8

							button_primary = {
								text = "LEGEND_CHRONICLE_STOP_PROMOTING"
								visible = "[Legend.IsCharacterPromotingLegend( GetPlayer.Self )]"

								onclick = "[PostCommand( GetPlayer.StopPromotingLegend( Legend.Self ) )]"
								enabled = "[IsValidCommand( GetPlayer.StopPromotingLegend( Legend.Self ) )]"
								tooltip = "[GetCommandDesc( GetPlayer.StopPromotingLegend( Legend.Self ) )]"

								background = {
									using = Background_Area_Light
									alpha = 0.7
								}
							}

							button_primary = {
								text = "LEGEND_CHRONICLE_START_PROMOTING"
								visible = "[Not( Legend.IsCharacterPromotingLegend( GetPlayer.Self ) )]"

								onclick = "[CreateCommandPopup( GetPlayer.StartPromotingLegend( Legend.Self ) )]"
								enabled = "[IsValidCommand( GetPlayer.StartPromotingLegend( Legend.Self ) )]"
								tooltip = "[GetCommandDesc( GetPlayer.StartPromotingLegend( Legend.Self ) )]"

								background = {
									using = Background_Area_Light
									alpha = 0.7
								}
							}
						}
					}

					expand = {}
				}
			}
		}
	}
}
