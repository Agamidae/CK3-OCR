types VANILLA {
	type government_administration_window_old = window {
		using = vanilla
		parentanchor = top|right
		layer = windows_layer
		movable = no
		allow_outside = yes
		using = Window_Size_MainTab


		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
			using = Expand_Admin_Themes
			on_start = "[SetMapMode( 'admin_vassal_types_map' )]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
			on_start = "[SetMapMode( 'realms' )]"
		}

		vbox = {
			margin_left = 40
			margin_right = 53
			margin_top = 50
			margin_bottom = 20

			oncreate = "[BindTabsContext]"
			oncreate = "[PdxGuiTabs.AddTab( 'themes' )]"
			oncreate = "[PdxGuiTabs.AddTab( 'families' )]"

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "ADMINISTRATIVE_GOVERNMENT_HEADER"
				}

				blockoverride "button_close"
				{
					onclick = "[GovernmentAdministrationWindow.Close]"
				}

				text_single = {
					raw_text = "Errors: [NumberOrErrors]"
					position = { 5 10 }
					visible = "[Not(InReleaseMode)]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 12 0 }
				datacontext = "[GovernmentAdministrationWindow.GetTitle]"
				datacontext = "[Title.GetHolder]"
				background = {
					spriteType = corneredTiled
					texture_density = 3
					texture = "gfx/interface/illustrations/event_scenes/ep3_medi_study.dds"
					alpha = 0.3
					margin_top = 40

					modify_texture = {
						blend_mode = alphaMultiply
						texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
					}
				}
				margin_bottom = 5

				vbox = {
					layoutpolicy_vertical = expanding

					# State Faith
					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_vertical = expanding
							margin_right = 10
							coa_title_small_crown = {
								datacontext = "[GovernmentAdministrationWindow.GetTitle]"
								datacontext = "[Title.GetHolder]"
							}

							background = {
								using = Background_Area
							}

							icon = {
								size = { 50 50 }
								texture = "[Title.GetStateFaith.GetIcon]"
							}

							vbox = {
								spacing = 2

								text_single = {
									text = "[Title.GetStateFaith.GetName]"
									using = Font_Size_Medium
								}

								text_single = {
									text = "[state_faith|E]"
									using = Font_Size_Small
								}
							}

							vbox = {
								margin_left = 10

								button_round = {
									datacontext = "[GetDecisionWithKey('change_state_faith')]"
									visible = "[Decision.IsShownForPlayer]"

									size = { 30 30 }

									onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
									tooltip = "[Decision.GetShortDescForPlayer]"
									using = tooltip_ne

									button_change = {
										parentanchor = center
										alwaystransparent = yes
										size = { 20 20 }
									}
								}

								button_round = {
									datacontext = "[GetDecisionWithKey('adopt_state_faith')]"
									visible = "[Decision.IsShownForPlayer]"
									onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
									tooltip = "[Decision.GetShortDescForPlayer]"
									using = tooltip_ne

									size = { 30 30 }

									button_plus = {
										parentanchor = center
										alwaystransparent = yes
										size = { 20 20 }
									}
								}
							}
						}
						expand = {}
					}
				}

				expand = {}

				hbox = {
					spacing = -2

					background = {
						using = Background_Area
						margin = { 4 4 }
					}

					button_round = {
						visible = "[Not(GetPlayer.IsIndependentRuler)]"

						enabled = "[Character.IsPlayerInteractionValid('request_governorship_interaction')]"
						tooltip = "[Character.GetPlayerInteractionTooltip('request_governorship_interaction')]"
						onclick = "[Character.OpenPlayerInteraction('request_governorship_interaction')]"

						button_grant_title_to_vassal = {
							parentanchor = center
							alwaystransparent = yes
						}
					}

					vbox = {
						visible = "[Not(GetPlayer.IsIndependentRuler)]"
						layoutpolicy_vertical = expanding
						spacing = -2

						button_round = {

							enabled = "[Character.IsPlayerInteractionValid('request_council_interaction')]"
							tooltip = "[Character.GetPlayerInteractionTooltip('request_council_interaction')]"
							onclick = "[Character.OpenPlayerInteraction('request_council_interaction')]"

							button_royal_court = {
								parentanchor = center
								alwaystransparent = yes
							}
						}

						button_round = {

							enabled = "[Character.IsPlayerInteractionValid('admin_vassal_modify_vassal_contract_interaction')]"
							tooltip = "[Character.GetPlayerInteractionTooltip('admin_vassal_modify_vassal_contract_interaction')]"
							onclick = "[Character.OpenPlayerInteraction('admin_vassal_modify_vassal_contract_interaction')]"

							button_add_laws = {
								parentanchor = center
								alwaystransparent = yes
							}
						}
					}

					vbox = {
						visible = "[Not(GetPlayer.IsIndependentRuler)]"
						layoutpolicy_vertical = expanding
						spacing = -2

						button_round = {

							enabled = "[Character.IsPlayerInteractionValid('start_foster_legitimacy_interaction')]"
							tooltip = "[Character.GetPlayerInteractionTooltip('start_foster_legitimacy_interaction')]"
							onclick = "[Character.OpenPlayerInteraction('start_foster_legitimacy_interaction')]"

							button_legitimacy = {
								parentanchor = center
								alwaystransparent = yes
							}
						}

						button_round = {

							enabled = "[Character.IsPlayerInteractionValid('start_damage_legitimacy_interaction')]"
							tooltip = "[Character.GetPlayerInteractionTooltip('start_damage_legitimacy_interaction')]"
							onclick = "[Character.OpenPlayerInteraction('start_damage_legitimacy_interaction')]"

							button_damage_legitimacy = {
								parentanchor = center
								alwaystransparent = yes
							}
						}
					}

					spacer = {
						size = { 4 1 }
					}

					portrait_head_small = {
						blockoverride "coa" {}
						blockoverride "portrait_button_template_tooltip" {}
					}
				}
			}

			hbox = {
				visible = "[GetPlayer.IsIndependentRuler]"
				layoutpolicy_horizontal = expanding
				margin_top = -15

				background = {
					spriteType = corneredTiled
					texture_density = 3
					texture = "gfx/interface/illustrations/event_scenes/ep3_medi_study.dds"
					alpha = 0.3
					margin_top = 40
					margin_bottom = 10
					modify_texture = {
						blend_mode = alphaMultiply
						texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
					}
				}

				datacontext = "[GovernmentAdministrationWindow.GetTitle]"
				datacontext = "[Title.GetHolder]"

				coa_title_tiny_crown = {
					datacontext = "[GovernmentAdministrationWindow.GetTitle]"
					datacontext = "[Title.GetHolder]"
				}

				# background = {
				# 	using = Background_Area
				# }

				icon = {
					size = { 45 45 }
					texture = "[Title.GetStateFaith.GetIcon]"
				}

				hbox = {
					spacing = 10

					text_single = {
						text = "[Title.GetStateFaith.GetName]"
						using = Font_Size_Medium
					}

					text_single = {
						text = "[state_faith|E]"
						using = Font_Size_Medium
					}
				}

				hbox = {
					margin_left = 10

					button_round = {
						datacontext = "[GetDecisionWithKey('change_state_faith')]"
						visible = "[Decision.IsShownForPlayer]"

						size = { 30 30 }

						onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
						tooltip = "[Decision.GetShortDescForPlayer]"
						using = tooltip_ne

						button_change = {
							parentanchor = center
							alwaystransparent = yes
							size = { 20 20 }
						}
					}

					button_round = {
						datacontext = "[GetDecisionWithKey('adopt_state_faith')]"
						visible = "[Decision.IsShownForPlayer]"
						onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
						tooltip = "[Decision.GetShortDescForPlayer]"
						using = tooltip_ne

						size = { 30 30 }

						button_plus = {
							parentanchor = center
							alwaystransparent = yes
							size = { 20 20 }
						}
					}
				}

				expand = {}

				text_single = {
					raw_text = "bav_counties_of_wrong_faith"
					align = right
					default_format = "#low"
					margin_right = 10
				}
			}


			hbox_tab_buttons = {
				name = "administration_tabs"

				blockoverride "tab_name"
				{
					text = "[PdxGuiTabItem.LocalizeTab( 'administraction_tab' )]"
				}

				blockoverride "on_click"
				{
					onclick = "[CloseGameView( 'admin_vassal_detail_view' )]"
				}
			}

			vbox = {
				name = "themes"
				visible = "[PdxGuiTabs.IsTabSet( 'themes' )]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				margin_top = 8
				margin_bottom = 20

				state = {
					name = _show
					on_start = "[SetMapMode( 'admin_vassal_types_map' )]"
				}

				state = {
					name = _hide
					on_start = "[SetMapMode( 'realms' )]"
				}

				hbox = {
					spacing = 4
					margin_bottom = 5

					# button_round = {
					# 	size = { 30 30 }
					# 	onclick = "[GetVariableSystem.Toggle('mass_directives')]"
					# 	raw_tooltip = "Give mass directives"
					# 	down = "[GetVariableSystem.Exists('mass_directives')]"
					# 	using = tooltip_sw
					#
					# 	button_give_directive = {
					# 		visible = "[Not(GetVariableSystem.Exists('mass_directives'))]"
					# 		parentanchor = center
					# 		alwaystransparent = yes
					# 	}
					#
					# 	button_close = {
					# 		visible = "[GetVariableSystem.Exists('mass_directives')]"
					# 		size = { 16 16 }
					# 		parentanchor = center
					# 		alwaystransparent = yes
					# 	}
					# }

					button_replace = {
						size = { 30 30 }
						onclick = "[GetVariableSystem.Toggle('big_theme_widgets')]"
						raw_tooltip = "Old view"
						using = tooltip_sw
					}

					hbox = {
						spacing = 2

						text_single = {
							text = "SORT_BY"
							align = nobaseline
						}

						dropdown_menu_standard = {
							blockoverride "dropdown_properties"
							{
								datamodel = "[GovernmentAdministrationWindow.GetOrderOptions]"
								onselectionchanged = "[GovernmentAdministrationWindow.SortThemes]"
								selectedindex = "[GovernmentAdministrationWindow.GetSortSelectedIndex]"
							}

							blockoverride "dropdown_active_item_properties"
							{
								text = "[ThemeOrderOption.GetName]"
							}

							blockoverride "dropdown_item_properties"
							{
								text = "[ThemeOrderOption.GetName]"
							}
						}
					}

					spacer = {
						size = { 12 0 }
					}

					button_standard = {
						name = "sort_order"
						size = { 25 25 }
						onclick = "[GovernmentAdministrationWindow.ReverseSortOrder]"

						tooltip = "ADMIN_WINDOW_THEME_SORT_BY"
						using = tooltip_nw

						button_icon = {
							alwaystransparent = yes
							parentanchor = center
							size = { 25 25 }
							texture = "gfx/interface/icons/flat_icons/sort_icon.dds"
							framesize = { 66 66 }

							#frame = "[BoolTo1And2(GovernmentAdministrationWindow.GetSortOrder)]"

							blockoverride "button_frames"
							{
								effectname = "NoHighlight"
							}
						}
					}

					button_checkbox_label = {
						onclick = "[GovernmentAdministrationWindow.ToggleGroupByHouse]"
						blockoverride "checkbox"
						{
							checked = "[GovernmentAdministrationWindow.ShouldGroupByHouse]"
						}

						blockoverride "text"
						{
							text = "ADMIN_WINDOW_THEME_GROUP_BY_HOUSE"
						}
					}
				}

				flowcontainer = {
					visible = "[GetVariableSystem.Exists('mass_directives')]"
					ignoreinvisible = yes
					layoutpolicy_horizontal = expanding
					margin_left = 25

					button_round = {
						size = { 30 30 }
						onclick = "[GetVariableSystem.Toggle('mass_directives')]"
						raw_tooltip = "Give mass directives"
						using = tooltip_sw

						button_give_directive = {
							parentanchor = center
							alwaystransparent = yes
						}
					}


				}

				scrollbox = {
					size = { 560 0 }
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						vbox_themes_list = {
							name = "themes_list"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
						}
					}
				}
			}

			vbox = {
				name = "powerful_families"
				widgetid = "powerful_families"
				visible = "[PdxGuiTabs.IsTabSet( 'families' )]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				margin_top = 10
				margin_bottom = 10

				scrollbox = {
					size = { 560 0 }
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						vbox = {
							name = "family_groups_container"
							spacing = 2

							layoutpolicy_horizontal = expanding

							datamodel = "[GovernmentAdministrationWindow.GetFamilyGroups]"
							item = {
								vbox_family_group_foldout = {}
							}
						}
					}
				}
			}
		}

		window = {
			name = "featured_house_members_window"
			datacontext = "[GovernmentAdministrationWindow.GetFeaturedHouse]"
			visible = "[DynastyHouse.IsValid]"

			position = { -560 170 }
			size = { 600 820 }

			resizable = no
			layer = middle

			using = Window_Movable
			using = Window_Background
			using = Window_Decoration
			using = Window_Size_CharacterList

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "ADMIN_WINDOW_MEMBERS_OF_HOUSE_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[GovernmentAdministrationWindow.ClearFeaturedHouse]"
					}
				}

				vbox_character_list = {
					datacontext = "[GovernmentAdministrationWindow.GetHouseMembersList]"

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "container_implementation" {
						fixedgridbox = {
							addcolumn = 485
							addrow = 120
							datamodel_reuse_widgets = yes

							datamodel = "[CharacterSelectionList.GetList]"
							item = {
								widget_house_member_item = {
									size = { 485 120 }
								}
							}
						}
					}
				}
			}
		}
	}
}
