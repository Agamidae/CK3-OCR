window = {
	name = "window_tax_slot_assign_vassal"
	using = base_ocr_window
	layer = middle
	allow_outside = yes

	state = {
		name = _hide
		on_finish = "[Set('assign_tax_tip', 'yes')]"
	}

	window_ocr = {
		datacontext = "[TaxSlotAssignVassalWindow.GetVassal]"
		blockoverride "ocr_header" {
			header_text = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_HEADER"
				}
				blockoverride "extra" {
					text_single = {
						raw_text = "for [Character.GetFirstNameNoTooltip]"
					}

					dot_l = {}
				}
				blockoverride "dot" {
					visible = no
				}

				blockoverride "button_close"
				{
					onclick = "[TaxSlotAssignVassalWindow.Close]"
				}
			}
		}
		blockoverride "ocr_content" {
			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				vbox  = {
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							visible = "[TaxSlotAssignVassalWindow.HasSelectedTaxSlot]"
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 3

								text_single = {
									raw_text = "Effects: "
								}

								text_single = {
									raw_text = "[Character.GetFirstNameNoTooltip] will be assigned to"
								}

								hbox = {
									datamodel = "[TaxSlotAssignVassalWindow.GetTaxSlots]"
									item = {
										text_single = {
											visible = "[TaxSlotAssignVassalWindow.IsTaxSlotSelected( TaxSlotItem.Self )]"
											max_width = "430"
											raw_text = "[TaxSlotItem.GetTaxSlot.GetName]"
										}
									}
								}

								dot_l = {}

								expand = {}
							}


							hbox = {
								name = "vassal_contributions"
								layoutpolicy_horizontal = expanding
								spacing = 3

								text_single = {
									datacontext = "[TaxSlotAssignVassalWindow.GetVassal]"
									raw_text = "[Character.GetHerHis|U] taxes will be:"
								}

								text_single = {

									datacontext = "[TaxSlotAssignVassalWindow.GetVassalTaxBreakdown]"
									datacontext = "[TaxSlotAssignVassalWindow.GetVassal]"
									raw_text = "gold [ValueBreakdown.GetValue],"

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "sub_header" {}

											blockoverride "descriptive_text"
											{
												text = "VASSAL_TAX_CONTRIBUTION_DESC"
											}
										}
									}
									using = tooltip_ws
								}

								text_single = {
									datacontext = "[TaxSlotAssignVassalWindow.GetVassalLevyBreakdown]"
									datacontext = "[TaxSlotAssignVassalWindow.GetVassal]"
									raw_text = "levies [ValueBreakdown.GetValue]."

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "sub_header" {}

											blockoverride "descriptive_text"
											{
												text = "VASSAL_LEVIES_CONTRIBUTION_DESC"
											}

											blockoverride "contribution_icon"
											{
												texture = "gfx/interface/icons/icon_soldier.dds"
											}
										}
									}
									using = tooltip_ws
								}

								expand = {}
							}

							hbox = {
								name = "total_contributions"
								spacing = 3
								layoutpolicy_horizontal = expanding

								text_single = {
									text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_CONTRIBUTION"
								}

								text_single = {

									datacontext = "[TaxSlotAssignVassalWindow.GetTotalTaxBreakdown]"
									datacontext = "[TaxSlotAssignVassalWindow.GetLiege]"

									raw_text = "gold [ValueBreakdown.GetValue],"

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "descriptive_text"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_TOTAL_TAX_DESC"
											}

											blockoverride "sub_header" {
												text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_SUB_HEADER"
											}
										}
									}
									using = tooltip_ws
								}

								text_single = {
									datacontext = "[TaxSlotAssignVassalWindow.GetTotalLevyBreakdown]"
									datacontext = "[TaxSlotAssignVassalWindow.GetLiege]"

									raw_text = "levies [ValueBreakdown.GetValue]."

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "descriptive_text"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_TOTAL_LEVIES_DESC"
											}

											blockoverride "sub_header" {
												text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_SUB_HEADER"
											}

											blockoverride "contribution_icon"
											{
												texture = "gfx/interface/icons/icon_soldier.dds"
											}
										}
									}
									using = tooltip_ws
								}

								expand = {}
							}

							expand = {}
						}
					}

					button_primary_text = {
						layoutpolicy_horizontal = expanding
						blockoverride "text" {
							raw_text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_ASSIGN_BUTTON"
						}
						visible = "[TaxSlotAssignVassalWindow.HasSelectedTaxSlot]"
						onclick = "[TaxSlotAssignVassalWindow.AssignVassal]"
						onclick = "[TaxSlotAssignVassalWindow.Close]"
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						text_multi_wide = {
							visible = "[Isnt('assign_tax_tip')]"
							text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_DESC"
						}
						expand = {}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						datacontext = "[TaxSlotAssignVassalWindow.GetVassal]"

						hbox = {
							name = "assigned vassal"
							layoutpolicy_horizontal = expanding

							visible = "[Character.IsAssignedAsTaxpayer]"

							datacontext = "[TaxSlotAssignVassalWindow.GetAssignedTaxSlot]"
							datacontext = "[TaxSlotItem.GetTaxSlot]"

							vbox = {
								layoutpolicy_horizontal = expanding
								datacontext = "[TaxSlot.GetTaxCollector]"

								hbox = {
									visible = "[TaxSlotItem.HasTaxCollector]"
									layoutpolicy_horizontal = expanding
									spacing = 3

									text_single = {
										raw_text = "Currently in [Character.GetFirstNamePossessiveOrMyNoTooltip] jurisdiction,"
									}

									text_single = {
										text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_TAX_COLLECTOR_APTITUDE"
									}

									dot_l = {}

									expand = {}
								}

								button_text = {
									layoutpolicy_horizontal = expanding
									visible = "[Not(TaxSlotItem.HasTaxCollector)]"
									blockoverride "text" {
										raw_text = "Currently in [TaxSlot.GetName], click to appoint a collector."
									}
									onclick = "[ToggleGameViewData( 'tax_slot_appoint_tax_collector', TaxSlotItem.GetTaxSlot.GetID )]"
								}


								button_text = {
									layoutpolicy_horizontal = expanding
									datacontext = "[TaxSlot.GetObligation]"
									blockoverride "text" {
										raw_text = "[TaxSlotObligation.GetNameNoTooltip], click to change."
									}

									tooltipwidget = {
										tax_slot_obligation_tooltip = {
											blockoverride "input_info_text"
											{
												text = "TAX_OPTION_TOOLTIP_CLICK_TO_SELECT"
											}
										}
									}

									onclick = "[ToggleGameViewData( 'tax_slot_obligations', TaxSlot.GetID )]"
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									spacing = 3
									text_single = {
										text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
									}
									comma = {}

									hbox = {
										layoutpolicy_horizontal  = expanding
										spacing = 3
										text_single = {
											datacontext = "[TaxSlotItem.GetTaxBreakdown]"
											text = "TAX_SLOT_TAX_CONTRIBUTION"

											tooltipwidget = {
												tax_contribution_tooltip = {}
											}
											using = tooltip_ws
										}

										comma = {}

										text_single = {
											raw_text = "levies"
										}
										text_single = {
											datacontext = "[TaxSlotItem.GetLevyBreakdown]"
											text = "TAX_SLOT_LEVY_CONTRIBUTION"

											tooltipwidget = {
												tax_contribution_tooltip = {
													blockoverride "descriptive_text"
													{
														text = "TAX_SLOT_VASSAL_WINDOW_TAX_SLOT_LEVIES_DESC"
													}

													blockoverride "contribution_icon"
													{
														texture = "gfx/interface/icons/icon_soldier.dds"
													}
												}
											}
											using = tooltip_ws
										}

										dot_l = {}

										expand = {}
									}
								}
							}
						}

						hbox = {
							name = "unasigned_vassal"
							layoutpolicy_horizontal = expanding
							visible = "[Not( Character.IsAssignedAsTaxpayer )]"
							text_single = {
								layoutpolicy_horizontal = expanding
								text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_CURRENT_TAX_SLOT_UNASSIGNED"
							}
						}
					}
				}

				scrollbox = {
					name = "tax_jurisdictions"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content" {
						text_single = {
							layoutpolicy_horizontal = expanding
							raw_text = "[GetDataModelSize(TaxSlotAssignVassalWindow.GetTaxSlots)] other jurisdictions:"
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							datamodel = "[TaxSlotAssignVassalWindow.GetTaxSlots]"
							item = {
								tax_slot_item_ocr = {
									enabled = "[TaxSlotAssignVassalWindow.CanSelectTaxSlot( TaxSlot.Self )]"
									blockoverride "tax_select" {
										text_single = {
											visible = "[Not(TaxSlotAssignVassalWindow.CanSelectTaxSlot( TaxSlot.Self ))]"
											raw_text = "Can't pick"
										}
										text_single = {
											visible = "[TaxSlotAssignVassalWindow.IsTaxSlotSelected( TaxSlotItem.Self )]"
											raw_text = "Selected"
										}
									}
									blockoverride "tax_click" {
										onclick = "[TaxSlotAssignVassalWindow.ToggleSelectedTaxSlot( TaxSlotItem.Self )]"

										tooltip = "[TaxSlotAssignVassalWindow.GetCanSelectTaxSlotDesc( TaxSlot.Self )]"
									}
									blockoverride "name" {
									}
									blockoverride "appoint" {
										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 3

											text_single = {
												raw_text = "[TaxSlot.GetTaxedVassalsAmount] out of [TaxSlot.GetVassalLimit] taxpayers,"
											}

											text_single = {
												raw_text = "[TaxSlot.GetObligation.GetName]."
											}

											expand = {}
										}
									}
									blockoverride "taxpayers" {
									}
								}
							}
						}
					}

					blockoverride "scrollbox_empty"
					{
						text = "TAX_SLOT_ASSIGN_VASSAL_VIEW_NO_AVAILABLE_TAX_SLOT"
						visible = "[IsDataModelEmpty( TaxSlotAssignVassalWindow.GetTaxSlots )]"
					}
				}
			}
		}
	}

	window_tax_slot_assign_vassal_old = {}
}

types OCR
{
	type current_assigned_tax_slot_vbox_ocr = vbox {
		layoutpolicy_horizontal = expanding
		block "tax_slot_gui_item_datacontext"
		{
			datacontext = "[TaxSlotAssignVassalWindow.GetAssignedTaxSlot]"
		}

		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"
		datacontext = "[TaxSlot.GetTaxSlotType]"

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				layoutpolicy_horizontal = expanding
				hbox = {
					layoutpolicy_horizontal = expanding

					text_label_left = {
						raw_text = "#D Current tax_jurisdiction: [TaxSlot.GetName]#!"

					}

					expand = {}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					text_single = {
						text = "[TaxSlot.GetName]"
					}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					tax_collector_aptitude_text = {}

					expand = {}
				}
				hbox = {
					layoutpolicy_horizontal = expanding
					debug_square = {

					}

					text_single = {
						text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
					}

					expand = {}

					text_single = {
						text = "TAX_SLOT_TAX_CONTRIBUTION"
					}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					text_single = {
						text = "TAX_SLOT_LEVY_CONTRIBUTION"
					}

					expand = {}
				}

				expand = {}
			}
		}
	}

	type tax_slot_assign_vassal_item_ocr = hbox {
		layoutpolicy_horizontal = expanding
		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"
		datacontext = "[TaxSlot.GetTaxSlotType]"


		button_standard_clean = {
			layoutpolicy_horizontal = expanding
			enabled = "[TaxSlotAssignVassalWindow.CanSelectTaxSlot( TaxSlot.Self )]"
			onclick = "[TaxSlotAssignVassalWindow.ToggleSelectedTaxSlot( TaxSlotItem.Self )]"
			down = "[TaxSlotAssignVassalWindow.IsTaxSlotSelected( TaxSlotItem.Self )]"

			tooltip = "[TaxSlotAssignVassalWindow.GetCanSelectTaxSlotDesc( TaxSlot.Self )]"

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				hbox = {
					layoutpolicy_horizontal = expanding

					text_single = {
						text = "[TaxSlot.GetName]"
					}

					expand = {}

					tax_collector_aptitude_text = {
						visible = "[TaxSlotItem.HasTaxCollector]"
					}
				}

				hbox = {
					visible = "[TaxSlotItem.HasTaxCollector]"
					layoutpolicy_horizontal = expanding


					text_single = {
						text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
					}

					hbox = {
						layoutpolicy_horizontal  = expanding
						text_single = {
							datacontext = "[TaxSlotItem.GetTaxBreakdown]"
							text = "TAX_SLOT_TAX_CONTRIBUTION"

							tooltipwidget = {
								tax_contribution_tooltip = {}
							}
							using = tooltip_ws
						}

						divider_light = {
							layoutpolicy_vertical = expanding
						}

						text_single = {
							datacontext = "[TaxSlotItem.GetLevyBreakdown]"
							text = "TAX_SLOT_LEVY_CONTRIBUTION"

							tooltipwidget = {
								tax_contribution_tooltip = {
									blockoverride "descriptive_text"
									{
										text = "TAX_SLOT_VASSAL_WINDOW_TAX_SLOT_LEVIES_DESC"
									}

									blockoverride "contribution_icon"
									{
										texture = "gfx/interface/icons/icon_soldier.dds"
									}
								}
							}
							using = tooltip_ws
						}

						expand = {}
					}
				}

				expand = {}
			}
		}
	}
}

types TaxSlotAssignVassalWindowTypes
{
	type current_assigned_tax_slot_vbox = vbox {
		layoutpolicy_horizontal = expanding
		margin = { 10 0 }

		block "tax_slot_gui_item_datacontext"
		{
			datacontext = "[TaxSlotAssignVassalWindow.GetAssignedTaxSlot]"
		}

		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"
		datacontext = "[TaxSlot.GetTaxSlotType]"

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				hbox = {
					layoutpolicy_horizontal = expanding

					text_label_left = {
						raw_text = "#D Current tax_jurisdiction: [TaxSlot.GetName]#!"
						using = Font_Size_Medium
					}

					expand = {}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 10

					text_single = {
						text = "[TaxSlot.GetName]"
					}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					tax_collector_aptitude_text = {}

					expand = {}
				}


				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 10

					debug_square = {
						size = { 30 30 }
					}

					text_single = {
						text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
					}

					expand = {}

					text_single = {
						text = "TAX_SLOT_TAX_CONTRIBUTION"
					}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					text_single = {
						text = "TAX_SLOT_LEVY_CONTRIBUTION"
					}

					expand = {}
				}

				expand = {}
			}

			debug_square = {
				size = { 75 75 }
			}
		}
	}

	type tax_slot_assign_vassal_item = hbox {
		layoutpolicy_horizontal = expanding
		spacing = 10

		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"
		datacontext = "[TaxSlot.GetTaxSlotType]"

		portrait_head_small = {
			enabled = "[TaxSlotItem.HasTaxCollector]"

			blockoverride "portrait_button_template_tooltip"
			{
				tooltip = "TAX_SLOT_ADD_NEW_TAX_COLLECTOR_BUTTON"
			}
		}

		button_standard_clean = {
			size = { 490 85 }

			enabled = "[TaxSlotAssignVassalWindow.CanSelectTaxSlot( TaxSlot.Self )]"
			onclick = "[TaxSlotAssignVassalWindow.ToggleSelectedTaxSlot( TaxSlotItem.Self )]"
			down = "[TaxSlotAssignVassalWindow.IsTaxSlotSelected( TaxSlotItem.Self )]"

			tooltip = "[TaxSlotAssignVassalWindow.GetCanSelectTaxSlotDesc( TaxSlot.Self )]"

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				margin = { 15 10 }
				spacing = 5

				hbox = {
					layoutpolicy_horizontal = expanding

					text_single = {
						text = "[TaxSlot.GetName]"
						align = nobaseline
						max_width = 300
					}

					expand = {}

					tax_collector_aptitude_text = {
						align = nobaseline
						max_width = 180
					}
				}

				expand = {}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 20

					text_single = {
						text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
					}

					hbox = {
						layoutpolicy_horizontal  = expanding
						spacing = 10

						text_single = {
							datacontext = "[TaxSlotItem.GetTaxBreakdown]"
							text = "TAX_SLOT_TAX_CONTRIBUTION"

							tooltipwidget = {
								tax_contribution_tooltip = {}
							}
							using = tooltip_ws
						}

						divider_light = {
							layoutpolicy_vertical = expanding
						}

						text_single = {
							datacontext = "[TaxSlotItem.GetLevyBreakdown]"
							text = "TAX_SLOT_LEVY_CONTRIBUTION"

							tooltipwidget = {
								tax_contribution_tooltip = {
									blockoverride "descriptive_text"
									{
										text = "TAX_SLOT_VASSAL_WINDOW_TAX_SLOT_LEVIES_DESC"
									}

									blockoverride "contribution_icon"
									{
										texture = "gfx/interface/icons/icon_soldier.dds"
									}
								}
							}
							using = tooltip_ws
						}

						expand = {}
					}
				}
			}
		}
	}
}
