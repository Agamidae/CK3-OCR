window = {
	name = "jomini_encyclopedia"
	size = { 100% 100% }
	movable = no
	layer = top

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
		using =	Sound_Window_AmbienceMute_Snapshot
		on_start = "[Encyclopedia.ViewAllEntries]"
		on_start = "[PdxGuiTriggerAllAnimations('hide_wiki')]"
		on_start = "[PdxGuiTriggerAllAnimations('hide_wiki_entries')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
		on_start = "[PdxGuiTriggerAllAnimations('hide_wiki')]"
		on_start = "[PdxGuiTriggerAllAnimations('hide_wiki_entries')]"
	}

	widget = {
		parentanchor = center
		size = { 100% 100% }
		alwaystransparent = no

		using = Window_Background_No_Edge

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 15 5 }

			vbox = {
			    layoutpolicy_horizontal = expanding
				visible = "[GetVariableSystem.Exists('select_page')]"

				button_text = {
					layoutpolicy_horizontal = expanding
					shortcut = close_window

					blockoverride "text" {
						raw_text = "[GetDataModelSize(Encyclopedia.AccessPages)] Categories. Close, Escape."
					}
					onclick = "[GetVariableSystem.Clear('select_page')]"
				}

				hbox = {
				    layoutpolicy_horizontal = expanding

					vbox = {
						datamodel = "[Encyclopedia.AccessPages]"

						item = {
							button_tab_vertical = {
								size = { 175 35 }
								onclick = "[PdxGuiTriggerAllAnimations('hide_wiki_entries')]"
								onclick = "[PdxGuiWidget.TriggerAnimation('prev_search_in_category')]"
								# visible = "[Not(ObjectsEqual( Encyclopedia.GetCurrentPage, EncyclopediaPage.Self ))]"
								# onclick = "[PdxGuiTriggerAllAnimations('prev_search_in_category')]"

								# state = {
								# 	name = change_page
								# 	delay = 0.1
								#
								# 	next = prev_search_in_category
								# }

								state = {
									name = prev_search_in_category
									delay = 0.2
									on_finish = "[Encyclopedia.SetCurrentPage( EncyclopediaPage.AccessSelf )]"
									# on_finish = "[Encyclopedia.FilterFromHistoryBack]"
									# on_finish = "[Encyclopedia.FilterFromHistoryForward]"
									on_finish = "[EncyclopediaPage.FilterFromText]"
									on_finish = "[GetVariableSystem.Clear('select_page')]"
									on_finish = "[PdxGuiTriggerAllAnimations('show_wiki_entries')]"
								}

								text_single = {
									raw_text = " [EncyclopediaPage.GetTitle]."
								}
							}
						}
					}

				    expand = { }
				}


			    expand = { }
			}
			header_pattern = {
				layoutpolicy_horizontal = expanding
				size = { 0 30 }

				blockoverride "header_text"
				{
					# raw_text = "[Localize('HEADING_ENCYCLOPEDIA')]."
				}

				blockoverride "button_close"
				{

					tooltip = "TOOLTIP_CLOSE_ENCYCLOPEDIA"
					onclick = "[Encyclopedia.Hide]"
					size = { 0 0 }
					visible = "[Not(GetVariableSystem.Exists('select_page'))]"
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 3
					text_single = {
						raw_text = "[Localize('HEADING_ENCYCLOPEDIA')]."
					}

					text_single = {
						state = {
							name = show_wiki
							on_start = "[PdxGuiWidget.Show]"
						}
						state = {
							name = show_results
							on_start = "[PdxGuiWidget.Show]"
						}
						state = {
							name = hide_wiki
							on_start = "[PdxGuiWidget.Hide]"
						}
						visible = no
						raw_text = "[GetDataModelSize(Encyclopedia.GetViewedEntries)] results."
					}

					expand = { }
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[Encyclopedia.AccessCurrentPage]"
				name = "search_controls"

				hbox = {
					layoutpolicy_horizontal = expanding

					editbox_search_field =	{
						min_width = 500
						blockoverride "editbox_properties" {
							focus_on_visible = yes
							name = "search_input" # Do not change name, it is referenced from code
							onreturnpressed = "[EncyclopediaPage.FilterFromText]"
							maxcharacters = 100
							ontextchanged = "[PdxGuiWidget.FindChild('text').Hide]"
							onreturnpressed = "[PdxGuiTriggerAllAnimations('show_wiki')]"
							onreturnpressed = "[PdxGuiTriggerAllAnimations('show_wiki_entries')]"

							text_single = {
								state = {
									name = hide_wiki
									on_start = "[PdxGuiWidget.Show]"
								}
								name = "text"
								margin_left = 5
								raw_text = "You may start typing. Press Enter to search."
							}
						}
					}

					expand = { }
				}

				# text_single = {
				# 	layoutpolicy_horizontal = expanding
				# 	state = {
				# 		name = show_wiki
				# 		on_start = "[PdxGuiWidget.Show]"
				# 	}
				# 	state = {
				# 		name = hide_wiki
				# 		on_start = "[PdxGuiWidget.Hide]"
				# 	}
				# 	raw_text = "Text field is in focus."
				# }


				vbox = {
					layoutpolicy_horizontal = expanding
					spacing = 3

					button_text = {
						layoutpolicy_horizontal = expanding
						blockoverride "text" {
							raw_text = "RESET_SEARCH_ENCYCLOPEDIA_TOOLTIP"
						}
						blockoverride "extra" {
							text_single = {
								margin_left = -3
								raw_text = ", or Backspace"
							}
						}
						blockoverride "dot" { margin_top = 1 }
						onclick = "[PdxGuiTriggerAllAnimations('hide_wiki')]"
						onclick = "[PdxGuiTriggerAllAnimations('hide_wiki_entries')]"
						onclick = "[PdxGuiWidget.AccessParent.TriggerAnimation('clear_search')]"
						onclick = "[PdxGuiWidget.AccessParent.AccessParent.FindChild('text').Show]"
						# visible = "[Encyclopedia.CanFilterFromHistoryBack]"
					}

					state = {
						name = clear_search
						delay = 0.2
						on_finish = "[EncyclopediaPage.ResetFilter]"
						# on_finish = "[PdxGuiTriggerAllAnimations('show_wiki_entries')]"
					}

					button_text = {
						layoutpolicy_horizontal = expanding
						blockoverride "text" {
							raw_text = "Previous result."
						}
						blockoverride "extra" {
							text_single = {
								visible = no
								state = {
									name = show_wiki
									on_start = "[PdxGuiWidget.Show]"
								}
								state = {
									name = hide_wiki
									on_start = "[PdxGuiWidget.Hide]"
								}
								raw_text = " Up arrow key."
							}
						}
						visible = "[Encyclopedia.CanFilterFromHistoryBack]"
						onclick = "[Encyclopedia.FilterFromHistoryBack]"
						onclick = "[EncyclopediaPage.FilterFromText]"
						onclick = "[PdxGuiTriggerAllAnimations('show_results')]"
						onclick = "[PdxGuiTriggerAllAnimations('show_wiki_entries')]"
						using = tooltip_se
					}

					button_text = {
						layoutpolicy_horizontal = expanding
						blockoverride "text" {
							raw_text = "Next result."
						}
						blockoverride "extra" {
							text_single = {
								visible = no
								state = {
									name = show_wiki
									on_start = "[PdxGuiWidget.Show]"
								}
								state = {
									name = hide_wiki
									on_start = "[PdxGuiWidget.Hide]"
								}
								raw_text = " Down arrow key."
							}
						}
						visible = "[Encyclopedia.CanFilterFromHistoryForward]"
						onclick = "[Encyclopedia.FilterFromHistoryForward]"
						onclick = "[PdxGuiTriggerAllAnimations('show_results')]"
						onclick = "[PdxGuiTriggerAllAnimations('show_wiki_entries')]"
					}
				}
			}



			hbox = {
				name = "main"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				vbox = {
					layoutpolicy_vertical = expanding
					margin_right = 20
					margin_top = 10

					text_single = {
						raw_text = "Selected category:"
						visible = "[Not(ObjectsEqual( Encyclopedia.GetCurrentPage, Encyclopedia.GetAllPage ))]"
					}

					text_single = {
						visible = "[ObjectsEqual( Encyclopedia.GetCurrentPage, Encyclopedia.GetAllPage )]"
						raw_text = "Searching in all entries."
					}

					vbox = {
						name = "entries"
						datamodel = "[Encyclopedia.AccessPages]"
						layoutpolicy_horizontal = expanding

						item = {
							button_tab_vertical = {
								name = "select_page"
								layoutpolicy_horizontal = expanding
								size = { 175 35 }
								onclick = "[Encyclopedia.SetCurrentPage( EncyclopediaPage.AccessSelf )]"
								down = "[ObjectsEqual( Encyclopedia.GetCurrentPage, EncyclopediaPage.Self )]"
								visible = "[ObjectsEqual( Encyclopedia.GetCurrentPage, EncyclopediaPage.Self )]"

								text_single = {
									text = "[EncyclopediaPage.GetTitle]"
								}
							}
						}
					}

					button_text = {
						blockoverride "text" {
							raw_text = "Select a category."
						}
						onclick = "[GetVariableSystem.Toggle('select_page')]"
					}

					button_tab_vertical = {
						name = "select_page"
						layoutpolicy_horizontal = expanding
						size = { 175 35 }
						raw_text = "Search in all entries."
						onclick = "[PdxGuiTriggerAllAnimations('hide_wiki')]"
						onclick = "[PdxGuiTriggerAllAnimations('hide_wiki_entries')]"
						onclick = "[PdxGuiTriggerAllAnimations('search_all')]"

						visible = "[Not(ObjectsEqual( Encyclopedia.GetCurrentPage, Encyclopedia.GetAllPage ))]"
					}

					state = {
						name = search_all
						delay = 0.1
						on_finish = "[Encyclopedia.ViewAllEntries]"
						on_finish = "[PdxGuiTriggerAllAnimations('hide_wiki')]"
					}

					expand = { }
				}

				vbox = {
					name = "current"
					datacontext = "[Encyclopedia.AccessCurrentPage]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_top = 10
					spacing = 10
					visible = no

					state = {
						name = hide_wiki_entries
						on_start = "[PdxGuiWidget.Hide]"
					}

					state = {
						name = show_wiki_entries
						on_start = "[PdxGuiWidget.Show]"
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/sfx_ui_generic_select"
						}
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content" {

							datamodel = "[Encyclopedia.GetViewedEntries]"

							item = {
								vbox = {
									layoutpolicy_horizontal = expanding
									datacontext = "[EncyclopediaEntryView.Get]"
									margin_bottom = 5
									spacing = 5

									background = {
										using = Background_Area
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										# margin = { 20 0 }

										background = {
											using = Background_Area_Dark
											alpha = 0.4
										}

										text_single = {
											name = "title"
											layoutpolicy_horizontal = expanding
											raw_text = "[EncyclopediaEntry.GetTitle]."
										}
									}

									hbox = {
									    layoutpolicy_horizontal = expanding

										text_multi = {
											layoutpolicy_horizontal = expanding
											name = "body"
											autoresize = yes
											max_width = 900
											min_width = 900
											text = "[EncyclopediaEntry.GetBody]"
											# margin = { 20 0 }
										}

									    expand = { }
									}

								}
							}
						}
					}
				}

				expand = { }
			}
		}
	}
}
