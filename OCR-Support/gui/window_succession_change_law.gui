######################################################
############### CHANGE SUCCESSION LAW ################
######################################################

window = {
	name = "succession_law_change_window"
	using = base_ocr_window
	layer = middle

	state = {
		name = _show
		on_finish = "[Clear('succession_law')]"
	}

	window_ocr = {
		blockoverride "ocr_header" {
			button = {
				shortcut = close_window
				visible = "[Is('succession_law')]"
				onclick = "[Clear('succession_law')]"
			}
			header_text = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "SUCCESSION_LAW_CHANGE_WINDOW_TITLE"
				}

				blockoverride "button_close"
				{
					visible = "[Isnt('succession_law')]"
					onclick = "[SuccessionLawChangeWindow.Close]"
				}
			}

		}
		blockoverride "ocr_content" {
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				vbox = {
					name = "new_laws_selection"
					layoutpolicy_horizontal = expanding

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "SUCCESSION_LAW_CHANGE_WINDOW_CHOOSE_NEW"
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetPartitionLaws)]"

						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Or(Isnt('succession_law'), Has('succession_law', 'plural'))]"

							button_text = {
								layoutpolicy_horizontal = expanding
								button = {
									shortcut = speed_1
									visible = "[Isnt('succession_law')]"
									onclick = "[Set('succession_law', 'plural')]"
								}
								onclick = "[Set('succession_law', 'plural')]"

								blockoverride "extra" {
									text_single = {
										visible = "[Isnt('succession_law')]"
										raw_text = "1, "
									}
									text_single = {
										text = "SUCCESSION_LAW_CHANGE_WINDOW_PARTITION_LAWS"
									}
									comma = {}

									text_single = {
										raw_text = "[GetDataModelSize(SuccessionLawChangeWindow.GetPartitionLaws)] laws:"
									}
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[SuccessionLawChangeWindow.GetPartitionLaws]"

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding
										button_law_choice_ocr = { }
										button_clan_law_choice_ocr = { }
									}
								}
							}
						}
					}

					vbox = {
						visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetSingleHeirLaws)]"
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Or(Isnt('succession_law'), Has('succession_law', 'single'))]"

							button_text = {
								layoutpolicy_horizontal = expanding
								button = {
									shortcut = speed_2
									visible = "[Isnt('succession_law')]"
									onclick = "[Set('succession_law', 'single')]"
								}
								onclick = "[Set('succession_law', 'single')]"

								blockoverride "extra" {
									text_single = {
										visible = "[Isnt('succession_law')]"
										raw_text = "2, "
									}
									text_single = {
										text = "SUCCESSION_LAW_CHANGE_WINDOW_SINGLE_HEIR_LAWS"
									}
									comma = {}

									text_single = {
										raw_text = "[GetDataModelSize(SuccessionLawChangeWindow.GetSingleHeirLaws)] laws:"
									}
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[SuccessionLawChangeWindow.GetSingleHeirLaws]"

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding
										button_law_choice_ocr = { }
										button_clan_law_choice_ocr = { }
									}
								}
							}
						}

					}

					vbox = {
						visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetOtherLaws)]"
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Or(Isnt('succession_law'), Has('succession_law', 'other'))]"

							button_text = {
								layoutpolicy_horizontal = expanding
								button = {
									shortcut = speed_3
									visible = "[Isnt('succession_law')]"
									onclick = "[Set('succession_law', 'other')]"
								}
								onclick = "[Set('succession_law', 'other')]"

								blockoverride "extra" {
									text_single = {
										visible = "[Isnt('succession_law')]"
										raw_text = "3, "
									}
									text_single = {
										raw_text = "Other"
									}
									comma = {}

									text_single = {
										raw_text = "[GetDataModelSize(SuccessionLawChangeWindow.GetOtherLaws)] laws:"
									}
								}
							}

							vbox = {
								datamodel = "[SuccessionLawChangeWindow.GetOtherLaws]"
								layoutpolicy_horizontal = expanding

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding
										button_law_choice_ocr = { }
										button_clan_law_choice_ocr = { }
									}
								}
							}
						}
					}

					vbox = {
						visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetAppointmentLaws)]"
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Or(Isnt('succession_law'), Has('succession_law', 'appoint'))]"

							button_text = {
								layoutpolicy_horizontal = expanding
								button = {
									shortcut = speed_4
									visible = "[Isnt('succession_law')]"
									onclick = "[Set('succession_law', 'appoint')]"
								}
								onclick = "[Set('succession_law', 'appoint')]"

								blockoverride "extra" {
									text_single = {
										visible = "[Isnt('succession_law')]"
										raw_text = "4, "
									}
									text_single = {
										raw_text = "SUCCESSION_LAW_CHANGE_WINDOW_APPOINTMENT_LAWS"
									}
									comma = {}

									text_single = {
										raw_text = "[GetDataModelSize(SuccessionLawChangeWindow.GetAppointmentLaws)] laws:"
									}
								}
							}

							vbox = {
								datamodel = "[SuccessionLawChangeWindow.GetAppointmentLaws]"
								layoutpolicy_horizontal = expanding

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding
										button_law_choice_ocr = { }
										button_clan_law_choice_ocr = { }
									}
								}
							}
						}
					}
				}

				# preview
				vbox = {
					layoutpolicy_horizontal = expanding
					visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.IsEnacted)]"

					# not clan
					vbox = {
						layoutpolicy_horizontal = expanding
						visible = "[SuccessionLawChangeWindow.GetSelectedLaw.ShouldBeApproved]"

						vbox = {
							name = "footer"
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "SUCCESSION_LAW_CHANGE_WINDOW_ENACT_COST"
								tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_ENACT_COST_TOOLTIP"
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								name = "control_buttons"

								button_primary_text = {
									layoutpolicy_horizontal = expanding
									name = "enact_button"
									enabled = "[SuccessionLawChangeWindow.GetSelectedLaw.CanEnact]"
									onclick = "[SuccessionLawChangeWindow.GetSelectedLaw.Enact]"
									blockoverride "text" {
										text = "SUCCESSION_LAW_CHANGE_WINDOW_CHANGE"
									}
									blockoverride "disabled" {
										visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.CanEnact)]"
									}
									blockoverride "hotkey" {
										visible = "[SuccessionLawChangeWindow.GetSelectedLaw.CanEnact]"
									}
									using = tooltip_above
									tooltip = "[SuccessionLawChangeWindow.GetSelectedLaw.GetCanEnactDescription]"
								}

								text_multi_wide = {
									visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.CanEnact)]"
									raw_text = "[SuccessionLawChangeWindow.GetSelectedLaw.GetCanEnactDescription]."
								}
							}
						}

						vbox = {
							name = "powerful_vassals"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							vbox = {
								layoutpolicy_horizontal = expanding

								button_text = {
									onclick = "[Toggle('approving_vassals')]"
									layoutpolicy_horizontal = expanding
									shortcut = find_title_shortcut
									blockoverride "text" {
										# text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_VASSALS"
									}
									blockoverride "extra" {
										text_single = {
											raw_text = "[CountItems] powerful vassals approve,"
											hbox = {
												name = "items"
												datamodel = "[SuccessionLawChangeWindow.GetPowerfulVassals]"
												item = {
													hbox = {
														visible = "[Not( Character.IsOpposing)]"
													}
												}
											}
										}
										text_single = {
											raw_text = "[Collapse('approving_vassals')] V."
										}
									}
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									visible = "[Isnt('approving_vassals')]"
									text_multi_wide = {
										text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_VASSALS_DESC"
									}

									expand = { }
								}
							}

							vbox = {
								name = "powerful_vassals_box"
								datamodel = "[SuccessionLawChangeWindow.GetPowerfulVassals]"
								visible = "[Isnt('approving_vassals')]"
								layoutpolicy_horizontal = expanding
								item = {
									char_name = {
										layoutpolicy_horizontal = expanding
										onclick = "[SuccessionLawChangeWindow.Close]"

										blockoverride "pre" {
											text_single = {
												visible = "[Character.IsOpposing]"
												name = "opposes"
												alwaystransparent = yes
												tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_OPPOSE_TT"
												text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_OPPOSE"
											}

											text_single = {
												name = "approves"
												visible = "[Not( Character.IsOpposing)]"
												alwaystransparent = yes
												text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_APPROVE"

												tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_APPROVE_TT"
												using = tooltip_se
											}

											text_single = {
												raw_text = "[Character.GetOpinionOf( GetPlayer )|=]"
											}
											text_single = {
												raw_text = ","
											}

										}

										blockoverride "extra" {

										}
									}
								}
							}

							expand = { }
						}
					}

					# clan
					vbox = {
						layoutpolicy_horizontal = expanding
						visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.ShouldBeApproved)]"

						hbox = {
							layoutpolicy_horizontal = expanding
							text_multi_wide = {
								raw_text = "Can't change law. It's selected automatically based on house unity level, unless using a single realm succession."
							}

							expand = {}
						}


						hbox = {
							datacontext = "[SuccessionLawChangeWindow.GetDynastyHouse]"
							datacontext = "[DynastyHouse.GetCurrentHouseUnityStage]"
							visible = "[And( DynastyHouse.IsValid, DynastyHouse.HasHouseUnity)]"
							spacing = 3
							layoutpolicy_horizontal = expanding

							text_single = {
								text = "[DynastyHouse.GetHouseUnityValue|0]"
							}
							text_single = {
								text = "HOUSE_UNITY_VALUE_TT_TITLE"
							}

							text_single = {
								raw_text = "[HouseUnityStage.GetName]."
							}

							expand = {}
						}
					}
				}

				text_single = {
					margin_top = 10
					layoutpolicy_horizontal = expanding
					raw_text = "Selected law preview:"
				}
				## Right Side
				vbox_law_desc_ocr = {
					layoutpolicy_horizontal = expanding

					blockoverride "law_datacontext" {
						datacontext = "[SuccessionLawChangeWindow.GetSelectedLaw.GetLaw]"
					}
				}


				expand = { }
			}
		}
	}

	window_succession_law_change_old = {}
}

types OCR
{
	type vbox_law_desc_ocr = vbox {
		layoutpolicy_horizontal = expanding

		block "law_datacontext" {}

		text_single = {
			layoutpolicy_horizontal = expanding
			raw_text = "[Law.GetNameNoTooltip]."
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			raw_text = "[Law.GetSubName]."
			visible = "[Law.HasSubName]"
		}

		text_multi_wide = {
			layoutpolicy_horizontal = expanding
			raw_text = "[Law.GetEffectDescription]"
		}

		text_multi_wide = {
			text = "SUCCESSION_TITLE_LAW_WARNING"
		}
	}

	type button_law_choice_ocr = button_text {
		layoutpolicy_horizontal = expanding
		datacontext = "[GuiLaw.GetLaw]"
		onclick = "[GuiLaw.SetSelected]"
		down = "[GuiLaw.IsSelected]"
		visible = "[GuiLaw.IsWidgetVisible(PdxGuiWidget.Self)]"

		shortcuts_list = {
			visible = "[Is('succession_law')]"
			blockoverride "click" {
				onclick = "[GuiLaw.SetSelected]"
			}
		}

		using = tooltip_se
		blockoverride "num" {
			visible = "[Is('succession_law')]"
		}
		blockoverride "pre" {
			text_single = {
				raw_text = "Change to"

				visible = "[GuiLaw.CanEnact]"
			}
			text_single = {
				raw_text = "Current,"

				visible = "[GuiLaw.IsEnacted]"
			}
			text_single = {
				raw_text = "Selected"
				visible = "[GuiLaw.IsSelected]"
			}
		}
		blockoverride "text" {
			raw_text = "[Law.GetNameNoTooltip],"

		}
		blockoverride "extra" {
			text_single = {
				raw_text = "not available."
				visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
			}
		}
	}

	type button_clan_law_choice_ocr = button_law_choice_ocr {
		name = "widget_clan_law"
		tooltipwidget = {
			widget = {
				using = Background_Tooltip

				vbox_law_desc_ocr = {
					set_parent_size_to_minimum = yes
					margin = { 15 15 }
					blockoverride "law_datacontext" {
						datacontext = "[GuiLaw.GetLaw]"
					}
				}
			}
		}
	}
}


types SuccessionLawTypes
{
	type button_law_choice_base = button_standard {
		visible = "[GuiLaw.IsWidgetVisible(PdxGuiWidget.Self)]"

		datacontext = "[GuiLaw.GetLaw]"

		onclick = "[GuiLaw.SetSelected]"
		down = "[GuiLaw.IsSelected]"
		alwaystransparent = "[GuiLaw.IsSelected]"

		block "content" {}

		tooltip = "[Law.GetEffectDescription]"

		text_multi = {
			visible = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
			text = "[Law.GetNameNoTooltip]"
			size = { 100% 100% }
			align = center
			margin = { 8 5 }
			default_format = "#clickable"
		}

		text_multi = {
			visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
			text = "[Law.GetNameNoTooltip]"
			size = { 100% 100% }
			align = center
			margin = { 8 5 }
			default_format = "#low"
		}

		button_active_marker = {
			visible = "[GuiLaw.IsEnacted]"
		}

		icon = {
			visible = "[GuiLaw.IsEnacted]"
			size = { 100% 100% }
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			using = Color_Orange
			alpha = 0.4
		}

		icon = {
			visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
			size = { 30 30 }
			parentanchor = bottom|right
			texture = "gfx/interface/icons/symbols/icon_cross.dds"
		}
	}

	type button_default_law_choice = button_law_choice_base {
		size = { 120 80 }
	}

	type button_clan_law_choice = button_law_choice_base {
		name = "widget_clan_law"

		size = { 120 160 }

		blockoverride "content" {
			icon = {
				size = { 55 55 }
				position = { 32 12 }
				texture = "[GuiLaw.GetHouseUnityStage.GetIcon]"
			}
		}
	}

	type vbox_law_desc = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		margin = { 10 10 }

		block "law_datacontext" {}
		vbox = {
			text_single = {
				text = "[Law.GetNameNoTooltip]"
				margin = { 10 10 }
			}

			text_label_center = {
				layoutpolicy_horizontal = expanding
				text = "[Law.GetSubName]"
				visible = "[Law.HasSubName]"
				default_format = "#low"
			}
		}

		scrollbox = {
			min_width = 350
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					layoutpolicy_horizontal = expanding

					text_multi = {
						layoutpolicy_horizontal = expanding
						autoresize = yes
						max_width = 350
						margin_right = 40
						text = "[Law.GetEffectDescription]"
					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						max_width = 350
						autoresize = yes
						margin_right = 40

						text = "SUCCESSION_TITLE_LAW_WARNING"
						default_format = "#alert_trial"
					}
				}
			}
		}

		#expand = {}

	}
}
