######################################################
############### CHANGE SUCCESSION LAW ################
######################################################

window = {
	name = "succession_law_change_window"
	size = { 610 100% }
	position = { 0 0 }
	layer = middle

	using = Window_Background_No_Edge
	using = Animation_ShowHide_Standard

	vbox = {
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "SUCCESSION_LAW_CHANGE_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[SuccessionLawChangeWindow.Close]"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			using = ocr_margins

			vbox = {
				name = "main"
				layoutpolicy_horizontal = expanding
				spacing = 5

				## Left Side
				vbox = {
					spacing = 5
					name = "left"
					layoutpolicy_horizontal = expanding

					vbox = {
						name = "law_selection"
						layoutpolicy_horizontal = expanding

						background = {
							using = Background_Area
						}

						vbox = {
							name = "new_laws_selection"
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "SUCCESSION_LAW_CHANGE_WINDOW_CHOOSE_NEW"
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetPartitionLaws)]"

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "SUCCESSION_LAW_CHANGE_WINDOW_PARTITION_LAWS"
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[SuccessionLawChangeWindow.GetPartitionLaws]"

									item = {
										button_law_choice_ocr = { }
									}
								}
							}

							vbox = {
								visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetSingleHeirLaws)]"
								layoutpolicy_horizontal = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "SUCCESSION_LAW_CHANGE_WINDOW_SINGLE_HEIR_LAWS"
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[SuccessionLawChangeWindow.GetSingleHeirLaws]"

									item = {
										button_law_choice_ocr = { }
									}
								}
							}

							vbox = {
								visible = "[DataModelHasItems(SuccessionLawChangeWindow.GetOtherLaws)]"
								layoutpolicy_horizontal = expanding

								vbox = {
									datamodel = "[SuccessionLawChangeWindow.GetOtherLaws]"
									layoutpolicy_horizontal = expanding

									item = {
										button_law_choice_ocr = { }
									}
								}
							}
						}

						expand = { }
					}

					vbox = {
						name = "footer"
						layoutpolicy_horizontal = expanding
						visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.IsEnacted)]"

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "SUCCESSION_LAW_CHANGE_WINDOW_ENACT_COST"
							tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_ENACT_COST_TOOLTIP"
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							name = "control_buttons"

							button_primary_text = {
								layoutpolicy_horizontal = expanding
								name = "enact_button"
								enabled = "[SuccessionLawChangeWindow.GetSelectedLaw.CanEnact]"
								onclick = "[SuccessionLawChangeWindow.GetSelectedLaw.Enact]"
								blockoverride "text" {
									text = "SUCCESSION_LAW_CHANGE_WINDOW_CHANGE"
								}
								blockoverride "disabled" {
									visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.CanEnact)]"
								}
								blockoverride "hotkey" {
									visible = "[SuccessionLawChangeWindow.GetSelectedLaw.CanEnact]"
								}
								using = tooltip_above
								tooltip = "[SuccessionLawChangeWindow.GetSelectedLaw.GetCanEnactDescription]"
							}

							text_multi = {
								visible = "[Not(SuccessionLawChangeWindow.GetSelectedLaw.CanEnact)]"
								autoresize = yes
								max_width = 600
								min_width = 600
								raw_text = "[SuccessionLawChangeWindow.GetSelectedLaw.GetCanEnactDescription]."
							}

							button_text = {
								layoutpolicy_horizontal = expanding
								name = "close_button"
								onclick = "[SuccessionLawChangeWindow.Close]"
								blockoverride "text" {
									text = "CANCEL"
								}
								blockoverride "dot" {

								}
								using = tooltip_above
							}

						}
					}

					vbox = {
						name = "powerful_vassals"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						background = {
							using = Background_Area
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 2

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_VASSALS"
							}

							hbox = {
							    layoutpolicy_horizontal = expanding

								text_multi = {
									text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_VASSALS_DESC"
									autoresize = yes
									max_width = 600
								}

							    expand = { }
							}
						}

						vbox = {
							name = "powerful_vassals_box"
							datamodel = "[SuccessionLawChangeWindow.GetPowerfulVassals]"
							visible = "[Not(GetVariableSystem.Exists('approving_vassals'))]"
							layoutpolicy_horizontal = expanding
							spacing = 3

							item = {
								char_name = {
									layoutpolicy_horizontal = expanding

									blockoverride "pre" {
										text_single = {
											visible = "[Character.IsOpposing]"
											name = "opposes"
											tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_OPPOSE_TT"
											text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_OPPOSE"
										}

										text_single = {
											name = "approves"
											visible = "[Not( Character.IsOpposing)]"
											text = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_APPROVE"

											tooltip = "SUCCESSION_LAW_CHANGE_WINDOW_POWERFUL_APPROVE_TT"
											using = tooltip_se
										}
										space = { }

										text_single = {
											raw_text = "[Character.GetOpinionOf( GetPlayer )|=]"
										}
										text_single = {
											raw_text = ","
										}
										space = { }
										spacing = 0
									}

									blockoverride "extra" {

									}
								}
							}
						}

						widget = {
							size = { 0 5 }
						}

						button_text = {
							layoutpolicy_horizontal = expanding
						    blockoverride "text" {
						        raw_text = "[Select_CString(GetVariableSystem.Exists('approving_vassals'), 'Show', 'Hide')] vassals, hotkey V."
						    }
							shortcut = find_title_shortcut
							onclick = "[GetVariableSystem.Toggle('approving_vassals')]"
						}

						expand = { }
					}
				}

				## Right Side
				vbox = {
					name = "succession_preview"
					layoutpolicy_horizontal = expanding
					#TODO check

					background = {
						using = Background_Area
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "Selected law: [SuccessionLawChangeWindow.GetSelectedLaw.GetLaw.GetNameNoTooltip]."
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "[SuccessionLawChangeWindow.GetSelectedLaw.GetLaw.GetSubName]."
						visible = "[SuccessionLawChangeWindow.GetSelectedLaw.GetLaw.HasSubName]"
					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						autoresize = yes
						max_width = 600
						min_width = 600
						text = "[SuccessionLawChangeWindow.GetSelectedLaw.GetLaw.GetEffectDescription]"
					}
				}
			}

			expand = { }
		}
	}
}


types SuccessionLawTypes
{
	type button_law_choice = button_standard {
		name = "select"
		datacontext = "[GuiLaw.GetLaw]"
		size = { 120 80 }
		onclick = "[GuiLaw.SetSelected]"
		down = "[GuiLaw.IsSelected]"

		using = tooltip_se

		text_multi = {
			visible = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
			text = "[Law.GetNameNoTooltip]"
			size = { 100% 100% }
			align = center
			margin = { 8 5 }
			default_format = "#clickable"
		}

		text_multi = {
			visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
			text = "[Law.GetNameNoTooltip]"
			size = { 100% 100% }
			align = center
			margin = { 8 5 }
			default_format = "#low"
		}

		button_active_marker = {
			name = "victory_glow"
			visible = "[GuiLaw.IsEnacted]"
		}

		icon = {
			name = "victory_glow2"
			visible = "[GuiLaw.IsEnacted]"
			size = { 100% 100% }
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			using = Color_Orange
			alpha = 0.4
		}

		icon = {
		 	name = "X_not_available"
			visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
		 	size = { 30 30 }
		 	parentanchor = bottom|right
		 	texture = "gfx/interface/icons/symbols/icon_cross.dds"
		}
	}

	type button_law_choice_ocr = button_text {
		layoutpolicy_horizontal = expanding
		name = "select"
		datacontext = "[GuiLaw.GetLaw]"
		onclick = "[GuiLaw.SetSelected]"
		down = "[GuiLaw.IsSelected]"

		using = tooltip_se
		blockoverride "pre" {
			text_single = {
				raw_text = "Change to"
				margin_right = 3
				visible = "[GuiLaw.CanEnact]"
			}
			text_single = {
				raw_text = "Current,"
				margin_right = 3
				visible = "[GuiLaw.IsEnacted]"
			}
		}
		blockoverride "text" {
			raw_text = "[Law.GetNameNoTooltip]"
			align = left
		}
		blockoverride "extra" {
			text_single = {
				raw_text = ", not available"
				visible = "[And( Not( GuiLaw.IsEnacted ), Not( GuiLaw.CanEnact ) )]"
			}
			text_single = {
				raw_text = ", selected"
				 visible = "[GuiLaw.IsSelected]"
			}
		}
		blockoverride "dot" {

		}
	}
}