
# 'court_positions_page' = variable name, the first item on the current page, so 5, 10, 15, etc
# CourtPositionsWindow.GetCourtPositions = our datamodel
# ResetPages checks if the datamodel is smaller than our selected paged item, or if our variables are not set
# see types in shared\ocr_pages.gui

# TODO!
# 1. replace court_positions_page
# 2. replace CourtPositionsWindow.GetCourtPositions
# 3. make an sgui

# reset if we paged too far and showing an item outside of the datamodel
#PageReset = LessThan_int32( GetDataModelSize( CourtPositionsWindow.GetCourtPositions ), FixedPointToInt(GetPlayer.MakeScope.Var('court_positions_page').GetValue ))
# or if we're missing variables



vbox_paged_list = {
  blockoverride "page_index" {
    datacontext = "[GetPlayer.MakeScope.Var('court_positions_page')]"
  }
  datacontext = "[GetScriptedGui('court_positions_page')]"

  blockoverride "full_datamodel" {
    datamodel = "[]"
  }
  blockoverride "vbox_contents" {
    vbox = {
      layoutpolicy_horizontal = expanding
      datamodel = "[PageModelGlobal()]"

      item = {

      }
    }
  }

  blockoverride "num" {
    page_index = {}
  }
}

fixedgridbox = {
  datamodel = "[PageModelGlobal()]"
  layoutpolicy_horizontal = expanding
  addrow = 25
  addcolumn = 600
  item = {

  }
}

blockoverride "reset_when" {
  state = {
    name = "reset"
    on_finish = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', MakeScopeFlag('reset')).End )]"
    trigger_when = "[Or(Or(LessThan_int32( GetDataModelSize(RoyalCourtWindow.GetSortedArtifacts), FixedPointToInt( Scope.GetValue )), Not(GetPlayer.MakeScope.Var('global_page_size').IsSet)), Not(Scope.IsSet))]"
    trigger_on_create = yes
  }
}


# we don't need the rest anymore

blockoverride "list_datamodel" {
  datamodel = "[PageModelGlobal(CourtPositionsWindow.GetCourtPositions)]"
}


state = {
  name = "reset"
  on_finish = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', MakeScopeFlag('reset')).End )]"
  trigger_when = "[ResetPages( CountPrevItems )]"
  trigger_on_create = yes
}

hbox = {
  spacing = 3

  text_single = {
    raw_text = "Showing from [PageStartGlobal] to [PageEndGlobal(PdxGuiWidget.AccessParent.AccessParent.FindChild('items').CountVisibleChildren)],"
  }

  button_resize_page_ocr = {}
}

# if we have sorting, reset when changing it

using = sgui_click_reset
using = sgui_selection_reset
using = sgui_finish_reset

page_buttons_ocr = {
  blockoverride "prev" {
    datacontext = "[GetScriptedGui('prev_court_positions_page')]"
  }
  blockoverride "show_next_page" {

  }
  blockoverride "next_page" {
    datacontext = "[GetScriptedGui('next_court_positions_page')]"
  }
}


# if we have multiple lists
visible = "[Not(GreaterThan_int32(GetDataModelSize(CourtPositionsWindow.GetCourtPositions), '(int32)10'))]"
visible = "[GreaterThan_int32(GetDataModelSize(CourtPositionsWindow.GetCourtPositions), '(int32)10')]"
