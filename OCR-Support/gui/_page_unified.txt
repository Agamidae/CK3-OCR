
# 'template_page' = variable name, the first item on the current page, so 5, 10, 15, etc
# CharacterSelectionList.GetList = our datamodel
# ResetPages checks if the datamodel is smaller than our selected paged item, or if our variables are not set
# see types in shared\ocr_pages.gui

# TODO!
# 1. replace template_page
# 2. replace CharacterSelectionList.GetList
# 3. make an sgui

# reset if we paged too far and showing an item outside of the datamodel
#PageReset = LessThan_int32( GetDataModelSize( CharacterSelectionList.GetList ), FixedPointToInt(GetPlayer.MakeScope.Var('template_page').GetValue ))
# or if we're missing variables


datacontext = "[GetPlayer.MakeScope.Var('template_page')]"
datacontext = "[GetScriptedGui('template_page')]"

blockoverride "full_datamodel" {
  datamodel = "[CharacterSelectionList.GetList]"
}
blockoverride "list_datamodel" {
  datamodel = "[PageModelGlobal(CharacterSelectionList.GetList)]"
}


state = {
  name = "reset"
  on_finish = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', MakeScopeFlag('reset')).End )]"
  trigger_when = "[ResetPages( CountPrevItems )]"
  trigger_on_create = yes
}

hbox = {
  spacing = 3

  text_single = {
    raw_text = "Showing from [PageStartGlobal] to [PageEndGlobal(PdxGuiWidget.AccessParent.AccessParent.FindChild('items').CountVisibleChildren)],"
  }

  button_resize_page_ocr = {}
}

# if we have sorting, reset when changing it
using = sgui_selection
using = sgui_click

on_finish = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', MakeScopeFlag('reset')).End )]"
onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', MakeScopeFlag('reset')).End )]"

page_buttons_ocr = {
  blockoverride "prev" {
    datacontext = "[GetScriptedGui('prev_template_page')]"
  }
  blockoverride "show_next_page" {

  }
  blockoverride "next_page" {
    datacontext = "[GetScriptedGui('next_template_page')]"
  }
}


# if we have multiple lists
visible = "[Not(GreaterThan_int32(GetDataModelSize(CharacterSelectionList.GetList), '(int32)10'))]"
visible = "[GreaterThan_int32(GetDataModelSize(CharacterSelectionList.GetList), '(int32)10')]"
