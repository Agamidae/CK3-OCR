######################################################
################## DESIGNATE HEIR ####################
######################################################

window = {
	name = "designate_heir"
	layer = middle
	movable = no
	allow_outside = yes
	using = Window_Size_CharacterList
	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	datacontext = "[DesignateHeirWindow.GetHeirs]"

	vbox = {
		using = ocr_margins
		spacing = 10

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				raw_text = "[Localize('DESIGNATE_HEIR_ENACT')]."
			}

			blockoverride "button_close"
			{
				onclick = "[DesignateHeirWindow.Close]"
			}
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			name = "choose_advice_label"
			raw_text = "[Localize('DESIGNATE_HEIR_CHOOSE')]."
		}

		vbox_character_list = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			blockoverride "button"
			{
				down = "[CharacterListItem.GetBool( 'is_selected' )]"
				enabled = "[Not(IsDesignatedHeir(Character.Self))]"
			}

			blockoverride "item_size" {
				size = { 650 70 }
			}
			blockoverride "pre_name" {
				text_single = {
					visible = "[CharacterListItem.GetBool( 'is_selected' )]"
					raw_text = "Selected,"
				}
			}

			blockoverride "bottom_right_box"
			{
				hbox = {
					text_single = {
						name = "designated_heir"
						visible = "[IsDesignatedHeir(Character.Self)]"
						raw_text = "[Localize('DESIGNATE_HEIR_WINDOW_DESIGNATED_HEIR')]."
					}
				}
			}
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			name = "designation_cost"
			text = "[DesignateHeirWindow.GetCostDescription]"
		}

		vbox = {
			name = "close_designate"
			layoutpolicy_horizontal = expanding

			button_text = {
				layoutpolicy_horizontal = expanding
				onclick = "[DesignateHeirWindow.Close]"
			    blockoverride "text" {
					raw_text = "[Localize('CLOSE_LABEL')], Escape."
			    }
			}

			button_primary_text = {
				layoutpolicy_horizontal = expanding
				name = "enact_designate"

				blockoverride "text" {
					text = "DESIGNATE_HEIR_ENACT"
				}
				blockoverride "disabled" {
					visible = "[Not(DesignateHeirWindow.CanDesignate)]"
				}
				blockoverride "hotkey" {
					visible = "[DesignateHeirWindow.CanDesignate]"
				}

				enabled = "[DesignateHeirWindow.CanDesignate]"
				onclick = "[DesignateHeirWindow.Designate]"
				onclick = "[DesignateHeirWindow.Close]"
				tooltip = "[DesignateHeirWindow.GetDesignateTooltip]"
			}
		}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('fertility_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
		}
	}
}
