widget = {
	name = "select_men_at_arms_origin_window"
	size = { 100% 100% }
	datacontext = "[SelectMenAtArmsOriginView.GetRegiment]"
	datacontext = "[Regiment.GetMAAType]"

	# datacontext = "[GetPlayer.GetCapitalLocation.GetCounty.GetTitle]"
	# onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"

	using = zoom_out_title

	state = {
		name = hide_maa_window
		position = { -1500 0 }
	}
	state = {
		name = show_maa_window
		# on_start = "[PdxGuiTriggerAllAnimations('pan_to_army')]"
		position = { 0 0 }
	}

	state = {
		name = _hide
		on_finish = "[DefaultOnCoatOfArmsRightClick(GetPlayer.GetCapitalLocation.GetCounty.GetTitle.GetID)]"
		on_finish = "[GetScriptedGui('clear_maa_origin_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	state = {
		name = _show
		next = "clear_maa_list"
		on_finish = "[PdxGuiTriggerAllAnimations('show_army_window')]"
		on_finish = "[PdxGuiTriggerAllAnimations('show_maa_window')]"
	}

	state = {
		name = "clear_maa_list"
		delay = 0.3
		alpha = 1
		next = grab_origins
		on_finish = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
		on_start = "[GetScriptedGui('clear_maa_origin_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}

	state = {
		name = grab_origins
		delay = 0.5
		on_finish = "[PdxGuiTriggerAllAnimations('grab_maa_origin')]"
		next = order_origins
	}

	state = {
		name = order_origins
		delay = 0.3
		block "order_finish" {
			on_finish = "[GetScriptedGui('order_maa_origin_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		}
		on_finish = "[DefaultOnCoatOfArmsRightClick(GetPlayer.GetCapitalLocation.GetID)]"
		using = Sound_WindowShow_Standard
	}

	window = {
		using = Window_Size_CharacterList
		background = { using = Background_Area_Border_Solid }
		movable = no
		alwaystransparent = yes


		vbox_select_from_map = { }
	}

	flowcontainer = {
		using = vanilla
		parentanchor = top|hcenter
		direction = vertical

		position = { 0 100 }

		text_label_center = {
			text = "SELECT_MEN_AT_ARMS_LOCATION"
			parentanchor = hcenter
			align = nobaseline
			margin = { 10 4 }
		}

		text_label_center = {
			text = "RALLY_POINT_CHOOSE_LOCATION"
			default_format = "#high"
			using = Font_Size_Medium
			parentanchor = hcenter
			align = nobaseline
			margin = { 10 4 }
		}

		text_label_center = {
			text = "RALLY_POINT_MAP_INSTRUCTION"
			parentanchor = hcenter
			align = nobaseline|hcenter
			margin = { 50 4 }
		}
	}


	button_primary_big = {
		name = "close_assignment_window"
		text = "BACK_LABEL"

		parentanchor = bottom|hcenter
		position = { 0 -50}

		onclick = "[SelectMenAtArmsOriginView.Close]"
		shortcut = "close_window"
	}
}

types OCR {
	type vbox_select_from_map = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		block "gap" {
			using = ocr_margins
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			block "debug" {
				visible = "[Not(ReleaseMode)]"
			}
			button_text = {
				layoutpolicy_horizontal = expanding
				blockoverride "text" {
					raw_text = "Clear"
				}
				datacontext = "[GetPlayer.GetCapitalLocation.GetCounty.GetTitle]"
				onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
				block "clear" {
					onclick = "[GetScriptedGui('clear_maa_origin_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
				}
			}

			button_text = {
				layoutpolicy_horizontal = expanding
				blockoverride "text" {
					raw_text = "Order"
				}
				block "order" {
					onclick = "[GetScriptedGui('order_maa_origin_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
				}
			}

			error_button = {
				layoutpolicy_horizontal = expanding
			}

			text_single = {
				block "temp" {
					raw_text = "[GetDataModelSize( GetPlayer.MakeScope.GetList('maa_origins_temp'))] temp targets"
				}
				layoutpolicy_horizontal = expanding
			}
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			block "action" {
				raw_text = "Station [Regiment.GetName],"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			spacing = 3

			text_single = {
				block "targets" {
					raw_text = "[GetDataModelSize( GetPlayer.MakeScope.GetList('maa_origins'))] targets,"
				}
			}

			block "sorting" {}

			expand = { }
		}

		hbox = {
		    layoutpolicy_horizontal = expanding

			button_text = {
				block "filters" {
					visible = no
				}
				shortcut = army_split_half
				blockoverride "text" {
					raw_text = "Filter"
				}
				blockoverride "extra" {
					block "filtered" {}
					text_single = {
						margin_left = -3
						raw_text = ", F."
					}
				}
			}

			block "reset_filters" {}


		    expand = { }
		}


		block "select_all" {}

		scrollbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			blockoverride "scrollbox_content" {
				vbox = {
					layoutpolicy_horizontal = expanding
					vbox = {
						layoutpolicy_horizontal = expanding
						datamodel = "[GetPlayer.MakeScope.GetList('maa_origins')]"

						item = {
							vbox = {
								block "maa" {
									visible = "[Not(Province.GetMaaOriginHere.IsValid)]"
								}
								layoutpolicy_horizontal = expanding
								datacontext = "[Scope.GetProvince]"

								#TODO hide screen

								button_text = {
									block "target click" { }
									block "select_from_menu" {
										onclick = "[GetVariableSystem.Set('selected_map_target', Province.GetNameNoTooltip)]"
									}
									onmousehierarchyenter = "[GetVariableSystem.Set('preview_map_target', Province.GetNameNoTooltip)]"
									onmousehierarchyleave = "[Clear('preview_map_target')]"
									block "select" {
										onclick = "[DefaultOnCoatOfArmsRightClick(Province.GetCoATitle.GetID)]"
										onclick = "[GetVariableSystem.Set('station_regiment', Province.GetNameNoTooltip)]"
										onclick = "[PdxGuiTriggerAllAnimations('hide_maa_window')]"
									}
									onrightclick = "[DefaultOnCoatOfArmsRightClick(Province.GetCoATitle.GetID)]"
									layoutpolicy_horizontal = expanding

									raw_tooltip = "[Get('target_tooltip')]"

									shortcuts_list = {
										blockoverride "click" {
											block "target click" { }
											block "select_from_menu" {
												onclick = "[GetVariableSystem.Set('selected_map_target', Province.GetNameNoTooltip)]"
											}
											block "select" {
												onclick = "[DefaultOnCoatOfArmsRightClick(Province.GetCoATitle.GetID)]"
												onclick = "[GetVariableSystem.Set('station_regiment', Province.GetNameNoTooltip)]"
												onclick = "[PdxGuiTriggerAllAnimations('hide_maa_window')]"
											}
										}
									}

									button = {
										visible = "[ObjectsEqual(Scope.GetProvince, GetPlayer.GetCapitalLocation)]"
										shortcut = go_to_capital
										block "target click" { }
										block "select_from_menu" {
											onclick = "[GetVariableSystem.Set('selected_map_target', Province.GetNameNoTooltip)]"
										}
										block "select" {
											onclick = "[DefaultOnCoatOfArmsRightClick(Province.GetCoATitle.GetID)]"
											onclick = "[GetVariableSystem.Set('station_regiment', Province.GetNameNoTooltip)]"
											onclick = "[PdxGuiTriggerAllAnimations('hide_maa_window')]"
										}
									}

									blockoverride "pre" {
										text_single = {
											block "number" {
											}
											raw_text = "[IndexNumber],"
										}

										block "pre_pre" {} # I know, shush

										block "holder" {}
										block "maa" {
											text_single = {
												visible = "[ObjectsEqual(Regiment.GetOriginProvince, Scope.GetProvince)]"
												raw_text = "Current station:"
											}
										}
									}


									blockoverride "text" {
										block "province" {}
										raw_text = "[Province.GetNameNoTooltip]."
									}

									blockoverride "extra" {
										block "distance" {
											text_single = {
												visible = "[Not(ObjectsEqual(Scope.GetProvince, GetPlayer.GetCapitalLocation))]"
												raw_text = "OutlinerProvinceDistance"
											}
											text_single = {
												visible = "[ObjectsEqual(Scope.GetProvince, GetPlayer.GetCapitalLocation)]"
												raw_text = "Your capital, hotkey Home."
											}
										}
										block "extra_extra" {}
									}
								}

								block "travel" { }

								block "maa" {
									vbox_maa_province_stats_numbers = {
										layoutpolicy_horizontal = expanding
									}
								}
							}
						}
					}

					block "maa" {
						vbox = {
							layoutpolicy_horizontal = expanding
							datamodel = "[GetPlayer.MakeScope.GetList('maa_origins')]"

							item = {
								vbox = {
									visible = "[Province.GetMaaOriginHere.IsValid]"
									layoutpolicy_horizontal = expanding
									datacontext = "[Scope.GetProvince]"

									button_text = {
										onclick = "[DefaultOnCoatOfArmsRightClick(Province.GetCoATitle.GetID)]"
										onclick = "[GetVariableSystem.Set('station_regiment', Province.GetNameNoTooltip)]"
										onclick = "[PdxGuiTriggerAllAnimations('hide_maa_window')]"
										layoutpolicy_horizontal = expanding

										blockoverride "text" {
											raw_text = "[Province.GetNameNoTooltip]."
										}
										blockoverride "pre" {
											text_single = {
												visible = "[ObjectsEqual(Regiment.GetOriginProvince, Scope.GetProvince)]"
												raw_text = "Current station:"
											}
										}

										blockoverride "extra" {
											flowcontainer = {
												ignoreinvisible = yes
												visible = "[Not(ObjectsEqual(Regiment.GetOriginProvince, Scope.GetProvince))]"

												text_single = {
													visible = "[Province.GetMaaOriginHere.IsValid]"
													raw_text = "Already used by [Province.GetMaaOriginHere.GetName]."
												}
												text_single = {
													visible = "[Not(ObjectsEqual(Scope.GetProvince, GetPlayer.GetCapitalLocation))]"
													raw_text = "OutlinerProvinceDistance"
												}
												text_single = {
													visible = "[ObjectsEqual(Scope.GetProvince, GetPlayer.GetCapitalLocation)]"
													raw_text = "Your capital."
												}
											}
										}

									}

									vbox_maa_province_stats_numbers = {
										layoutpolicy_horizontal = expanding
									}
								}
							}
						}
					}
				}
			}
		}

		button_text = {
			layoutpolicy_horizontal = expanding
			blockoverride "text" {
				raw_text = "Refresh, Shift E."
			}
			shortcut = map_mode_11
			block "refresh" {
				onclick = "[PdxGuiTriggerAllAnimations('clear_maa_list')]"
			}
		}


		text_single = {
			layoutpolicy_horizontal = expanding
			raw_text = "View tooltips for more information."
		}
		block "tip" {}

		expand = { }
	}
}
