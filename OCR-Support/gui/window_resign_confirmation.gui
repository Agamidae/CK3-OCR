window = {
	name = "ingame_resign_confirmation"
	layer = confirmation
	size = { 100% 100% }
	movable = no
	using = TooltipFocus

	using = Animation_ShowHide_Quick
	using = Background_Full_Dim

	button = {
		size = { 100% 100% }
		onclick = [ResignConfirmationWindow.Cancel]
	}

	widget = {
		parentanchor = center
		using = Window_Background_Popup
		alwaystransparent = no

		vbox = {
			set_parent_size_to_minimum = yes

			margin = { 20 20 }
			spacing = 10

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "EXIT"
				}

				blockoverride "button_close"
				{
					visible = no
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				visible = "[Or( ResignConfirmationWindow.IsShowSave, Not( StringIsEmpty( ResignConfirmationWindow.GetText ) ) )]"
				spacing = 5

				text_multi_wide = {
					name = "description"
					text = "[ResignConfirmationWindow.GetText]"
					visible = "[Not( StringIsEmpty( ResignConfirmationWindow.GetText ) )]"
				}

				hbox = {
					name = "save_checkbox"
					visible = "[And( ResignConfirmationWindow.IsShowSave, Not( IsIronmanEnabled ) )]"
					layoutpolicy_horizontal = expanding

					button_checked_text = {
						onclick = "[ResignConfirmationWindow.ToggleShouldSave]"
						blockoverride "disabled" {
							visible = "[IsIronmanEnabled]"
						}
						enabled = "[Not( IsIronmanEnabled )]"

						blockoverride "visible"
						{
							visible = "[Not(Or( ResignConfirmationWindow.ShouldSave, IsIronmanEnabled ))]"
						}

						blockoverride "text"
						{
							text = "FRONTEND_AUTO_SAVE"

						}
						blockoverride "extra_text" {
							dot = { }
						}
					}

					expand = {}
				}

				hbox = {
					name = "ironman_save_info"
					layoutpolicy_horizontal = expanding

					visible = "[IsIronmanEnabled]"

					text_single = {
						text = "FRONTEND_AUTO_SAVE_IRONMAN"
					}

					expand = { }
				}
			}

			button_text = {
				layoutpolicy_horizontal = expanding
				# using = agot_hide
		    blockoverride "text" {
					text = "RESIGN"
		    }
				blockoverride "extra" {
					text_single = {
						raw_text = ", hotkey Tab."
					}
				}
				onclick = "[ResignConfirmationWindow.OnMenu]"
				clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_quit_game"
				shortcut = action_list
			}

			# button_agot_fake_exit = { }

			button_primary_text = {
				layoutpolicy_horizontal = expanding
				blockoverride "text" {
					text = "EXIT_TO_DESKTOP"
				}
				onclick = "[ResignConfirmationWindow.OnDesktop]"
				clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_quit_game"
				shortcut = confirm
			}

			button_text = {
				layoutpolicy_horizontal = expanding
				name = "cancel_button"
				blockoverride "text" {
					text = "CANCEL"
				}
				shortcut = "close_window"
				onclick = [ResignConfirmationWindow.Cancel]
			}

			text_single = {
				layoutpolicy_horizontal = expanding
				raw_text = "Note, the game will report that it crashed on exit."
			}
			text_single = {
				layoutpolicy_horizontal = expanding
				raw_text = "You'll want to clear out these crash logs on occasion."
			}
			text_single = {
				layoutpolicy_horizontal = expanding
				raw_text = "Full path is: Documents/Paradox Interactive/Cursader Kings III/crashes"
			}
		}
	}

	container_saving_indicator = {
		parentanchor = center
		visible = "[ResignConfirmationWindow.IsProgress]"

		blockoverride "csi_text"
		{
			text = "SAVE_IN_PROGRESS"
		}
	}
}
