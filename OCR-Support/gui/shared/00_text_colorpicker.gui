
types OCR
{
  type text_colorbox = editor_editbox {
    size = { 300 25 }

    flowcontainer = {
      block "position" {
        position = { 26 1 }
      }
      text_single = {
        block "text" {}
      }
      # dot = {}
    }
  }

  type check_color = checkbutton {
    size = { 300 25 }

    editor_button = {
      position = { 0 8 }
      alwaystransparent = yes
    }
    flowcontainer = {
      block "position" {
        position = { 26 1 }
      }
      text_single = {
        block "text" {}
      }
      # dot = {}
    }
  }
	# Very simple color picker based on a hue slider and a saturation vs. value area
	type colorpicker_text = colorpicker
	{
		size = { 600 300 }

		hbox = {
			name = "colorpicker_window"
      spacing = 15

      vbox = {
        spacing = 10
        margin_top = 10
        widget = {
          name = "preview_icon"
          size = { 298 50 }

          icon = {
            name = "colorpicker_button"
            size = { 298 50 }
            shaderfile = "gfx/FX/pdxgui_colorpicker.shader"
            effectname = "PdxGuiColorButton"
            texture = "gfx/editor_gui/editor_transparent.dds"
            alwaystransparent = no
            spriteType = corneredtiled
          }

          button_standard_clean = {
            name = "palette_border"
            parentanchor = center
            alwaystransparent = yes
            size = { 302 54 }
          }
        }

        hbox_colorpicker_simple_components = {}

        # button_text = {
        #   layoutpolicy_horizontal = expanding
        #   onclick = "[Toggle('colors')]"
        #   blockoverride "text" {
        #     raw_text = "toggle"
        #   }
        # }
        hbox = {

        }
      }

      vbox = {
        layoutpolicy_horizontal = expanding
        visible = "[Isnt('colors')]"

        text_colorbox = {
          name = "editbox_color_hex"
          blockoverride "text" {
            raw_text = "hex"
         }
         blockoverride "position" {
          position = { 50 1 }
         }
        }

        check_color = {
          blockoverride "text" { raw_text = "hue" }
          name = "radio_color_hue"
        }
        check_color = {
          blockoverride "text" { raw_text = "green" }
          name = "radio_color_green"
        }
        check_color = {
          blockoverride "text" { raw_text = "red" }
          name = "radio_color_red"
        }
        check_color = {
          blockoverride "text" { raw_text = "blue" }
          name = "radio_color_blue"
        }
        check_color = {
          blockoverride "text" { raw_text = "alpha" }
          name = "radio_color_alpha"
        }
        check_color = {
          blockoverride "text" { raw_text = "value" }
          name = "radio_color_value"
        }
        check_color = {
          blockoverride "text" { raw_text = "saturation" }
          name = "radio_color_saturation"
        }
        text_colorbox = {
          blockoverride "text" {
            raw_text = "hue"
          }
          name = "editbox_color_hue"
        }
        text_colorbox = {
          name = "editbox_color_saturation"
					blockoverride "text" { raw_text = "saturation" }
        }
        text_colorbox = {
          name = "editbox_color_value"
					blockoverride "text" { raw_text = "value" }
        }
        text_colorbox = {
          name = "editbox_color_red"
					blockoverride "text" { raw_text = "red" }
        }
        text_colorbox = {
          name = "editbox_color_green"
					blockoverride "text" { raw_text = "green" }
        }
        text_colorbox = {
          name = "editbox_color_blue"
					blockoverride "text" { raw_text = "blue" }
        }
        text_colorbox = {
          name = "editbox_color_alpha"
					blockoverride "text" { raw_text = "alpha" }
        }
        editor_button = {
          name = "colorpicker_close"
        }
        icon = {
          name = "color_selector"
        }
      }

			expand = {}
		}

	}
}
