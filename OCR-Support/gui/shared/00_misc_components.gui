types Miscelaneous
{
	type skill_icon_label = flowcontainer {
		margin_left = 10
		margin_right = 15
		spacing = 4

		background = {
			name = "skill_icon_bg"
			texture = "gfx/interface/window_character/character_view_skills_bg.dds"
			framesize = { 70 26 }

			block "bg"
			{
				frame = "[SkillItem.GetFrame]"
			}
		}

		block "tooltip"
		{
			tooltip = "SKILL_ITEM_TOOLTIP"
		}

		icon = {
			name = "skill_icon"
			texture = "gfx/interface/icons/icon_skills.dds"
			framesize = { 60 60 }

			block "icon"
			{
				frame = "[SkillItem.GetFrame]"
			}

			block "icon_size"
			{
				size = { 30 30 }
			}

		}

		text_single = {
			name = "skill_value"
			parentanchor = vcenter
			align = left
			default_format = "#high"

			block "font_size"
			{
				using = Font_Size_Medium

			}

			block "value"
			{
				text = "[SkillItem.GetValue]"
			}
		}
	}

	type strength_balance_text = hbox {

		block "StrengthBalanceVisible"
		{
			visible = "[GuiMilitaryStrength.ShouldShow]"
		}
		spacing = 3
		text_single = {
			raw_text = "[GuiMilitaryStrength.GetRatioName],"
		}
		text_single = {
			block "StrengthBalanceTotalStrength"
			{
				raw_text = "[GuiMilitaryStrength.GetTargetTotal|0] men,"
			}
		}

		text_single = {
			block "StrengthBalanceAllies"
			{
				raw_text = "[GuiMilitaryStrength.GetTargetAlliesCount] allies."
			}
		}

		expand = { }

		block "StrengthBalanceTooltip"
		{
			tooltip = "[GuiMilitaryStrength.GetRatioDescription]"
		}
		using = tooltip_se
	}

	type hbox_tab_buttons_ocr = vbox
	{
		layoutpolicy_horizontal = expanding

		hbox = {
			layoutpolicy_horizontal = expanding
			block "datamodel" {
				datamodel = "[PdxGuiTabs.GetTabItems]"
			}

			item = {
				button_text = {
					layoutpolicy_horizontal = expanding
					blockoverride "pre" {
						text_single = {
							block "showing" {
								raw_text = "Showing"
							}
						}
					}
					blockoverride "extra" {
						block "extra2" {}
						comma = {}
						text_single = {
							raw_text = "[IndexNumber|O]"
						}
						text_single = {
							raw_text = "tab."
						}
					}
					blockoverride "text" {
						block "tab_name"
						{
							raw_text = "[PdxGuiTabItem.GetKey]"
						}
					}

					onclick = "[PdxGuiTabs.SetTab( PdxGuiTabItem.Self )]"
					down = "[PdxGuiTabs.IsTabItemSet( PdxGuiTabItem.Self )]"
					visible = "[PdxGuiTabs.IsTabItemSet( PdxGuiTabItem.Self )]"
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			text_single = {
				raw_text = "Other tabs:"
			}

			hbox = {
				block "datamodel" {
				datamodel = "[PdxGuiTabs.GetTabItems]"
			}

				item = {
					button_text = {
						block "tab_click" {}
						blockoverride "num" {	}
						shortcuts_list = {
							blockoverride "click" {
								block "tab_click" {}
								onclick = "[PdxGuiTabs.SetTab( PdxGuiTabItem.Self )]"
							}
						}
						blockoverride "extra" {
							comma = {}
						}

						blockoverride "text" {
							block "tab_name"
							{
								raw_text = "[PdxGuiTabItem.GetKey],"
							}
						}

						onclick = "[PdxGuiTabs.SetTab( PdxGuiTabItem.Self )]"
						down = "[PdxGuiTabs.IsTabItemSet( PdxGuiTabItem.Self )]"
						visible = "[Not(PdxGuiTabs.IsTabItemSet( PdxGuiTabItem.Self ))]"
					}
				}
			}

			expand = {}
		}
	}
}
