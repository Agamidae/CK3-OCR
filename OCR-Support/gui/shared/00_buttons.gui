
######################################################
################## BUTTON TEMPLATES ##################
######################################################

types Buttons
{
    ## The standard button
    type button_standard = button_normal
    {
        # texture = "gfx/interface/buttons/button_standard.dds"
        size = { 170 33 }

        gfxtype = togglepushbuttongfx
        effectname = "NoHighlight"

        upframe = 1
        uphoverframe = 2
        uppressedframe = 3
        downframe = 4
        downhoverframe = 4
        downpressedframe = 4
        disableframe = 7

        spriteType = Corneredtiled
        spriteborder = { 4 4 }
        framesize = { 252 80 }

        buttonText = {
            text_single = {
                size = { 100% 100% }
                autoresize = no
                margin = { 10 0 }
                align = center|nobaseline
                default_format = "#clickable"
                alwaystransparent = yes
            }
        }

        modify_texture = {
            name = "overlay"
            texture = "gfx/interface/buttons/button_standard_overlay.dds"
            spriteType = Corneredstretched
            spriteborder = { 3 3 }
            blend_mode = overlay
            alpha = 0.3
        }

        block "disabled"
        {
            highlight_icon = {
                size = { 100% 100% }
                gfxtype = togglepushbuttongfx
                effectname = "NoHighlight"
                texture = "gfx/interface/buttons/button_disabled_stripes.dds"
                spriteType = Corneredtiled
                spriteborder = { 2 2 }
                framesize  = { 238 63 }

                upframe = 1
                uphoverframe = 1
                uppressedframe = 1
                downframe = 1
                downhoverframe = 1
                downpressedframe = 1
                disableframe = 2

                alpha = 0.4

                modify_texture = {
                    name = "overlay"
                    texture = "gfx/interface/buttons/button_standard_overlay.dds"
                    spriteType = Corneredstretched
                    spriteborder = { 3 3 }
                    blend_mode = overlay
                }

                block "button_standard_mouseover" {}
            }
        }

        highlight_icon = {
            size = { 100% 100% }
            gfxtype = togglepushbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/interface/buttons/button_mouseover.dds"
            spriteType = Corneredstretched
            spriteborder = { 20 20 }
            framesize  = { 238 63 }

            upframe = 1
            uphoverframe = 2
            uppressedframe = 1
            downframe = 1
            downhoverframe = 1
            downpressedframe = 1
            disableframe = 1

            alpha = 0.5

            block "button_standard_mouseover" {}
        }

        margin_widget = {
            size = { 100% 100% }
            margin = { 3 3 }

            block "vignette"
            {
                icon = {
                    name = "vignette"
                    size = { 100% 100% }
                    alpha = 0.2
                    texture = "gfx/interface/component_masks/mask_vignette.dds"
                    color = { 0.15 0.15 0.15 1 }
                }
            }
        }
    }

    type buttons_window_control = flowcontainer {
        ignoreinvisible = yes
        margin = { 8 8 }

        button_go_to_my_location = {
            name = "button_go_to"

            block "button_go_to" {
                visible = no
            }
        }

        container = {
            visible = "[Not(Character.IsLocalPlayer)]"

            block "button_pin"
            {
                visible = no
            }

            button_pin = {
                name = "button_pin"
                visible = "[Not(Character.IsPinned)]"
                onclick = "[Character.ToggleCharacterPinned]"
                tooltip = "PIN_TT"
                using = tooltip_se
            }

            button_unpin = {
                name = "button_unpin"
                visible = "[Character.IsPinned]"
                onclick = "[Character.ToggleCharacterPinned]"
                tooltip = "PIN_TT"
                using = tooltip_se
            }
        }

        button_me = {
            name = "button_me"
            tooltip = "CV_TOOLTIP_ME_BUTTON"

            using = tooltip_se

            block "button_me" {
                visible = no
            }
        }

        button_back = {
            name = "button_back"
            shortcut = "go_back"
            shortcut = "go_back_2"
            shortcut = "go_back_3"

            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

            block "button_back" {
                visible = no
            }
        }

        button_minimize = {
            name = "button_minimize"
            shortcut = "close_window"
            tooltip = "MINIMIZE_TOOLTIP"
            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

            block "button_minimize" {
                visible = no
            }
        }

        button_close = {
            name = "button_close"
            shortcut = "close_window"
            tooltip = "CLOSE_TOOLTIP"
            clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
            # onclick = "[PdxGuiTriggerAllAnimations('dismiss_toast')]"
            onclick = "[Clear('toasted')]"

            block "button_close" {}
        }
    }
}