types OCR {

  type hbox_personality_traits = hbox {
    spacing = 3
    datamodel = "[Character.GetTraitIndices]"

    item = {
      text_single = {
        datacontext = "[GetTraitForIndex(int32.GetInt)]"
        visible = "[Trait.IsPersonality]"
        raw_text = "[Trait.GetName( GetNullCharacter )],"
      }
    }
  }

  type hbox_other_traits = hbox {

    text_single = {
      raw_text = "[CountItems] traits"

      hbox = {
        name = "items"
        datamodel = "[Character.GetTraitIndices]"
        item = {
          hbox = {
            datacontext = "[GetTraitForIndex(int32.GetInt)]"
            visible = "[Not(Trait.IsPersonality)]"
          }
        }
      }
    }

    tooltipwidget = {
      container = {
        using = DefaultTooltipBackground
        flowcontainer = {
          ignoreinvisible = yes
          direction = vertical
          margin = { 10 10 }
          datamodel = "[Character.GetTraitIndices]"

          item = {
            text_single = {
              datacontext = "[GetTraitForIndex(int32.GetInt)]"
              visible = "[Not(Trait.IsPersonality)]"
              raw_text = "[Trait.GetName( GetNullCharacter )],"
            }
          }
        }
      }
    }
  }

  type text_health = text_single {
    raw_text = "[Character.Custom('character_health')] health."
  	tooltip = "[Character.GetHealthInfo]"
  }

  type text_distance_capital = text_single {
    visible = "[Not(ObjectsEqual(MyCapital, Province.Self))]"
    raw_text = "[DistanceTo(MyCapital, Province)|0] [DaysTo(MyCapital, Province)] [Direction(MyCapital, Province)]."
  }
}
