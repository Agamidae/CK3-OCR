types OCR {
  type event_window_transition_widget = margin_widget {
		size = { 100% 100% }
		alwaystransparent = no
		datacontext = "[EventWindowData.GetEventTransitionData]"
		visible = "[EventWindowData.IsShowingTransition]"

		icon = {
			name = "event_transition_picture_with_mask"
			visible = "[And( Not( EventWindowTransitionData.HasVideo ), EventWindowTransitionData.HasVideoMask )]"
			texture = "[EventWindowTransitionData.GetTexture]"
			size = { 0 0 }
      alwaystransparent = yes

			modify_texture = {
				video = "[EventWindowTransitionData.GetVideoMask]"
				blend_mode = alphamultiply
				restart_on_show = yes

				block "event_transition_mask_properties"
				{
					loop = no
				}
			}

			block "event_transition_picture_properties"
			{
			}
		}

		icon = {
			name = "event_transition_picture"
			visible = "[Not( Or( EventWindowTransitionData.HasVideo, EventWindowTransitionData.HasVideoMask) )]"
			texture = "[EventWindowTransitionData.GetTexture]"
			size = { 0 0 }
      alwaystransparent = yes

			block "event_transition_picture_properties"
			{
			}
		}

		video_icon = {
			name = "event_transition_video"
			visible = "[EventWindowTransitionData.HasVideo]"
			video = "[EventWindowTransitionData.GetVideo]"
			size = { 0 0 }
      alwaystransparent = yes
			loop = no
			restart_on_show = yes

			block "event_transition_video_properties"
			{
			}
		}
	}
}

template artifact_event_flowcontainer_ocr {
  button_text = {
    onclick = "[ToggleGameViewData( 'artifact_details', Artifact.GetID )]"
    onclick = "[Set('hide_event', 'yes')]"
    blockoverride "text" {
      raw_text = "[Artifact.GetNameNoTooltip], [Artifact.GetRarityAndSlotType]."
    }
  }
}
