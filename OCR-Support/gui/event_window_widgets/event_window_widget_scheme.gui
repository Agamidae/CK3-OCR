vbox = {
	name = "event_window_widget_scheme"
	layoutpolicy_horizontal = expanding
	datacontext = "[EventWindowWidget.GetScope.sScheme('scheme')]"
	visible = "[Scheme.GetSchemeType.IsValid]"
	allow_outside = yes
	margin = { 10 5 }

	background = {
		using = Background_Area_With_Header
	}

	vbox = {
		layoutpolicy_horizontal = expanding

		hbox = {
			layoutpolicy_horizontal = expanding

			button_group = {
				onclick = "[ToggleGameViewData('intrigue_window', GetPlayer.GetID)]"
				onclick = "[GetVariableSystem.Toggle('hide_event')]"

				hbox = {
					spacing = 3
					text_single = {
						raw_text = "Scheme,"
						margin_left = 5
					}

					text_single = {
						raw_text = "SCHEME_WINDOW_ITEM_NAME"
					}

					dot_l = {}

					text_single = {
						visible = "[Not(Character.IsLocalPlayer)]"
						raw_text = "[Scheme.GetTarget.GetOpinionOf( GetPlayer )] opinion."
					}

					text_single = {
						raw_text = "Warning, exposed!"
						visible = "[Scheme.IsExposed]"
						tooltip = "SCHEME_WINDOW_EXPOSED_TOOLTIP"
					}

					text_single = {
						raw_text = "Click to view scheme."
					}

					expand = { }
				}
			}

			expand = { }
		}

		flowcontainer = {
			layoutpolicy_horizontal = expanding
			tooltip = "SCHEME_WINDOW_SUCCESS_TOOLTIP"
			spacing = 3

			text_single = {
				raw_text = "Success chance, "
			}

			text_single = {
				name = "success"
				text = "SCHEME_WINDOW_SUCCESS_CHANCE"
			}
		}

		flowcontainer = {
			layoutpolicy_horizontal = expanding

			text_single = {
				raw_text = "Expected time: "
			}

			space = { }

			text_single = {
				name = "estimated_time"
				text = "SW_ESTIMATED_TIME"
			}

			dot = { }

			space = { }

			text_single = {
				raw_text = "[Scheme.GetProgressDescription]."
			}

			space = { }

			text_single = {
				raw_text = "Power difference: [Scheme.GetPowerDifference|0%]."
			}
			tooltip = "SCHEME_ITEM_PROGRESS_TOOLTIP"
		}

	}

	vbox = {
		layoutpolicy_horizontal = expanding

		hbox = {
			spacing = 3
			layoutpolicy_horizontal = expanding


			flowcontainer = {
				visible = "[Scheme.IsSecret]"
				spacing = 3
				tooltip = "SCHEME_WINDOW_SECRECY_TOOLTIP"

				text_single = {
					raw_text = "Secrecy,"
				}

				text_single = {
					name = "secrecy"
					text = "SCHEME_WINDOW_SECRECY"
				}
			}

			expand = { }
		}
	}
}
