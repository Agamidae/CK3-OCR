vbox = {
	name = "event_window_widget_scheme"
	layoutpolicy_horizontal = expanding
	datacontext = "[EventWindowWidget.GetScope.sScheme('scheme')]"
	visible = "[Scheme.GetSchemeType.IsValid]"
	allow_outside = yes
	margin = { 10 5 }

	background = {
		using = Background_Area_With_Header
	}

	vbox = {
		layoutpolicy_horizontal = expanding

		hbox = {
			layoutpolicy_horizontal = expanding

			button_text = {
				onclick = "[ToggleGameViewData('intrigue_window', GetPlayer.GetID)]"
				onclick = "[GetVariableSystem.Toggle('hide_event')]"
				blockoverride "text" {

				}
				blockoverride "extra" {
					text_single = {
						visible = "[Scheme.IsExposed]"
						raw_text = "game_concept_exposed"
					}

					text_single = {
						raw_text = "[Scheme.GetSchemeType.GetTypeNameNoTooltip]"
					}

					# Target
					container = {

						# Character Target
						container = {
							datacontext = "[Scheme.GetTargetCharacter]"
							visible = "[Character.IsValid]"

							text_single = {
								raw_text = "[Character.GetFirstNameNoTooltip],"
							}
							text_single = {
								raw_text = ""
							}
						}

						# Title Target
						container = {
							datacontext = "[Scheme.GetTargetTitle]"
							visible = "[Title.IsValid]"
							text_single = {
								raw_text = "[Title.GetNameNoTierNoTooltip]"
							}
						}

						# Faith Target
						container = {
							datacontext = "[Scheme.GetTargetFaith]"
							visible = "[Faith.IsValid]"
							text_single = {
								raw_text = "[Faith.GetNameNoTooltip]"
							}
						}

						# Culture Target
						container = {
							datacontext = "[Scheme.GetTargetCulture]"
							visible = "[Culture.IsValid]"

							text_single = {
								text = "[Culture.GetNameNoTooltip]"
							}
						}
					}

					text_single = {
						visible = "[Scheme.GetSchemeType.IsBasic]"
						raw_text = "[Scheme.GetProgressBar|%0],"
					}


					text_single = {
						datacontext = "[Scheme.GetTargetCharacter]"
						visible = "[And(Character.IsValid, Not(Scheme.GetSchemeType.IsHostile))]"

						raw_text = "[Character.GetOpinionOf(GetPlayer)|=] opinion,"
						tooltip = "[Character.GetOpinionBreakdownText(GetPlayer)]"
					}

					####
					text_single = {
						raw_text = "Chance is"
						# [Scheme.GetSuccessChance]%
					}
					text_single = {
						raw_text = "SCHEME_WIDGET_SUCCESS_CHANCE"
					}
					comma = {}
					####

					# text_single = {
					# 	visible = "[GreaterThan_int32( Scheme.GetAgentCharges, '(int32)0' )]"
					# 	raw_text = "opportunities [Scheme.GetAgentCharges],"
					# }
					container = {
						visible = "[And(Scheme.GetSchemeCountermeasureProtectingTarget.IsValid, Scheme.GetSchemeType.IsHostile)]"
						ignoreinvisible = yes

						text_single = {
							visible = "[SchemeCountermeasureType.IsValid]"
							datacontext = "[Scheme.GetSchemeCountermeasureProtectingTarget]"
							raw_text = "countered by [SchemeCountermeasureType.GetName]."
						}
					}
				}
				# tooltip = "BOTTOMBAR_SCHEME_TOOLTIP"
			}

			expand = {}
	}

	vbox = {
		layoutpolicy_horizontal = expanding

		hbox = {
			spacing = 3
			layoutpolicy_horizontal = expanding


			flowcontainer = {
				visible = "[Scheme.IsSecret]"
				spacing = 3
				tooltip = "SCHEME_WINDOW_SECRECY_TOOLTIP"

				text_single = {
					raw_text = "Secrecy,"
				}

				text_single = {
					name = "secrecy"
					text = "SCHEME_WIDGET_SECRECY_SHORT"
				}
			}

			expand = { }
		}
	}
}
