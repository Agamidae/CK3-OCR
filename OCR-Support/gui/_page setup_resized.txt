
# 'province_region_page' = variable name, the first item on the current page, so 5, 10, 15, etc
# GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')) = our datamodel
# PageReset checks if the datamodel is smaller than our selected paged item

# TODO!
# 1. replace province_region_page
# 2. replace GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign'))
# 3. make sguis for reset, resize, next and prev

# reset if we paged too far and showing an item outside of the datamodel
#PageReset = LessThan_int32( GetDataModelSize( GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')) ), FixedPointToInt(GetPlayer.MakeScope.Var('province_region_page').GetValue ))
# or if we're missing variables



# state = {
#   name = "reset"
#   on_finish = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
#   trigger_on_create = yes
# }

state = {
  name = "reset"
  using = sgui_finish_reset
  trigger_when = "[Or(Or(PageReset('province_region_page', GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign'))), Not(GetPlayer.MakeScope.Var('global_page_size').IsSet)), Not(GetPlayer.MakeScope.Var('province_region_page').IsSet))]"
}

visible = "[Not(GreaterThan_int32(GetDataModelSize(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign'))), '(int32)10'))]"

visible = "[GreaterThan_int32(GetDataModelSize(GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign'))), '(int32)10')]"



blockoverride "sort" {
  onclick = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
}
blockoverride "reset_page" {
  on_finish = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
}
blockoverride "reverse_order" {
  shortcut = mapmode_house_secondary
}
blockoverride "toggle_text" {
  text_single = {
    raw_text = "Toggle: Shift D."
  }
}

blockoverride "widget_index" {
  text_single = {
    alwaystransparent = yes
    margin_left = 3
    raw_text = "[Add_int32(PdxGuiWidget.GetIndexInDataModel, Add_int32(FixedPointToInt( GetPlayer.MakeScope.Var('province_region_page').GetValue ), '(int32)1'))],"
  }
}

# top of the list

blockoverride "pre_count" {
  hbox = {
    spacing = 3

    text_single = {
      raw_text = "from [PageStart('province_region_page')] to [PageEnd('province_region_page', GetPlayer.MakeScope.Var('global_page_size').GetValue, GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')))],"
    }

    button_text = {
      shortcut = army_merge
      onclick = "[GetScriptedGui('resize_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
      blockoverride "text" {
        margin_left = -5
        raw_text = "Show [Select_CString(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('global_page_size').GetValue, '(CFixedPoint)10'), '5', '10')] per page, G."
      }
    }
  }
}


# raw_text
blockoverride "click_info" {}



# if we have sorting, reset when changing it
onselectionchanged = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
onclick = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"


# PageStart = Add_CFixedPoint(GetPlayer.MakeScope.Var('province_region_page').GetValue, '(CFixedPoint)1')
# adding one since we count from 0 in script
# PageEnd = Min_CFixedPoint(Add_CFixedPoint(GetPlayer.MakeScope.Var( 'province_region_page' ).GetValue, MAX ), IntToFixedPoint(GetDataModelSize( GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')) )))
# adding amount per page, but limiting to the datamodel size if we're at the end


datamodel = "[PageModel('province_region_page', FixedPointToInt(GetPlayer.MakeScope.Var('global_page_size').GetValue), GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')))]"


vbox = {
  layoutpolicy_horizontal = expanding

  hbox = {
    layoutpolicy_horizontal = expanding
    spacing = 3

    button_text = {
      visible = "[GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('province_region_page').GetValue, '(CFixedPoint)0' )]"
      blockoverride "text" {
        raw_text = "Previous [GetPlayer.MakeScope.Var('global_page_size').GetValue|0], Z."
      }
      onclick = "[GetScriptedGui('prev_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
      shortcut = decrease_speed_2
      using = paper_flip_back_ocr
    }

    button_text = {
      onclick = "[GetScriptedGui('reset_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
      shortcut = map_mode_18
      using = paper_flip_back_ocr
      blockoverride "text" {
        raw_text = "Reset, Control R."
      }
    }

    expand = {}
  }

  button_text = {
    layoutpolicy_horizontal = expanding
    blockoverride "text" {
      raw_text = "Next [GetPlayer.MakeScope.Var('global_page_size').GetValue|0], X."
    }
    onclick = "[GetScriptedGui('next_province_region_page').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    visible = "[GreaterThan_int32( Subtract_int32( GetDataModelSize( GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_foreign')) ), FixedPointToInt(GetPlayer.MakeScope.Var('province_region_page').GetValue )), FixedPointToInt(GetPlayer.MakeScope.Var('global_page_size').GetValue) )]"
    using = paper_flip_forward_ocr
    shortcut = increase_speed_2
  }
}

# 20 - 15 > 5
# only available until we reach the end
# datamodel size - current page = is it bigger than per page amount
