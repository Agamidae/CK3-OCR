window = {
	name = "raid_intent_selection_window"
	datacontext = "[GetVariableSystem]"
	datacontext = "[RaidIntentSelectionWindow.GetSelectedIntent]"
	datacontext = "[RaidIntentData.GetType]"
	using = base_ocr_window
	layer = middle
	allow_outside = yes

	window_ocr = {
		blockoverride "ocr_header" {
			header_text = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "RAID_INTENT_SELECTION_HEADER"
				}
				blockoverride "button_close"
				{
					onclick = "[RaidIntentSelectionWindow.Close]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				datacontext = "[RaidIntentSelectionWindow.GetArmy]"
				datacontext = "[RaidIntentSelectionWindow.GetCharacter]"

				button_primary_text = {
					layoutpolicy_horizontal = expanding
					blockoverride "text" {
						text = "CONFIRM"
					}
					blockoverride "extra" {
						text_single = {
							raw_text = "[RaidIntent.GetName]"
						}
					}
					visible = "[Not(RaidIntentSelectionWindow.IsArmyWindow)]"

					onclick = "[PostCommand( Character.SetDefaultRaidIntent( RaidIntentData.GetType.Self ) )]"
					enabled = "[IsValidCommand( Character.SetDefaultRaidIntent( RaidIntentData.GetType.Self ) )]"

					blockoverride "disabled" {
						visible = "[Not(IsValidCommand( Character.SetDefaultRaidIntent( RaidIntentData.GetType.Self ) ))]"
					}

					onclick = "[RaidIntentSelectionWindow.Close]"
				}

				button_primary_text = {
					layoutpolicy_horizontal = expanding
					blockoverride "text" {
						text = "CONFIRM"
					}
					blockoverride "extra" {
						text_single = {
							raw_text = "[RaidIntent.GetName]"
						}
					}
					visible = "[RaidIntentSelectionWindow.IsArmyWindow]"

					blockoverride "disabled" {
						visible = "[Not(IsValidCommand( Character.SetDefaultRaidIntent( RaidIntentData.GetType.Self ) ))]"
					}

					onclick = "[PostCommand( Character.SetDefaultRaidIntent( RaidIntentData.GetType.Self ) )]"
					onclick = "[PostCommand( Character.SetRaidIntent( Army.Self, RaidIntentData.GetType.Self ) )]"

					enabled = "[And(IsValidCommand(Character.SetDefaultRaidIntent(RaidIntentData.GetType.Self)), IsValidCommand(Character.SetRaidIntent(Army.Self, RaidIntentData.GetType.Self)))]"

					onclick = "[RaidIntentSelectionWindow.Close]"
				}

				button_text = {
					layoutpolicy_horizontal = expanding
					blockoverride "text" {
						text = "CANCEL"
					}
					blockoverride "extra" {
						, = {}
						text_single = {
							raw_text = "Escape."
						}
					}

					onclick = "[RaidIntentSelectionWindow.Close]"
					shortcut = "close_window"
				}
			}
		}
		blockoverride "ocr_content" {
			vbox = {
				datamodel = "[RaidIntentSelectionWindow.GetPotentialIntents]"
				layoutpolicy_horizontal = expanding

				item = {
					button_text = {
						layoutpolicy_horizontal = expanding

						onclick = "[RaidIntentSelectionWindow.SelectIntent( RaidIntent.Self )]"
						down = "[ObjectsEqual( RaidIntentData.GetType, RaidIntent.Self )]"
						enabled = "[RaidIntentSelectionWindow.CanPickIntent( RaidIntent.Self )]"

						tooltip = "RAID_CHANGE_INTENT_TOOLTIP"

						shortcuts_list = {
							blockoverride "click" {
								onclick = "[RaidIntentSelectionWindow.SelectIntent( RaidIntent.Self )]"
								enabled = "[RaidIntentSelectionWindow.CanPickIntent( RaidIntent.Self )]"
							}
						}

						blockoverride "num" {}

						blockoverride "pre" {
							text_single = {
								visible = "[Not(RaidIntentSelectionWindow.CanPickIntent( RaidIntent.Self ))]"
								raw_text = "Disabled"
							}
							text_single = {
								raw_text = "[RaidIntent.GetName]."
							}
						}
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					layoutpolicy_horizontal = expanding
					raw_text = "Selected intent: [RaidIntent.GetName]"
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					text_multi_wide = {
						raw_text = "[RaidIntent.GetDescription]"
					}

					expand = {}
				}
			}
		}
	}
}
