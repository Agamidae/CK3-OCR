window = {
	name = "title_customization_window"
	size = { 100% 100% }
	movable = no
	layer = middle

	using = Window_Background_No_Edge

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
		using = CoatOfArmsDesignerAnimationResetState
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = ocr_margins

		header_standard = {
			datacontext = "[TitleCustomizationWindow.GetTitle]"
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "CUSTOMIZE_TITLE_HEADER"
			}

			blockoverride "button_close"
			{
				onclick = "[TitleCustomizationWindow.Close]"
			}
		}

		background = {
			using = Background_Area_Dark
			margin_top = 7
			alpha = 0.3

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
				blend_mode = alphamultiply
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				name = "content"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				spacing = 10
				margin_top = 20
				margin_bottom = 25

				vbox = {
					layoutpolicy_vertical = expanding
					vbox = {
						layoutpolicy_horizontal = expanding
						margin = { 10 5 }
						margin_bottom = 8
						spacing = 10

						editbox_standard_with_label = {
							layoutpolicy_horizontal = expanding

							blockoverride "editbox_label"
							{
								raw_text = "[Localize('TITLE_NAME_FIELD')]."
								layoutpolicy_horizontal = expanding
							}

							blockoverride "editbox_properties"
							{
								text = "[TitleCustomizationWindow.GetTitleNameText]"
								ontextedited = "[TitleCustomizationWindow.OnEditTitleNameText]"
								margin_left = 5

								text_single = {
									raw_text = "Enter name here."
									margin_left = 5
									visible = "[StringIsEmpty(TitleCustomizationWindow.GetTitleNameText)]"
								}
							}
						}

						button_text = {
							onclick = "[TitleCustomizationWindow.ToggleUsesDefiniteForm]"
							layoutpolicy_horizontal = expanding
							blockoverride "text" {
								raw_text = "[Select_CString(TitleCustomizationWindow.UsesDefiniteForm, 'Enabled short style', 'Short style disabled')]. Click to toggle."
							}
						}

						widget = {
							layoutpolicy_horizontal = expanding

							scissor = yes

							text_single = {
								raw_text = "TITLE_CUSTOMIZATION_DEFINITE_FORM_TOOLTIP"
								resizeparent = yes
								margin_top = -25
							}
						}

						editbox_standard_with_label = {
							layoutpolicy_horizontal = expanding

							blockoverride "editbox_label"
							{
								raw_text = "[Localize('TITLE_ADJECTIVE_FIELD')]."
								layoutpolicy_horizontal = expanding
							}

							blockoverride "editbox_properties"
							{
								text = "[TitleCustomizationWindow.GetAdjectiveText]"
								ontextedited = "[TitleCustomizationWindow.OnEditAdjectiveText]"
								margin_left = 5

								text_single = {
									raw_text = "Enter name here."
									margin_left = 5
									visible = "[StringIsEmpty(TitleCustomizationWindow.GetAdjectiveText)]"
								}
							}
						}
					}

					vbox = {
						name = "details_input"
						visible = "[GetVariableSystem.Exists('ocr')]"

						vbox = {
							visible = "[TitleCustomizationWindow.ShowMapColorPicker]"
							layoutpolicy_horizontal = expanding

							spacing = 10

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 3

								text_label_left = {
									layoutpolicy_horizontal = expanding
									text = "MAP_COLOR_HEADER"
									using = Font_Size_Medium
								}
							}

							colorpicker_simple = {
								layoutpolicy_horizontal = expanding
								color = "[TitleCustomizationWindow.GetMapColor]"
								oncoloredited = "[TitleCustomizationWindow.SetMapColor]"
							}
							# colorpicker_text = {
							# 	layoutpolicy_horizontal = expanding
							# 	color = "[TitleCustomizationWindow.GetMapColor]"
							# 	oncoloredited = "[TitleCustomizationWindow.SetMapColor]"
							# }
						}

						expand = { }
					}

					expand = { }
				}


				vbox_coa_designer = {
					visible = "[GetVariableSystem.Exists('ocr')]"
					datacontext = "[TitleCustomizationWindow.GetCoatOfArmsDesigner]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
				}

				expand = { }
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				background = {
					layoutpolicy_horizontal = expanding
					using = Background_Area
					margin = { 20 20 }
				}

				button_text = {
					name = "finish_button"
					blockoverride "text" {
						text = "FINISH"
						align = left
					}
					blockoverride "extra" {
						text_single = {
							raw_text = ", hotkey Escape."
						}
					}
					blockoverride "disabled" {
						visible  = "[Not(TitleCustomizationWindow.CanClickFinish)]"
					}
					shortcut = close_window
					enabled = "[TitleCustomizationWindow.CanClickFinish]"
					tooltip = "[TitleCustomizationWindow.GetCanClickFinishText]"
					onclick = "[TitleCustomizationWindow.OnClickFinish]"
				}
			}
		}
	}
}
