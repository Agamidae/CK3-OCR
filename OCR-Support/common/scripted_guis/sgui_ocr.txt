quicksave = {
	effect = {
		send_interface_toast = {
		    title = "game_saved"
		}
	}
}

followers = {
	effect = {
		clear_variable_list = followers
		ordered_faith_character = {
			order_by = current_military_strength
			min = 0
			root = {
				add_to_variable_list = {
					name = followers
					target = prev
				}
			}
		}
	}
}

destroy_artifact = {
	confirm_title = "Confirm destroying artifact."
	effect = {
		destroy_artifact = root
	}
}

artifacts_list = {
	effect = {
		clear_variable_list = all_artifacts
		capital_province = {
			save_scope_as = second
		}

		if = {
			limit = {
				NOT = { exists = var:sort_artifacts }
			}
			set_variable = {
				name = sort_artifacts
				value = flag:rarity
			}
		}

		if = {
			limit = {
				NOT = { exists = var:filter_artifacts }
			}
			set_variable = {
				name = filter_artifacts
				value = flag:all
			}
		}

		every_artifact = {
			limit = {
				trigger_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:helmet }
					artifact_slot_type = helmet
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:primary_armament }
					artifact_slot_type = primary_armament
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:armor }
					artifact_slot_type = armor
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:regalia }
					artifact_slot_type = regalia
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:miscellaneous }
					artifact_slot_type = miscellaneous
				}
				trigger_else = { }
			}
			add_to_list = all_artifacts
		}

		switch = {
			trigger = var:sort_artifacts

			flag:rarity = {
				add_to_ledger = { list = all_artifacts x = artifact_rarity_svalue }
			}

			flag:distance = {
				ordered_in_list = {
					list = all_artifacts
					order_by = {
						value = artifact_owner.location.province_distance
						multiply = -1
					}
					min = 0

					root = {
						add_to_variable_list = {
							name = all_artifacts
							target = prev
						}
					}
				}
			}
		}
	}
}

sort_rarity = {
	effect = {
		if = {
			limit = {
				var:sort_artifacts = flag:rarity
			}
			set_variable = {
				name = sort_artifacts
				value = flag:distance
			}
		}
		else = {
			set_variable = {
				name = sort_artifacts
				value = flag:rarity
			}
		}
	}
	is_shown = {
		exists = var:sort_artifacts
		var:sort_artifacts = flag:rarity
	}
}

filter_artifacts_all = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:all
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:all
	}
}

filter_artifacts_helmet = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:helmet
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:helmet
	}
}

filter_artifacts_primary_armament = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:primary_armament
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:primary_armament
	}
}

filter_artifacts_armor = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:armor
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:armor
	}
}

filter_artifacts_regalia = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:regalia
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:regalia
	}
}

filter_artifacts_miscellaneous = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:miscellaneous
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:miscellaneous
	}
}

ongoing_wars_list = {
	effect = {
		clear_variable_list = ongoing_wars

		if = {
			limit = {
				NOT = { exists = var:sort_wars }
			}
			set_variable = {
				name = sort_wars
				value = flag:total_war_men
			}
		}

		if = {
			limit = {
				NOT = { exists = var:filter_wars }
			}
			set_variable = {
				name = filter_wars
				value = flag:all_wars
			}
		}

		every_ruler = {
			limit = {
				is_at_war = yes
			}
			every_character_war = {
				limit = {
					NOT = {
						is_in_list = ongoing_wars_temp
					}
				}
				add_to_list = ongoing_wars_temp
			}
		}

		every_in_list = {
			list = ongoing_wars_temp

			limit = {
				trigger_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:vassal_wars }

					any_war_participant = {
						is_vassal_or_below_of = root
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:realm_wars }
					any_war_participant = {
						is_vassal_or_below_of = root
						is_liege_or_above_of = root
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:holy_wars }
					OR = {
						using_cb = minor_religious_war
						using_cb = religious_war
						using_cb = major_religious_war
						using_cb = excommunication_war
						using_cb = flowery_war_cb
						using_cb = undirected_great_holy_war
						using_cb = directed_great_holy_war
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:great_holy_wars }
					OR = {
						using_cb = undirected_great_holy_war
						using_cb = directed_great_holy_war
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:civil_wars }
					OR = {
						using_cb = independence_faction_war
						using_cb = liberty_faction_war
						using_cb = populist_war
						using_cb = claimant_faction_war
						using_cb = depose_war
						using_cb = refused_liege_demand_war
						using_cb = independence_war
						using_cb = nation_fracturing_faction_war
					}
				}

				trigger_else = { }
			}

			add_to_list = ongoing_wars
		}

		switch = {
			trigger = var:sort_wars
			flag:total_war_men = {
				add_to_ledger = { list = ongoing_wars x = total_war_participants }
			}
			flag:attackers = {
				add_to_ledger = { list = ongoing_wars x = primary_attacker.current_military_strength }
			}
			flag:defenders = {
				add_to_ledger = { list = ongoing_wars x = primary_defender.current_military_strength }
			}
			flag:war_started = {
				add_to_ledger_reverse = { list = ongoing_wars x = war_days }
			}
		}
	}
}

sort_wars_total = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:total_war_men
		}
	}
}

sort_wars_attackers = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:attackers
		}
	}
}

sort_wars_defenders = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:defenders
		}
	}
}

sort_wars_time = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:war_started
		}
	}
}

filter_wars_all = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:all_wars
		}
	}
	is_shown = {
		var:filter_wars = flag:all_wars
	}
}

filter_wars_your_realm = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:vassal_wars
		}
	}
}

filter_wars_top_liege_realm = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:realm_wars
		}
	}
}

filter_wars_holy_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:holy_wars
		}
	}
}

filter_wars_great_holy_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:great_holy_wars
		}
	}
}

filter_wars_civil_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:civil_wars
		}
	}
}

special_buildings_list = {
	effect = {
		clear_variable_list = special_buildings
		capital_province = {
			save_scope_as = second
		}
		if = {
			limit = {
				NOT = { exists = var:sort_sp_buildings }
			}
			set_variable = {
				name = sort_sp_buildings
				value = flag:tax
			}
		}

		every_province = {
			limit = {
				has_holding = yes
				# OR = {
				# }
				trigger_if = {
					limit = {
						root = {
							exists = var:empty_sp_slots
						}
					}
					has_special_building_slot = yes
					has_special_building = no
				}
				trigger_else = {
					has_special_building = yes
				}
			}
			add_to_list = special_buildings
			special_buildings_switch = { }
		}

		switch = {
			trigger = var:sort_sp_buildings

			flag:tax = {
				add_to_ledger = { list = special_buildings x = monthly_income }
			}
			flag:levy = {
				add_to_ledger = { list = special_buildings x = building_levies }
			}
			flag:distance = {
				add_to_ledger_reverse = { list = special_buildings x = province_distance }
			}
		}

		if = { limit = { exists = var:special_buildings } }
		# add_to_ledger = { list = special_buildings x = monthly_income }
	}
}

sort_sp_tax = {
	effect = {
		if = {
			limit = {
				exists = var:sort_sp_buildings
				var:sort_sp_buildings = flag:tax
			}
			set_variable = {
				name = sort_sp_buildings
				value = flag:distance
			}
		}
		else = {
			set_variable = {
				name = sort_sp_buildings
				value = flag:tax
			}
		}
	}
	is_shown = {
		exists = var:sort_sp_buildings
		var:sort_sp_buildings = flag:tax
	}
}

sort_sp_levy = {
	effect = {
		set_variable = {
			name = sort_sp_buildings
			value = flag:levy
		}
	}
}

sort_sp_distance = {
	effect = {
		set_variable = {
			name = sort_sp_buildings
			value = flag:distance
		}
	}
}

filter_sp_slots = {
	effect = {
		if = {
			limit = { exists = var:empty_sp_slots }
			remove_variable = empty_sp_slots
		}
		else = {
			set_variable = empty_sp_slots
		}
	}
	is_shown = {
		exists = var:empty_sp_slots
	}
}

regions = {
	effect = {
		set_global_variable = {
			name = all_playable_rulers
			value = all_playable_rulers
		}

		add_playable_rulers = { x = world_europe }
		add_playable_rulers = { x = world_europe_west }
		add_playable_rulers = { x = world_europe_west_britannia }
		add_playable_rulers = { x = world_europe_west_germania }
		add_playable_rulers = { x = world_europe_west_francia }
		add_playable_rulers = { x = world_europe_west_iberia }
		add_playable_rulers = { x = world_europe_north }
		add_playable_rulers = { x = world_europe_south }
		add_playable_rulers = { x = world_europe_south_east }
		add_playable_rulers = { x = world_europe_south_italy }
		add_playable_rulers = { x = world_europe_east }

		add_playable_rulers = { x = world_asia_minor }

		add_playable_rulers = { x = world_middle_east }
		add_playable_rulers = { x = world_middle_east_jerusalem }
		add_playable_rulers = { x = world_middle_east_arabia }
		add_playable_rulers = { x = world_middle_east_persia }

		add_playable_rulers = { x = world_india }
		add_playable_rulers = { x = world_india_deccan }
		add_playable_rulers = { x = world_india_bengal }
		add_playable_rulers = { x = world_india_rajastan }

		add_playable_rulers = { x = world_africa }
		add_playable_rulers = { x = world_africa_north }
		add_playable_rulers = { x = world_africa_north_west }
		add_playable_rulers = { x = world_africa_north_east }
		add_playable_rulers = { x = world_africa_west }
		add_playable_rulers = { x = world_africa_east }

		add_playable_rulers = { x = world_steppe }
		add_playable_rulers = { x = world_steppe_tarim }
		add_playable_rulers = { x = world_steppe_west }
		add_playable_rulers = { x = world_steppe_east }

		add_playable_rulers = { x = world_tibet }

		add_playable_rulers = { x = world_burma }
	}
}

all_rulers = {
	effect = {
		set_global_variable = {
			name = all_landed_rulers
			value = all_landed_rulers
		}

		add_landed_rulers = { x = world_europe }
		add_landed_rulers = { x = world_europe_west }
		add_landed_rulers = { x = world_europe_west_britannia }
		add_landed_rulers = { x = world_europe_west_germania }
		add_landed_rulers = { x = world_europe_west_francia }
		add_landed_rulers = { x = world_europe_west_iberia }
		add_landed_rulers = { x = world_europe_north }
		add_landed_rulers = { x = world_europe_south }
		add_landed_rulers = { x = world_europe_south_east }
		add_landed_rulers = { x = world_europe_south_italy }
		add_landed_rulers = { x = world_europe_east }

		add_landed_rulers = { x = world_asia_minor }

		add_landed_rulers = { x = world_middle_east }
		add_landed_rulers = { x = world_middle_east_jerusalem }
		add_landed_rulers = { x = world_middle_east_arabia }
		add_landed_rulers = { x = world_middle_east_persia }

		add_landed_rulers = { x = world_india }
		add_landed_rulers = { x = world_india_deccan }
		add_landed_rulers = { x = world_india_bengal }
		add_landed_rulers = { x = world_india_rajastan }

		add_landed_rulers = { x = world_africa }
		add_landed_rulers = { x = world_africa_north }
		add_landed_rulers = { x = world_africa_north_west }
		add_landed_rulers = { x = world_africa_north_east }
		add_landed_rulers = { x = world_africa_west }
		add_landed_rulers = { x = world_africa_east }

		add_landed_rulers = { x = world_steppe }
		add_landed_rulers = { x = world_steppe_tarim }
		add_landed_rulers = { x = world_steppe_west }
		add_landed_rulers = { x = world_steppe_east }

		add_landed_rulers = { x = world_tibet }

		add_landed_rulers = { x = world_burma }
	}
}

playable_vassals = {
	effect = {
		clear_variable_list = playable_vassals
		ordered_vassal = {
			order_by = sub_realm_size
			min = 0
			limit = {
				sub_realm_size > 0
				exists = capital_province
				NOR = {
					has_government = theocracy_government
					has_government = republic_government
					has_government = mercenary_government
					has_government = holy_order_government
				}
			}
			save_scope_as = vassal
			prev = {
				add_to_variable_list = {
					name = playable_vassals
					target = scope:vassal
				}
			}
		}
	}
}

stop_errors = {
	effect = {
		add_to_variable_list = {
			name = battles
			target = this
		}
	}
	is_shown = {
		has_variable_list = battles
		has_global_variable = all_playable_rulers
		# has_variable = test
		# has_global_variable = test
	}
}

is_tooltip_open = {
	is_shown = {
		current_tooltip_depth > 0
	}
}

find_closest = {
	effect = {
		scope:target = {
			remove_variable = closest_county
			save_scope_as = second
		}

		ordered_sub_realm_county = {
			limit = {
				county_controller = {
					is_county_safe = yes
				}
			}
			order_by = {
				value = squared_province_distance
				multiply = -1
			}
			max = 1

			scope:target = {
				set_variable = {
					name = closest_county
					value = prev
					days = 1
				}
			}
		}
	}
}
#
# go_to_closes = {
# 	effect = {
#
# 	}
# }

close_interactions = {
	effect = {
		if = {
			limit = {
				has_variable = close_interactions
			}
			remove_variable = close_interactions
		}
		else = {
			set_variable = close_interactions
		}
	}
	is_shown = {
		has_variable = close_interactions
	}
}

is_drifting_to_player = {
	saved_scopes = { player }
	is_shown = {
		de_jure_drifting_towards = scope:player.primary_title
	}
}

is_drifting = {
	saved_scopes = { parent_title }

	is_shown = {
		de_jure_drifting_towards = scope:parent_title
	}
}

is_drifting_to_liege = {
	saved_scopes = { parent_title }

	is_shown = {
		de_jure_drifting_towards = scope:parent_title.de_facto_liege
	}
}

fabricating_claim = {
	saved_scopes = { player }
	is_shown = {
		is_target_of_council_task = task_fabricate_claim
		scope:player = {
			exists = cp:councillor_court_chaplain
			cp:councillor_court_chaplain = {
				is_performing_council_task = task_fabricate_claim
				councillor_task_target = root.title_province
			}
		}
	}
}

fabricate_claim = {
	saved_scopes = { player }
	confirm_title = "fabricate_claim_title"
	confirm_text = "fabricate_claim_text"

	is_valid = {
		save_temporary_scope_as = county
		exists = scope:player.cp:councillor_court_chaplain

		scope:player.cp:councillor_court_chaplain = {
			save_temporary_scope_as = councillor
			liege = {
				save_temporary_scope_as = councillor_liege
			}
		}

		scope:county.holder.top_liege = {
			in_diplomatic_range = scope:councillor_liege
		}
		scope:county = {
			NOR = {
				holder = scope:councillor_liege
				scope:councillor_liege = {
					has_claim_on = scope:county
				}
			}
		}
	}

	effect = {
		save_scope_as = county
		if = {
			limit = {
				exists = scope:player.cp:councillor_court_chaplain
			}
			scope:player.cp:councillor_court_chaplain = {
				save_scope_as = councillor
				liege = {
					save_scope_as = councillor_liege
				}
			}
		}

		scope:player = {
			cp:councillor_court_chaplain = {
				set_council_task = {
					task_type = task_fabricate_claim
					target = root
				}
				hidden_effect = {
					set_council_task = {
						task_type = task_fabricate_claim
						target = root.title_province
					}
				}
			}
		}
	}
}

is_conversion_active = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		scope:county = {
			is_target_of_council_task = task_conversion
		}
		scope:councillor = {
			is_performing_council_task = task_conversion
			councillor_task_target = scope:county.title_province
		}
	}
}

###

any_task_active = {
	saved_scopes = { county councillor_liege target_character }
	is_shown = {
		OR = {
			AND = {
				exists = cp:councillor_court_chaplain
				cp:councillor_court_chaplain = {
					save_temporary_scope_as = councillor
				}
				OR = {
					council_task_is_shown = { task = task_fabricate_claim }
					council_task_is_shown = { task = task_conversion }
				}
			}
			AND = {
				exists = cp:councillor_chancellor
				cp:councillor_chancellor = {
					save_temporary_scope_as = councillor
				}
				OR = {
					council_task_is_shown = { task = task_integrate_title }
					court_task_is_shown = { task = task_bestow_royal_favor }
				}
			}
			AND = {
				exists = cp:councillor_marshal
				cp:councillor_marshal = {
					save_temporary_scope_as = councillor
				}
				council_task_is_shown = { task = task_increase_control }
			}
			AND = {
				exists = cp:councillor_steward
				cp:councillor_steward = {
					save_temporary_scope_as = councillor
				}
				OR = {
					council_task_is_shown = { task = task_develop_county }
					council_task_is_shown = { task = task_promote_culture }
					council_task_is_shown = { task = task_accept_culture }
					council_task_is_shown = { task = task_convince_dejure }
				}
			}
			AND = {
				exists = cp:councillor_spymaster
				cp:councillor_spymaster = {
					save_temporary_scope_as = councillor
				}
				scope:target_character.capital_province.county = scope:county
				court_task_is_shown = { task = task_find_secrets }
			}
		}
	}
}


is_fabricating_claim = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_fabricate_claim }
	}
}

fabricate_claim_button = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "fabricate_claim_title"
	confirm_text = "active_task_warning"

	is_shown = {
		council_task_is_valid = { task = task_fabricate_claim }
		NOT = { council_task_is_shown = { task = task_fabricate_claim } }
	}
	is_valid = {
		council_task_is_valid = { task = task_fabricate_claim }
	}
	effect = {
		council_task_effect = { task = task_fabricate_claim }
	}
}

is_converting_faith = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_conversion }
	}
}

convert_faith_button = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "convert_faith_title"
	confirm_text = "active_task_warning"

	is_shown = {
		NOT = { scope:county.faith = root.faith }
		scope:county.holder = {
			OR = {
				this = root
				any_liege_or_above = {
					this = root
				}
			}
		}
		NOT = { council_task_is_shown = { task = task_conversion } }
	}

	is_valid = {
		council_task_is_valid = { task = task_conversion }
	}
	effect = {
		council_task_effect = { task = task_conversion }
	}
}

task_integrate_title = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_integrate_title_title"
	confirm_text = "active_task_warning"

	is_shown = {
		scope:county = {
			de_jure_drifting_towards = scope:councillor_liege.primary_title
		}
		NOT = { council_task_is_shown = { task = task_integrate_title } }
	}

	is_valid = {
		council_task_is_valid = { task = task_integrate_title }
	}
	effect = {
		council_task_effect = { task = task_integrate_title }
	}
}


is_integrating_title = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_integrate_title }
	}
}

task_increase_control = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_increase_control_title"
	confirm_text = "active_task_warning"

	is_shown = {
		council_task_is_valid = { task = task_increase_control }
		NOT = { council_task_is_shown = { task = task_increase_control } }
	}

	is_valid = {
		council_task_is_valid = { task = task_increase_control }
	}
	effect = {
		council_task_effect = { task = task_increase_control }
	}
}

has_county_corruption_trigger_sgui = {
	is_shown = {
		has_county_corruption_trigger = yes
	}
}

is_increasing_control = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_increase_control }
	}
}

task_develop_county = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_develop_county_title"
	confirm_text = "active_task_warning"

	is_shown = {
		council_task_is_valid = { task = task_develop_county }
		NOT = { council_task_is_shown = { task = task_develop_county } }
	}

	is_valid = {
		council_task_is_valid = { task = task_develop_county }
	}
	effect = {
		council_task_effect = { task = task_develop_county }
	}
}

task_promote_culture = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_promote_culture_title"
	confirm_text = "active_task_warning"

	is_shown = {
		# council_task_is_valid = { task = task_promote_culture }
		scope:county = {
			NOT = { culture = scope:councillor_liege.culture }
		}
		scope:county.holder = {
			OR = {
				this = root
				any_liege_or_above = {
					this = root
				}
			}
		}
		NOT = { council_task_is_shown = { task = task_promote_culture } }
	}

	is_valid = {
		council_task_is_valid = { task = task_promote_culture }
	}
	effect = {
		council_task_effect = { task = task_promote_culture }
	}
}

task_accept_culture = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_accept_culture_title"
	confirm_text = "active_task_warning"

	is_shown = {
		# council_task_is_valid = { task = task_accept_culture }
		scope:county = {
			NOT = { culture = scope:councillor_liege.culture }
		}
		scope:county.holder = {
			OR = {
				this = root
				any_liege_or_above = {
					this = root
				}
			}
		}
		NOT = { council_task_is_shown = { task = task_accept_culture } }
	}

	is_valid = {
		council_task_is_valid = { task = task_accept_culture }
	}
	effect = {
		council_task_effect = { task = task_accept_culture }
	}
}

task_convince_dejure = {
	saved_scopes = { county councillor councillor_liege }
	confirm_title = "task_convince_dejure_title"
	confirm_text = "active_task_warning"

	is_shown = {
		has_dlc_feature = royal_court
		NOT = {
			scope:county = {
				holder = {
					OR = {
						this = root
						target_is_liege_or_above = root
					}
				}
			}
		}
		council_task_is_valid = { task = task_convince_dejure }
		NOT = { council_task_is_shown = { task = task_convince_dejure } }
	}

	is_valid = {
		council_task_is_valid = { task = task_convince_dejure }
	}
	effect = {
		council_task_effect = { task = task_convince_dejure }
	}
}

is_developing = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_develop_county }
	}
}

is_promoting = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_promote_culture }
	}
}

is_accepting = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_accept_culture }
	}
}

is_convincing_de_jure = {
	saved_scopes = { county councillor councillor_liege }

	is_shown = {
		council_task_is_shown = { task = task_convince_dejure }
	}
}

finish_task = {
	effect = {
		finish_council_task = yes
	}
}

task_find_secrets = {
	saved_scopes = { target_character councillor councillor_liege }
	confirm_title = "task_find_secrets_title"
	confirm_text = "active_task_warning"

	is_shown = {
		court_task_is_valid = { task = task_find_secrets }
		NOT = { court_task_is_shown = { task = task_find_secrets } }
	}
	is_valid = {
		court_task_is_valid = { task = task_find_secrets }
	}
	effect = {
		court_task_effect = { task = task_find_secrets }
	}
}

is_searching_for_secrets = {
	saved_scopes = { target_character county councillor councillor_liege }

	is_shown = {
		scope:target_character.capital_province.county = scope:county
		court_task_is_shown = { task = task_find_secrets }
	}
}

task_bestow_royal_favor = {
	saved_scopes = { target_character councillor councillor_liege }
	confirm_title = "task_bestow_royal_favor_title"
	confirm_text = "active_task_warning"

	is_shown = {
		# court_task_is_valid = { task = task_bestow_royal_favor }
		has_dlc_feature = royal_court
		court_grandeur_current_level >= 2
		target_is_vassal_or_below = scope:target_character
		NOT = { court_task_is_shown = { task = task_bestow_royal_favor } }
	}
	is_valid = {
		court_task_is_valid = { task = task_bestow_royal_favor }
	}
	effect = {
		court_task_effect = { task = task_bestow_royal_favor }
	}
}

is_bestowing_favor = {
	saved_scopes = { target_character councillor councillor_liege }

	is_shown = {
		court_task_is_shown = { task = task_bestow_royal_favor }
	}
}

show_coordinates = {
	is_shown = {
		exists = var:show_coordinates
	}
	effect = {
		if = {
			limit = {
				NOT = { exists = var:show_coordinates }
			}
			set_variable = show_coordinates
		}
		else = {
			remove_variable = show_coordinates
		}
	}
}

safe_county = {
	saved_scopes = { target }
	is_valid = {
		scope:target = {
			county_controller = {
				is_county_safe = yes
			}
		}
	}
}

is_friendly_county = {
	saved_scopes = { target }

	is_shown = {
		scope:target = {
			county_controller = {
				is_county_friendly = yes
			}
		}
	}
}


is_hostile_county = {
	saved_scopes = { target }

	is_shown = {
		scope:target = {
			county_controller = {
				is_county_safe = no
			}
		}
	}
}

is_hostile_barony = {
	saved_scopes = { target }

	is_shown = {
		scope:target = {
			barony_controller = {
				is_county_safe = no
			}
			# ???
			# county_controller = {
			# 	is_county_safe = yes
			# }
		}
	}
}

is_friendly_barony = {
	saved_scopes = { target }

	is_shown = {
		scope:target = {
			barony_controller = {
				is_county_friendly = yes
			}
		}
	}
}

build_farms = {
	effect = {
		clear_variable_list = build_farms

		ordered_sub_realm_barony = {
			order_by = title_province.monthly_income
			min = 0

			limit = {
				can_build_farms = yes
			}

			root = {
				add_to_variable_list = {
					name = build_farms
					target = prev.title_province
				}
			}
		}
	}
}

build_in_vassals = {
	effect = {
		if = {
			limit = {
				has_variable = build_in_vassals
			}
			remove_variable = build_in_vassals
		}
		else = {
			set_variable = build_in_vassals
		}
	}
}

replace_buildings = {
	effect = {
		if = {
			limit = {
				has_variable = replace_buildings
			}
			remove_variable = replace_buildings
		}
		else = {
			set_variable = replace_buildings
		}
	}
}

is_king_or_emperor = {
	is_shown = {
		highest_held_title_tier >= tier_kingdom
	}
}

integrate_titles = {
	is_shown = {
		integrate_titles > 0
		highest_held_title_tier >= tier_kingdom
	}

	effect = {
		clear_variable_list = integrate_titles

		# every_realm_de_jure_kingdom = {
		# 	limit = {
		# 		can_integrate_title = yes
		# 	}
		# 	# add_to_list = integrate_kingdoms
		# 	add_to_list = integrate_titles
		# }
		#
		# every_realm_de_jure_duchy = {
		# 	limit = {
		# 		can_integrate_title = yes
		# 	}
		# 	add_to_list = integrate_titles
		# 	# add_to_list = integrate_duchies
		# }

		every_realm_county = {
			limit = {
				can_integrate_title = yes
			}
			add_to_list = integrate_titles
			# add_to_list = integrate_counties
		}

		# every_in_list = {
		# 	list = integrate_counties
		# 	limit = {
		# 		de_jure_liege = {
		# 			is_in_list = integrate_duchies
		# 		}
		# 	}
		# 	remove_from_list = integrate_counties
		# }
		#
		# every_in_list = {
		# 	list = integrate_duchies
		# 	limit = {
		# 		de_jure_liege = {
		# 			is_in_list = integrate_kingdoms
		# 		}
		# 	}
		# 	remove_from_list = integrate_duchies
		# }
		#
		# every_in_list = {
		# 	list = integrate_duchies
		# 	add_to_list = integrate_titles
		# }
		# every_in_list = {
		# 	list = integrate_counties
		# 	add_to_list = integrate_titles
		# }
		every_in_list = {
			list = integrate_titles
			root = {
				add_to_variable_list = {
					name = integrate_titles
					target = prev
				}
			}
		}
	}
}

low_control_counties = {
	effect = {
		clear_variable_list = low_control_counties
		ordered_sub_realm_county = {
			order_by = {
				value = county_control
				multiply = -1
			}
			min = 0
			limit = {
				can_increase_control = yes
				trigger_if = {
					limit = {
						root = { NOT = { exists = var:build_in_vassals } }
					}
					holder = root
				}
			}
			root = {
				add_to_variable_list = {
					name = low_control_counties
					target = prev
				}
			}
		}
	}
}



show_suggestions = {
	is_shown = {
		exists = var:show_suggestions
	}
	effect = {
		if = {
			limit = {
				NOT = { exists = var:show_suggestions }
			}
			set_variable = show_suggestions
		}
		else = {
			remove_variable = show_suggestions
		}
	}
}



is_overriding_designated_winner = {
	is_shown = {
		is_overriding_designated_winner = yes
	}
}

counties_in_title = {
	effect = {
		clear_variable_list = counties_in_title

		every_de_jure_county = {
			holder = {
				add_to_list = county_holders
			}
		}

		ordered_in_list = {
			list = county_holders
			min = 0

			order_by = {
				value = 0
				save_temporary_scope_as = player
				root = {
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
							holder = {
								OR = {
									this = scope:player
									any_liege_or_above = {
										this = scope:player
									}
								}
							}
						}
						add = 1
					}
				}
			}

			save_scope_as = player

			root = {
				every_de_jure_county = {
					limit = {
						holder = scope:player
						trigger_if = {
							limit = {
								scope:target = {
									OR = {
										has_variable = filter_counties_title_faith
										has_variable = filter_counties_title_culture
									}
								}
							}
							OR = {
								AND = {
									scope:target = {
										has_variable = filter_counties_title_faith
									}
									NOT = {
										faith = root.holder.faith
									}
								}
								AND = {
									scope:target = {
										has_variable = filter_counties_title_culture
									}
									NOT = {
										culture = root.holder.culture
									}
								}
							}
						}
						trigger_else = {
							always = yes
						}
						trigger_if = {
							limit = {
								scope:target = {
									has_variable = filter_counties_title_you
								}
							}
							holder = {
								NOR = {
									this = scope:target
									any_liege_or_above = {
										this = scope:target
									}
								}
							}
						}
						trigger_else = {
							always = yes
						}
					}
					root = {
						add_to_variable_list = {
							name = counties_in_title
							target = prev
						}
					}
				}
			}
		}


		# ordered_de_jure_county = {
		# 	order_by = {
		# 		value = 0
		# 		holder = {
		# 			save_temporary_scope_as = player
		# 			root = {
		# 				every_in_de_jure_hierarchy = {
		# 					limit = {
		# 						tier = tier_county
		# 						holder = {
		# 							OR = {
		# 								this = scope:player
		# 								any_liege_or_above = {
		# 									this = scope:player
		# 								}
		# 							}
		# 						}
		# 					}
		# 					add = 1
		# 				}
		# 			}
		# 		}
		# 	}
		# 	min = 0
		# 	root = {
		# 		add_to_variable_list = {
		# 			name = counties_in_title
		# 			target = prev
		# 		}
		# 	}
		# }
	}
}

is_county_not_in_fog = {
	saved_scopes = { this_county }
	is_shown = {
		OR = {
			# is it in or near a friendly county?
			scope:this_county = {
				OR = {
					county_controller = {
						is_county_friendly = yes
					}
					any_neighboring_county = {
						county_controller = {
							OR = {
								is_county_friendly = yes
								# turns out, lieges of your allies extend vision to you
								any_liege_or_above = {
									is_county_safe = yes # stupid name now, but whatever, I'll change later #TODO
									any_vassal_or_below = {
										is_allied_in_war = root
									}
								}
							}
						}
					}
				}
			}

			# are our armies near it?
			root = {
				any_army = {
					location = {
						trigger_if = {
							limit = {
								is_sea_province = no
							}
							county = {
								OR = {
									this = scope:this_county
									any_neighboring_county = {
										this = scope:this_county
									}
								}
							}
						}
						trigger_else = {
							squared_distance = {
								target = scope:this_county
								value < 500
							}
						}
					}
				}
			}
			# are our allies near it?
			any_in_list = {
				variable = all_allies
				location = {
					trigger_if = {
						limit = {
							is_sea_province = no
						}
						county = {
							OR = {
								this = scope:this_county
								any_neighboring_county = {
									this = scope:this_county
								}
							}
						}
					}
					trigger_else = {
						squared_distance = {
							target = scope:this_county
							value < 500
						}
					}
				}
			}
		}
	}
}

is_land = {
	is_shown = {
		is_sea_province = no
		is_river_province = no
	}
}

is_sea = {
	is_shown = {
		is_sea_province = yes
	}
}

is_river = {
	is_shown = {
		is_river_province = yes
	}
}

raise_army_grouping = {
	effect = {
		if = {
			limit = {
				NOT = { has_variable = army_grouping }
			}
			set_variable = {
				name = army_grouping
				value = 0
			}
		}
		if = {
			limit = {
				var:army_grouping < 4
			}
			change_variable = {
				name = army_grouping
				add = 1
			}
		}
	}
	is_shown = {
		exists = var:army_grouping
		var:army_grouping < 4
	}
}

lower_army_grouping = {
	effect = {
		if = {
			limit = {
				NOT = { has_variable = army_grouping }
			}
			set_variable = {
				name = army_grouping
				value = 0
			}
		}
		if = {
			limit = {
				var:army_grouping > 0
			}
			change_variable = {
				name = army_grouping
				subtract = 1
			}
		}
	}
	is_shown = {
		exists = var:army_grouping
		var:army_grouping > 0
	}
}

should_show_any_armies = {
	is_shown = {
		OR = {
			has_variable_list = all_allies
			has_variable_list = all_enemies
		}
	}
}

title_rulers = {
    effect = {
        clear_variable_list = title_rulers

        every_de_jure_county_holder = {
            add_to_list = county_holders
        }

        every_in_list = {
            list = county_holders
            limit = {
                NOT = {
                    any_liege_or_above = {
                        is_in_list = county_holders
                    }
                }
            }
			if = {
				limit = {
					is_independent_ruler = no
					top_liege = {
						NOT = {
							is_in_list = county_holders
						}
					}
				}
				top_liege = {
					root = {
						add_to_variable_list = {
							name = title_rulers
							target = prev
						}
					}
				}
			}
			else = {
				root = {
					add_to_variable_list = {
						name = title_rulers
						target = prev
					}
				}
			}
        }
    }
}

next_vassal_page = {
	effect = {
		if = {
			limit = {
				NOT = {
					exists = var:vassal_page
				}
			}
			set_variable = {
				name = vassal_page
				value = 0
			}
		}
		change_variable = {
			name = vassal_page
			add = 5
		}
	}
}

prev_vassal_page = {
	effect = {
		if = {
			limit = {
				NOT = {
					exists = var:vassal_page
				}
			}
			set_variable = {
				name = vassal_page
				value = 0
			}
		}
		change_variable = {
			name = vassal_page
			add = -5
		}
	}
	is_valid = {
		exists = var:vassal_page
		var:vassal_page > 4
	}
}

reset_vassal_page = {
	effect = {
		set_variable = {
			name = vassal_page
			value = 0
		}
	}
}

add_toast = {
	effect = {
		if = {
			limit = {
				NOT = {
					exists = var:toasts
				}
			}
			set_variable = {
				name = toasts
				value = 1
			}
		}
		else = {
			change_variable = {
				name = toasts
				add = 1
			}
		}
	}
}

clear_toasts = {
	effect = {
		remove_variable = toasts
	}
}

toggle_hud_hotkeys = {
	effect = {
		if = {
			limit = { exists = var:toggle_hud_hotkeys }
			remove_variable = toggle_hud_hotkeys
		}
		else = {
			set_variable = toggle_hud_hotkeys
		}
	}
	is_shown = {
		NOT = { exists = var:toggle_hud_hotkeys }
	}
}

feed_auto_close = {
	effect = {
		if = {
			limit = { exists = var:feed_auto_close }
			remove_variable = feed_auto_close
		}
		else = {
			set_variable = feed_auto_close
		}
	}
	is_shown = {
		NOT = { exists = var:feed_auto_close }
	}
}


self_variable = {
	effect = {
		set_variable = {
			name = me
			value = root
		}
	}
}

raid_radius_plus = {
	effect = {
		if = {
			limit = {
				NOT = {
					has_variable = raid_radius
				}
			}
			set_variable = {
				name = raid_radius
				value = 4
			}
		}
		else = {
			change_variable = {
				name = raid_radius
				add = 1
			}
		}
	}
	is_shown = {
		has_variable = raid_radius
		var:raid_radius < 8
	}
}

raid_radius_minus = {
	effect = {
		if = {
			limit = {
				NOT = {
					has_variable = raid_radius
				}
			}
			set_variable = {
				name = raid_radius
				value = 2
			}
		}
		else = {
			change_variable = {
				name = raid_radius
				subtract = 1
			}
		}
	}
	is_shown = {
		has_variable = raid_radius
		var:raid_radius > 1
	}
}

unsafe_raid = {
	effect = {
		if = {
			limit = { exists = var:unsafe_raid }
			remove_variable = unsafe_raid
		}
		else = {
			set_variable = unsafe_raid
		}
	}
	is_shown = {
		exists = var:unsafe_raid
	}
}

is_in_outliner = {
	is_shown = {
		OR = {
			is_target_in_variable_list = {
				name = outliner_provinces
				target = scope:target
			}
			is_target_in_variable_list = {
				name = outliner_titles
				target = scope:target
			}
		}
	}
}

add_province_to_outliner = {
	effect = {
		if = {
			limit = {
				is_target_in_variable_list = {
					name = outliner_provinces
					target = scope:target
				}
			}
			remove_list_variable = {
				name = outliner_provinces
				target = scope:target
			}
		}
		else = {
			add_to_variable_list = {
				name = outliner_provinces
				target = scope:target
			}
		}
	}
}

add_title_to_outliner = {
	effect = {
		if = {
			limit = {
				is_target_in_variable_list = {
					name = outliner_titles
					target = scope:target
				}
			}
			remove_list_variable = {
				name = outliner_titles
				target = scope:target
			}
		}
		else = {
			add_to_variable_list = {
				name = outliner_titles
				target = scope:target
			}
		}
	}
}

outliner_provinces = {
	effect = {
		if = {
			limit = { exists = var:outliner_provinces }
			remove_variable = outliner_provinces
		}
		else = {
			set_variable = outliner_provinces
		}
	}
	is_shown = {
		exists = var:outliner_provinces
	}
}

close_outliner_provinces = {
	effect = {
		set_variable = outliner_provinces
	}
}


outliner_titles = {
	effect = {
		if = {
			limit = { exists = var:outliner_titles }
			remove_variable = outliner_titles
		}
		else = {
			set_variable = outliner_titles
		}
	}
	is_shown = {
		exists = var:outliner_titles
	}
}

close_outliner_titles = {
	effect = {
		set_variable = outliner_titles
	}
}

# save_flag = {
# 	effect = {
# 		add_to_variable_list = {
# 			name = test
# 			target = flag:works
# 		}
# 	}
# 	is_shown = {
# 		is_target_in_variable_list = {
# 			name = test
# 			target = scope:target
# 		}
# 	}
# }


find_languages = {
	effect = {
		clear_variable_list = royal_court_languages

		ordered_character_with_royal_court = {
			min = 0
			limit = {
				save_temporary_scope_as = royalty
				trigger_if = {
					limit = {
						root = {
							NOT = { has_variable = all_languages }
						}
					}
					court_grandeur_current > root.court_grandeur_current
					NOT = {
						this = root
						has_same_court_language = root
					}
				}
			}
			order_by = {
				value = court_grandeur_current
				multiply = -1
			}
			add_to_list = courts
		}

		every_in_list = {
			list = courts
			save_scope_as = lang
			if = {
				limit = {
					any_in_list = {
						count > 1
						list = courts
						has_same_court_language = scope:lang
					}
				}

				remove_from_list = courts

			}
		}

		ordered_in_list = {
			list = courts
			order_by = {
				value = court_grandeur_current
				# multiply = -1
			}
			min = 0
			root = {
				add_to_variable_list = {
					name = royal_court_languages
					target = prev
				}
			}
		}
	}
}

all_languages = {
	effect = {
		toggle_var = { VAR = all_languages }
	}
}

# is_tutorial_tooltip = {
# 	is_shown = {
# 		is_tutorial_lesson_active = lesson_basics_tooltips_practice
# 	}
# }


warn_console = {
	confirm_title = "warn_console_title"
	confirm_text = "warn_console_text"
	effect = {
		set_global_variable = console_used
	}
}


sgui_flag = {
	effect = {
		if = {
			limit = {
				is_target_in_variable_list = {
					name = ocr_settings
					target = scope:target
				}
			}
			remove_list_variable = {
				name = ocr_settings
				target = scope:target
			}
		}
		else = {
			add_to_variable_list = {
				name = ocr_settings
				target = scope:target
			}
		}
	}
	is_shown = {
		is_target_in_variable_list = {
			name = ocr_settings
			target = scope:target
		}
	}
}

heritage_filter = {
	effect = {
		toggle_var = { VAR = heritage_filter }
	}
}

culture_list = {
	effect = {
		clear_variable_list = cultures

		ordered_culture_global = {
		  min = 0
		  order_by = {
				if = {
					limit = {
						root = {
							has_variable = cultural_acceptance_sorting
						}
					}
					value = "cultural_acceptance(root.culture)"
				}
				else = {
					value = culture_number_of_counties
				}
			}

			limit = {
				trigger_if = {
					limit = {
						root = {
							has_variable = heritage_filter
						}
					}
					has_same_culture_heritage = scope:target
				}
				trigger_else = {
					always = yes
				}
			}

		  root = {
		    add_to_variable_list = {
		      name = cultures
		      target = prev
		    }
		  }
		}
	}
}

culture_counties_list = {
	effect = {
		clear_variable_list = culture_counties
		scope:target = {
			ordered_culture_county = {
				min = 0
				order_by = {
					value = "squared_distance(root.capital_county)"
					multiply = -1
				}

				root = {
					add_to_variable_list = {
						name = culture_counties
						target = prev
					}
				}
			}
		}
	}
}

cultural_acceptance_sorting = {
	effect = {
		toggle_var = { VAR = cultural_acceptance_sorting }
	}
}


filter_counties_faith = {
	effect = {
		toggle_var = { VAR = filter_counties_faith }
	}
}

filter_counties_culture = {
	effect = {
		toggle_var = { VAR = filter_counties_culture }
	}
}

clear_county_filters = {
	effect = {
		remove_variable = filter_counties_faith
		remove_variable = filter_counties_culture
	}
	is_shown = {
		OR = {
			has_variable = filter_counties_faith
			has_variable = filter_counties_culture
		}
	}
}

filter_counties_title_faith = {
	effect = {
		toggle_var = { VAR = filter_counties_title_faith }
	}
}

filter_counties_title_culture = {
	effect = {
		toggle_var = { VAR = filter_counties_title_culture }
	}
}

filter_counties_title_you = {
	effect = {
		toggle_var = { VAR = filter_counties_title_you }
	}
}


clear_county_title_filters = {
	effect = {
		remove_variable = filter_counties_title_faith
		remove_variable = filter_counties_title_culture
		remove_variable = filter_counties_title_you
	}
	is_shown = {
		OR = {
			has_variable = filter_counties_title_faith
			has_variable = filter_counties_title_culture
			has_variable = filter_counties_title_you
		}
	}
}


slow_events = {
	effect = {
		toggle_var = { VAR = slow_events }
	}
	is_shown = {
		has_variable = slow_events
	}
}
