### This GUI cannot use types or templates from other files, as they have not been loaded yet.

widget = {
	name = "load_screen"
	size = { 100% 100% }

	widget_loading_screen = {}
}

types LoadingScreen
{
	type widget_loading_screen = widget {
		size = { 100% 100% }

		background = {
			texture = "[GetCurrentLoadingScreen]"
			fittype = centercrop
		}

		scrollbox = {
			size = { 960 100% }
			blockoverride "scrollbox_background" { }
			blockoverride "scrollbox_background_fade" { }
			blockoverride "scrollbox_margins" {
				margin = { 20 20 }
			}
			blockoverride "scrollbox_content" {
				vbox = {
					layoutpolicy_horizontal = expanding
					background = {
						texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
						spriteType = Corneredtiled
						spriteborder = { 16 16 }
						texture_density = 2
					}
					margin_left = 10
					margin_bottom = 10
					spacing = 10

					hbox = {
						spacing = 10
						layoutpolicy_horizontal = expanding

						progressbar = {
							size = { 30 30 }
							gfxtype = framedprogressbargfx
							texture = "gfx/interface/frontend/loading_progress.dds"
							framesize = { 88 88 }
							loopinterval = 1.5
							max = 0

							icon = {
								parentanchor =  center
								texture = "gfx/interface/frontend/ck3_logo_banner.dds"
								size = { 36 45 }
								scale = 0.4
							}
						}

						text_single = {
							margin_bottom = 10
							text = "LOADSCREEN_INITIALIZING_GAME"
						}

						widget = {
							layoutpolicy_horizontal = growing
						}
					}

					mod_version = {
						layoutpolicy_horizontal = expanding
					}

					flowcontainer = {
						direction = vertical
						layoutpolicy_horizontal = expanding

						text_single = {
							raw_text = "Loading tip:"
						}

						text_multi = {
							name = "load_tip_text"
							autoresize = yes

							text = "[GetLoadTip]"
							max_width = 900
						}
					}


					divider_light = {
						layoutpolicy_horizontal = expanding
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "Mod change notes:"
					}

					mod_changes = {
						layoutpolicy_horizontal = expanding
					}

					clickable_version_number = {
						layoutpolicy_horizontal = expanding
					}
				}

				widget = {
					layoutpolicy_vertical = growing
				}
			}
		}
	}
}

template Animation_LoadingScreen_ShowHide
{
	alpha = 0.3

	state = {
		name = appear
		trigger_on_create = yes
		bezier = { 0.25 0.1 0.25 1 }
		delay = 0.3
		duration = 1

		alpha = 1
	}

	state = {
		name = _show
		bezier = { 0.25 0.1 0.25 1 }
		duration = 1

		alpha = 1
	}

	state = {
		name = _hide
		bezier = { 0.25 0.1 0.25 1 }
		duration = 1

		alpha = 0
	}
}


Types BasicFrontendTypes
{
	type clickable_version_number = button_group {
		name = "copy_build_version"

		onclick = "[CopyBuildVersionInfoToClipboard]"
		tooltip = "[GetBuildVersionDescriptionWithClickToCopy]"

		textbox = {
			name = "build_version"
			autoresize = yes
			block "version_text" {
				text = "TOP_BAR_VERSION"
			}

			default_format = "#medium;glow_color:{0,0,0,1}"
		}
	}

}
