kill_list_window = {
	name = "kill_list"

	datacontext = "[KillListWindow.GetKills]"

	blockoverride "header_text"
	{
		text = "KILL_LIST"
	}
	blockoverride "button_close"
	{
		onclick = "[KillListWindow.Close]"
	}
}

kill_list_window = {
	name = "artifact_kill_list"

	datacontext = "[ArtifactKillListWindow.GetKills]"

	blockoverride "header_text"
	{
		text = "ARTIFACT_KILL_LIST"
	}
	blockoverride "button_close"
	{
		onclick = "[ArtifactKillListWindow.Close]"
	}
	blockoverride "additional_data"
	{
		text_single = {
			datacontext = "[ArtifactKillListWindow.GetArtifact]"
			name = "forgotten_soldiers"
			visible = "[GreaterThan_int32( Artifact.GetForgottenSoldiersCount, '(int32)0' )]"
			text = ARTIFACT_FORGOTTEN_SOLDIER_KILLS
		}
	}
}

types KillListTypes
{
	# Requires a character list
	type kill_list_window = window
	{
		layer = top
		allow_outside = yes
		position = { 0 0 }

		using = Window_Movable
		using = Window_Background_No_Edge
		size = { 600 100% }

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
		}

		vbox = {
			using = ocr_margins

			header_pattern = {
				layoutpolicy_horizontal = expanding
			}

			block "additional_data"
			{
			}

			vbox_character_list = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "container_implementation" {
					fixedgridbox = {
						addcolumn = 650
						addrow = 90

						name = "characters_grid"
						datamodel_reuse_widgets = yes
						datamodel = "[CharacterSelectionList.GetList]"
						visible = "[Not(CharacterSelectionList.IsBuildingList)]"

						item = {
							widget_character_list_item_finder = {
								size = { 650 90 }

								blockoverride "gridbox_items"
								{
									min_width = 260
									maxhorizontalslots = 9
									maxverticalslots = 2
								}
								blockoverride "click" {
									onclick = "[DefaultOnCharacterClick(CharacterListItem.GetCharacter.GetID)]"
									onrightclick = "[DefaultOnCharacterRightClick(CharacterListItem.GetCharacter.GetID)]"
								}

								blockoverride "character_relation" {} # Relation is not important really, if you want to know click the portrait
								blockoverride "character_age" {} # Age is listed in the death tooltip
								blockoverride "is_dead" {}
								blockoverride "claims" {}
								blockoverride "skills" {
								}
								blockoverride "additional_info_kill_list" {
									hbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											text = CHARACTER_DEAD_TOOLTIP_HIDE_KILLER # The killer is always listed at the top of the UI, so we can shorten that out of the text here for less duplication per entry
											max_width = 600
										}

										dot = { }

										expand = { }
									}
								}
							}
						}
					}
				}
			}
		}

		window_character_filter = {
			parentanchor = top|right
			widgetanchor = left
			position = { -20 20 }

			blockoverride "addition_filter" {
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('age_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
				}
				filter_item = {
					layoutpolicy_horizontal = expanding
					datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
				}
			}
		}
	}
}
