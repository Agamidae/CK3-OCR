######################################################
################## TITLE LAW WINDOW ####################
######################################################

window = {
	name = "title_add_law_window"
	position = { 0 0 }
	size = { 680 100% }
	layer = middle
	using = Window_Background_No_Edge

	vbox = {
		using = ocr_margins
		restrictparent_min = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "TITLE_VIEW_TITLE_ADD_LAW_LABEL"
			}

			blockoverride "button_close"
			{
				onclick = "[TitleAddLawWindow.Close]"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			spacing = 10

			vbox = {
				datacontext = "[TitleAddLawWindow.GetSelectedLaw]"
				visible = "[Not(StringIsEmpty(Law.GetNameNoTooltip))]"
				spacing = 3
				layoutpolicy_horizontal = expanding

				text_single = {
					raw_text = "Cost: [TitleAddLawWindow.GetSelectedLaw.GetEnactCostForPlayer]."
					tooltip = "[TitleAddLawWindow.GetSelectedLaw.GetEnactBreakdownForPlayer]"
					layoutpolicy_horizontal = expanding
				}

				button_primary_text = {
					layoutpolicy_horizontal = expanding
					name = "add_law_button"
					blockoverride "text" {

						text = "TITLE_VIEW_TITLE_ADD_LAW_CONFIRM"
					}
					tooltip = "[TitleAddLawWindow.GetSelectTooltip]"
					blockoverride "disabled" {
						visible = "[Not(TitleAddLawWindow.CanSelect)]"
					}
					blockoverride "hotkey" {
						visible = "[TitleAddLawWindow.CanSelect]"
					}
					enabled = "[TitleAddLawWindow.CanSelect]"
					onclick = "[TitleAddLawWindow.Select]"
				}
			}

			vbox = {
				name = "law_info"
				layoutpolicy_horizontal = expanding

				datacontext = "[TitleAddLawWindow.GetSelectedLaw]"

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 3

					state = {
						name = "law_info_refresh"
						alpha = 0
						duration = 0.15
						next = "b"
						using = Animation_Curve_Default
					}

					state = {
						name = "b"
						alpha = 1
						duration = 0.15
						using = Animation_Curve_Default
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "[Law.GetNameNoTooltip]."
						visible = "[Not(StringIsEmpty(Law.GetNameNoTooltip))]"
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "[Law.GetSubName]."
						visible = "[Law.HasSubName]"
					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						autoresize = yes
						max_width = 660
						raw_text = "[Law.GetEffectDescription]"
					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						autoresize = yes
						max_width = 660
						raw_text = "[Law.GetTitleEnactEffectDescriptionForPlayer( TitleAddLawWindow.GetTitle )]"
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 10

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text_single = {
						autoresize = yes
						max_width = 660
						layoutpolicy_horizontal = expanding
						text = "TITLE_VIEW_TITLE_ADD_LAW_POSSIBLE_LAWS"
					}

					scrollarea = {
						name = "laws"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						minimumsize = { 250 350 }

						scrollbarpolicy_vertical = as_needed
						scrollbarpolicy_horizontal = always_off

						scrollbar_vertical = {
							using = Scrollbar_Vertical
						}

						scrollwidget =	{
							fixedgridbox = {
								name = "laws_grid"
								addcolumn = 660
								addrow = 25
								datamodel = "[TitleAddLawWindow.GetLawItems]"

								item = {
									button_text = {
										onclick = "[PdxGuiTriggerAllAnimations('law_info_refresh')]"
										state = {
											name = _mouse_click
											delay = 0.15
											on_finish = "[LawItem.OnClick]"
										}

										datacontext = "[LawItem.GetLaw]"

										blockoverride "pre" {
											text_single = {
												visible = "[LawItem.IsSelected]"
												raw_text = "Selected,"
												margin_right = 3
											}
										}
									    blockoverride "text" {
											text = "[Law.GetNameNoTooltip]"
											align = left
									    }
										blockoverride "extra" {
											text_single = {
												raw_text = ", cost [Law.GetEnactCostForPlayer]."
												tooltip = "[Law.GetEnactBreakdownForPlayer]"
											}
										}
									}
								}
							}
						}
					}
				}

				hbox = {
					name = "title_info"
					layoutpolicy_horizontal = expanding
					datacontext = "[TitleAddLawWindow.GetTitle]"

					text_multi = {
						text = "TITLE_VIEW_TITLE_ADD_LAW_INFO"
						autoresize = yes
						max_width = 660
					}
				}

			}

			expand = { }
		}
	}
}
