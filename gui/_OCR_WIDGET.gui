window = {
	# size = { 100% 100% }
	# name = "blackout"
	# layer = top
	# texture = "gfx/interface/colors/black.dds"
	# alwaystransparent = yes
	#
	# visible = "[GetVariableSystem.Exists('blackout')]"

	# button_standard = {
	# 	size = { 0 0 }
	# 	onclick = "[GetVariableSystem.Toggle('ocr')]"
	# 	shortcut = "map_mode_8"
	# }
	# button_standard = {
	# 	size = { 0 0 }
	# 	onclick = "[GetVariableSystem.Toggle('tooltip_focus')]"
	# 	shortcut = "map_mode_8"
	# }
}

window = {
	layer = debug
	name = "OCR_WIDGET"
	size = { 100% 100% }
	alwaystransparent = yes

	# error_button = { }

	# window = {
	# 	# using = Window_Background_No_Edge
	# 	size = { 100% 100% }
	#
	# 	window = {
	# 		size = { 100% 100% }
	# 		visible = "[Isnt('fix_flicker')]"
	# 		using = Window_Background_No_Edge
	# 	}
	#
	# 	button_text = {
	# 		visible = "[GetPlayer.IsValid]"
	# 		shortcut = confirm
	# 		shortcut = close_window
	# 		blockoverride "text" {
	# 			text = "Welcome. You are playing as [GetPlayer.GetNameNoTooltip]. Press Enter or Escape to dismiss.[AddLine('Note, this window is temporary to fix a visual bug.')]"
	# 		}
	# 		# using = prov_pan
	# 		datacontext = "[GetPlayer.GetCapitalLocation.GetCounty.GetTitle]"
	# 		onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
	# 		# onclick = "[Set('fix_flicker', 'yes')]"
	# 		onclick = "[Toggle('fix_flicker')]"
	# 	}
	# }


	widget = {
		visible = "[Not(GetVariableSystem.Exists('ocr'))]"

		state = {
			name = monthly_tick
			on_start = "[SetMapMode('realms')]"
		}

		state = {
			on_start = "[SetMapMode('realms')]"
			trigger_when = "[Not(IsMapMode('realms'))]"
		}
	}

	button = {
		using = zoom_out_title
		shortcut = redo
		# visible = "[Isnt('flicker')]"

		onclick = "[PdxGuiWidget.TriggerAnimation('flicker')]"
		state = {
			delay = 0.3
			name = flicker
			on_finish = "[Toggle('ocr')]"
			next = "flicker_end"
		}
		state = {
			name = flicker_end
			using = Sound_WindowHide_Standard
		}
		onclick = "[Toggle('ocr')]"
		# onclick = "[Toggle('ocr')]"
		onclick = "[Set('flicker', 'yes')]"
	}

	button = {
		visible = "[Not(GetVariableSystem.Exists('ocr'))]"
		onclick = "[GetVariableSystem.Toggle('ocr')]"
		onclick = "[GetVariableSystem.Toggle('tooltip_focus')]"
		shortcut = "screenshot_map"
		onclick = "[GetVariableSystem.Toggle('hide_tooltips')]"
		# TODO replace with an animation
		# onclick = "[GetScriptedGui('manual_zoom_out_ocr').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
		onclick = "[SetMapMode('realms_text')]"
	}

	button = {
		visible = "[GetVariableSystem.Exists('ocr')]"
		onclick = "[GetVariableSystem.Toggle('ocr')]"
		onclick = "[GetVariableSystem.Clear('tooltip_focus')]"
		onclick = "[GetVariableSystem.Toggle('hide_tooltips')]"
		shortcut = "screenshot_map"
		datacontext = "[GetPlayer.GetCapitalLocation.GetCounty.GetTitle]"
		onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
		# onclick = "[GetScriptedGui('manual_zoom_in_ocr').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		onclick = "[SetMapMode('realms')]"
	}

	button = {
		name = "quick_save"
		onclick = "[ExecuteConsoleCommand('save quicksave')]"
		onclick = "[GetScriptedGui('quicksave').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		shortcut = "map_mode_14"
		visible = "[Not(IsGameViewOpen('ruler_designer'))]"
	}

	# button = {
	# 	onclick = "[ExecuteConsoleCommand('debug_mode')]"
	# 	shortcut = "screenshot"
	# 	visible = "[Not(GetVariableSystem.Exists('barber_open'))]"
	# }

	button = {
		onclick = "[GetVariableSystem.Toggle('console')]"
		shortcut = "screenshot"
	}

	#TODO hide
	# button = {
	# 	onclick = "[GetVariableSystem.Toggle('hide_map')]"
	# 	shortcut = "army_disband"
	# }

	button = {
		visible = "[GetVariableSystem.Exists('resources')]"
		onclick = "[GetVariableSystem.Clear('resources')]"
		shortcut = "close_window"
	}

	# button = {
	# 	onclick = "[GetVariableSystem.Toggle('enable_tooltips')]"
	# 	shortcut = "increase_speed_2"
	# }

	# widget = {
	# 	size = { 100% 100% }
	# 	alwaystransparent = no
	# 	background = { using = Background_Area_Border_Solid alpha = 0.1 }
	# 	visible = "[Not(GetVariableSystem.Exists('hide_tooltips'))]"
	# }

	# map tooltips
	# button = {
	# 	# onclick = "[GetVariableSystem.Toggle('hide_tooltips')]"
	# 	onclick = "[CloseAllTooltips]"
	# 	shortcut = "map_mode_4"
	# }
	button = {
		onclick = "[GetVariableSystem.Toggle('resources')]"
		shortcut = "map_mode_3"
		visible = "[Isnt('mp_lobby_tabs')]"
	}
	# button = {
	# 	size = { 0 0 }
	# 	onclick = "[OnGoToPlayerCapital]"
	# 	shortcut = "mapmode_faith_secondary"
	# }

	container = {
		visible = "[Not(IsGameViewOpen('ruler_designer'))]"
		button = {
			visible = "[And(GetPlayer.IsAdult, Not(IsGameViewOpen('lifestyle')))]"
			shortcut = map_mode_15
			onclick = "[OpenGameViewData( 'lifestyle', GetPlayer.GetID )]"
		}
		button = {
			visible = "[And(Not(GetPlayer.IsAdult), Not(IsGameViewOpen('character_focus')))]"
			shortcut = map_mode_15
			onclick = "[ToggleGameViewData( 'character_focus', GetPlayer.GetID )]"
		}
	}

	# button = {
	# 	visible = "[GetVariableSystem.Exists('hide_event')]"
	# 	shortcut = army_create_new
	# 	onclick = "[GetVariableSystem.Toggle('hide_event')]"
	# }

	button = {
		onclick = "[ClearErrorLog]"
		shortcut = undo
	}

	button = {
		# visible = "[Not(IsGameViewOpen('outliner'))]"
		visible = "[Not(Or(IsGameViewOpen('dynasty_view'), IsGameViewOpen('holding_view')))]"
		shortcut = "mapmode_duchies_secondary"
		onclick = "[ToggleGameView('outliner')]"
		onclick = "[PdxGuiTriggerAllAnimations('select_first_army_delay')]"
	}

	state = {
		name = select_first_army_delay
		delay = 0.1
		on_finish = "[PdxGuiTriggerAllAnimations('select_first_army')]"
	}

	widget = {
		size = { 100% 100% }
		alwaystransparent = yes
		using = TooltipFocus
		visible = "[GetVariableSystem.Exists('sending_army')]"

		button = {
			alwaystransparent = "[Not(GetVariableSystem.Exists('sending_army'))]"
			parentanchor = center
			widgetanchor = left|vcenter
			onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('army_sent')]"
			onmousehierarchyenter = "[GetVariableSystem.Clear('sending_army')]"
			position = { -50 0 }

			state = {
				name = army_sent
				delay = 0.2
				on_finish = "[PdxGuiTriggerAllAnimations('show_army_window')]"
				on_finish = "[PdxGuiTriggerAllAnimations('show_maa_window')]"
			}

			# texture = "gfx/interface/colors/white.dds"

			flowcontainer = {
				ignoreinvisible = yes
				resizeparent = yes
				margin = { 50 200 }
				direction = vertical


				text_single = {
					raw_text = "Right click here to send the army to [GetVariableSystem.Get('sending_army_county')], [GetVariableSystem.Get('sending_army')]."
					autoresize = yes
				}

				text_single = {
					raw_text = "Or press Control 2 to use Autohotkey."
				}
				text_single = {
					raw_text = "Press Shift 3 to add this move order, without replacing the current one."
				}

				text_single = {
					raw_text = "Cancel with Escape."
				}
			}
		}

		button = {
			shortcut = close_window
			onclick = "[PdxGuiTriggerAllAnimations('show_army_window')]"
			onclick = "[GetVariableSystem.Clear('sending_army')]"
			onclick = "[PdxGuiTriggerAllAnimations('show_maa_window')]"
		}
	}

	widget = {
		size = { 100% 100% }
		alwaystransparent = yes
		using = TooltipFocus
		visible = "[GetVariableSystem.Exists('station_regiment')]"

		button = {
			alwaystransparent = "[Not(GetVariableSystem.Exists('station_regiment'))]"
			parentanchor = center
			widgetanchor = left|vcenter
			onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('regiment_stationed')]"
			onmousehierarchyenter = "[GetVariableSystem.Clear('station_regiment')]"
			position = { -50 0 }

			state = {
				name = regiment_stationed
				delay = 0.2
				on_finish = "[PdxGuiTriggerAllAnimations('show_maa_window')]"
			}

			# texture = "gfx/interface/colors/white.dds"

			flowcontainer = {
				ignoreinvisible = yes
				resizeparent = yes
				margin = { 50 200 }
				direction = vertical

				text_single = {
					visible = "[Not(GetVariableSystem.Exists('travel_type'))]"
					raw_text = "Click here to station the regiment in [GetVariableSystem.Get('station_regiment')]."
					autoresize = yes
				}

				text_single = {
					visible = "[GetVariableSystem.Exists('travel_type')]"
					raw_text = "Click here to travel to [GetVariableSystem.Get('station_regiment')]."
					autoresize = yes
				}
				text_single = {
					raw_text = "Or press Shift 1 to use Autohotkey."
				}
				text_single = {
					visible = "[GetVariableSystem.Exists('travel_type')]"
					raw_text = "Tooltip shows extra information."
				}
				text_single = {
					raw_text = "Cancel with Escape."
				}
			}
		}

		button = {
			shortcut = close_window
			onclick = "[GetVariableSystem.Clear('station_regiment')]"
			onclick = "[PdxGuiTriggerAllAnimations('show_maa_window')]"
		}

		# icon = {
		# 	visible = "[Not(InReleaseMode)]"
		# 	texture = "gfx/interface/colors/white.dds"
		# 	size = { 10 10 }
		# 	parentanchor = center
		# }
	}


	# button = {
	# 	parentanchor = right
	# 	visible = "[GetVariableSystem.Exists('tooltip_open')]"
	# 	onmousehierarchyenter = "[GetVariableSystem.Clear('tooltip_open')]"
	# 	text_single = {
	# 		autoresize = yes
	# 		resizeparent = yes
	# 		margin = { 10 2 }
	# 		raw_text = "Dismiss tooltip."
	# 	}
	# }

}

window = {
	alwaystransparent = yes
	layer = windows_layer
	name = "windows_layer"

	button = {
		shortcut = army_merge
		# onclick = "[ToggleGameView( 'my_realm' )]"
		onclick = "[GetVariableSystem.Toggle('ruler_browser')]"
		visible = "[Not(Or(Or(IsGameViewOpen('army'), IsGameViewOpen('my_realm')), IsGameViewOpen('men_at_arms')))]"
		using = close_character
	}
}

template zoom_out_title {
	datacontext = "[GetTitleByKey('e_byzantium')]"
}