######################################################
################# KNIGHTS VIEW ###################
######################################################

types KnightTypes {
	type knight_setting = button_text {
		layoutpolicy_horizontal = expanding
		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
		onclick = "[MilitaryView.SetKnightDefault( GetPlayer.Self )]"
		blockoverride "extra" {
			space = { }
			text_single = {
				raw_text = "[Select_CString(ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End), 'Allowed', 'Not allowed')]"
			}
			text_single = {
				raw_text = ", tooltip"
				block "tooltip" { }
			}
		}
		blockoverride "dot" {
		}
	}
}

window = {
	datacontext = "[KnightsView.GetMilitaryView]"
	name = "knight_view"
	size = { 600 100% }
	parentanchor = top|right
	position = { -20 0 }
	movable = no
	layer = top

	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		# position = { 0 0 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick

		# position_x = -570
	}

	vbox = {
		margin = { 4 4 }
		layoutpolicy_vertical = expanding

		header_pattern = {
			layoutpolicy_horizontal = expanding
			size = { 0 0 }

			blockoverride "header_text"
			{
				# text = KV_HEADER
			}

			blockoverride "button_close"
			{
				onclick = "[KnightsView.Close]"

			}
		}

		hbox = {
			margin_left = 10
			layoutpolicy_horizontal = expanding

			text_single = {
				name = "knights_cap"
				text = "MAX_KNIGHT_COUNT"
				tooltip = "MAX_KNIGHT_TOOLTIP"
			}

			space = { }

			text_single = {
				name = "knights_effectiveness"
				text = "KNIGHT_EFFECTIVENESS"
				tooltip = "KNIGHT_EFFECTIVENESS_TOOLTIP"
			}

			dot = { }

			expand = { }
		}

		hbox = {
			margin_left = 10
			layoutpolicy_horizontal = expanding
			text_single = {
				raw_text = "[GetDataModelSize(MilitaryView.GetKnights)]"
			}
			space = { }
			text_single = {
				name = "knights_effectiveness"
				text = "KNIGHTS_SUBHEADER"
			}
			dot = { }
			expand = { }
		}

		button_decision_entry = {
			layoutpolicy_horizontal = expanding
			name = "invite_knights_decision"
			datacontext = "[GetDecisionWithKey('invite_knights_decision')]"
			visible = "[Decision.IsShownForPlayer]"
			onclick = "[OpenDecisionDetailView( Decision.Self )]"
		}

		button_text = {
			layoutpolicy_horizontal = expanding
			blockoverride "pre" {
				text_single = {
					raw_text = "Show"
					visible = "[GetVariableSystem.Exists('hide_km')]"
				}
				space = { }
			}

			blockoverride "text" {
				raw_text = "Knight manager."
				align = left
			}
			blockoverride "extra" {
				space = { }
				text_single = {
					raw_text = "Hide."
					visible = "[Not(GetVariableSystem.Exists('hide_km'))]"
				}
			}
			onclick = "[GetVariableSystem.Toggle('hide_km')]"
		}

		vbox = {
			margin_left = 10
			name = knight_manager_settings
			layoutpolicy_horizontal = expanding

			text_single = {
				layoutpolicy_horizontal = expanding
				raw_text = "Disallow a group to remove them from the list of knights."
			}
			visible = "[Not(GetVariableSystem.Exists('hide_km'))]"

			knight_setting = {
				datacontext = "[GetScriptedGui('knight_manager_toggle_kin_cannot_be_knight')]"
				blockoverride "text" {
					text = "km_toggle_kin_cannot_be_knight"
					align = left
				}
				blockoverride "tooltip" {
					tooltip = "km_toggle_kin_cannot_be_knight_tt"
				}
			}

			knight_setting = {
				datacontext = "[GetScriptedGui('knight_manager_toggle_children_cannot_be_knight')]"
				blockoverride "text" {
					text = "km_toggle_children_cannot_be_knight"
					align = left
				}
				blockoverride "tooltip" {
					tooltip = "km_toggle_children_cannot_be_knight_tt"
				}
			}
			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_family_spouses_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_family_spouses_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_family_spouses_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_councillors_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_councillors_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_councillors_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_lover_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_my_lovers_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_my_lovers_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_player_heir_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_my_heir_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_my_heir_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_awful_fighters_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_bad_fighters_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_bad_fighters_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_bad_fighters_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_average_fighters_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_average_fighters_cannot_be_knight_tt"
			    }
			}

			knight_setting = {
			    datacontext = "[GetScriptedGui('knight_manager_toggle_court_position_cannot_be_knight')]"
			    blockoverride "text" {
			        text = "km_toggle_court_positions_cannot_be_knight"
			        align = left
			    }
			    blockoverride "tooltip" {
			        tooltip = "km_toggle_court_positions_cannot_be_knight_tt"
			    }
			}
		}

		scrollbox = {
			name = "knights"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content" {
				name = "knights"
				datamodel = "[MilitaryView.GetKnights]"
				spacing = 2

				item = {
					widget = {
						layoutpolicy_horizontal = expanding
						size = { 0 40 }

						using = Background_Guest

						vbox = {
							set_parent_size_to_minimum = yes
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 3

								hbox = {
									visible = "[Character.IsGuest]"

									button_text_cant = {
										blockoverride "disabled" {
											visible = "[Not(Character.IsPlayerInteractionValid('recruit_guest_interaction'))]"
										}
										blockoverride "text" {
											raw_text = "[Character.GetPlayerInteractionName('recruit_guest_interaction')]"
											align = left
										}
										blockoverride "extra" {
											space = { }
										}
										visible = "[Character.IsPlayerInteractionShown('recruit_guest_interaction')]"
										enabled = "[Character.IsPlayerInteractionValid('recruit_guest_interaction')]"
										onclick = "[Character.OpenPlayerInteraction('recruit_guest_interaction')]"
									}
								}

								text_single = {
									raw_text = "Knight,"
									visible = "[Character.IsKnight]"
								}

								text_single = {
									raw_text = "[Character.GetSkill( 'prowess' )] prowess,"
								}
								text_single = {
									raw_text = "[Character.GetNameNoTooltip],"
								}
								text_single = {
									raw_text = "[Character.GetRelationToString( GetPlayer )]."
									tooltip = "EXTENDED_RELATIONS_TOOLTIP"
								}
								expand = { }

							}

							hbox = {
								visible = "[Not(Character.IsGuest)]"
								layoutpolicy_horizontal = expanding
								spacing = 10

								button_text = {
									onclick = "[MilitaryView.SetKnightForced( Character.Self )]"
									blockoverride "text" {
										raw_text = "[Select_CString(Character.IsKnightForced, 'Is forced', 'Force')],"
									}
									# tooltip = "KNIGHTS_VIEW_TITLE_FORCE_TT"
								}

								button_text = {
									onclick = "[MilitaryView.SetKnightDefault( Character.Self )]"
									blockoverride "text" {
										raw_text = "[Select_CString(Character.IsKnightDefault, 'Is allowed', 'Allow')],"
									}
									# tooltip = "KNIGHTS_VIEW_TITLE_BY_PROWESS_TT"
								}

								button_text = {
									onclick = "[MilitaryView.SetKnightDisallowed( Character.Self )]"
									blockoverride "text" {
										raw_text = "[Select_CString(Character.IsKnightDisallowed, 'Is forbidden', 'Forbid')]."
									}
									# tooltip = "KNIGHTS_VIEW_TITLE_FORBID_TT"
								}

								button_text = {
									layoutpolicy_horizontal = expanding
									datacontext = "[GetScriptedGui('knight_manager_toggle_manually_allowed')]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
									onclick = "[MilitaryView.SetKnightDefault( GetPlayer.Self )]"
									tooltip = "toggle_exclude_label_tt"

									blockoverride "text"
									{
										raw_text = "[Select_CString( ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).End), 'Exclude', 'Is excluded')] from the manager."
									}
								}

								expand = { }
							}

							expand = { }
						}
					}
				}
			}
		}

		expand = { }
	}
}

