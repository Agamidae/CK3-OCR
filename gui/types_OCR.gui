template window_focus {
	state = {
		name = _mouse_enter
		on_start = "[PdxGuiWidget.FindChild('cover').Show]"
	}

	state = {
		name = _mouse_leave
		on_start = "[PdxGuiWidget.FindChild('cover').Hide]"
	}

	widget = {
		visible = "[Not(GetVariableSystem.Exists('window_focus'))]"
		size = { 100% 100% }
		widget = {
			parentanchor = center
			name = "cover"
			visible = no
			size = { 3840 2160 }
			background = {
				margin = { 10 10 }
				using = Background_Area_Solid
			}
		}
	}
}

template "char_click" {
	onclick = "[DefaultOnCharacterClick(Character.GetID)]"
	onclick = "[DefaultOnCharacterClick(Character.GetID)]"
	onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
}

types OcrSharedTypes {
	type dot = text_single {
		# align = nobaseline
		raw_text = "."
	}
	type dot_nb = text_single {
		align = nobaseline
		raw_text = "."
	}

	type button_text = button {
		size = { 0 22 }
		button_ignore = none
		background = { using = Background_Area_Dark margin = { 4 2 }}

		flowcontainer = {
			margin_left = 5
			margin_top = 1
			spacing = 0
			ignoreinvisible = yes
			resizeparent = yes

			text_single = {
				align = nobaseline
				block "text" {
					# raw_text = "[Character.GetNameNoTooltip]."
				}
			}

			text_single = {
				raw_text = ",  Disabled"
				block "disabled" {
					visible = no
				}
			}

			block "extra" {

			}

			dot = {
				block "dot" {
					visible = no
				}
			}
			dot_nb = {
				block "dot_nb" {
					visible = no
				}
			}
		}
	}

	type button_check_text = button {
		button_ignore = none
		background = { using = Background_Area_Dark margin = { 4 2 }}

		flowcontainer = {
			margin_left = 5
			spacing = 0
			ignoreinvisible = yes
			resizeparent = yes

			flowcontainer = {
				block "enabled" {
				}
				ignoreinvisible = yes
				text_single = {
					align = nobaseline
					raw_text = "Click to"
				}
				text_single = {
					raw_text = " "
				}
				text_single = {
					raw_text = "un"
					block "visible" { }
					align = nobaseline
				}
				text_single = {
					raw_text = "check"
					align = nobaseline
				}
				text_single = {
					raw_text = " "
					align = nobaseline
				}
			}

			text_single = {
				raw_text = "Disabled, "
				align = nobaseline
				block "disabled" {
					visible = no
				}
			}
		}
	}

	type button_checkbox_text = button_group {

        using = tooltip_se
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"

        flowcontainer = {
			ignoreinvisible = yes
			# spacing = 8
			button_check_text = {

			}

			text_single = {
				# parentanchor = vcenter
				align = nobaseline
				# default_format = "#clickable"

				block "text" {
					text = "DEFAULT_TEXT"
				}
				alwaystransparent = yes
			}

			text_single = {
				block "extra_text" {
					visible = no
					raw_text = ""
				}
				align = nobaseline
			}

			# text_single = {
			# 	raw_text = ",  "
			# 	align = nobaseline
			# }
			#
			# text_single = {
			# 	raw_text = "Un"
			# 	align = nobaseline
			# 	block "checkbox" {
			# 	}
			# }
			#
            # text_single = {
			# 	raw_text = "checked."
			# 	align = nobaseline
			# }
        }
    }

	type button_checked = button {
		button_ignore = none
		background = { using = Background_Area_Dark margin = { 4 2 }}

		flowcontainer = {
			margin_left = 5
			spacing = 0
			ignoreinvisible = yes
			resizeparent = yes

			flowcontainer = {
				block "enabled" {
				}
				ignoreinvisible = yes
				text_single = {
					raw_text = " "
				}
				text_single = {
					raw_text = "un"
					block "visible" { }
					align = nobaseline
				}
				text_single = {
					raw_text = "checked"
					align = nobaseline
				}
				text_single = {
					raw_text = " "
					align = nobaseline
				}
			}

			text_single = {
				raw_text = "Disabled, "
				align = nobaseline
				block "disabled" {
					visible = no
				}
			}
		}
	}

	type button_checked_text = button_group {

        using = tooltip_se
        clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"

        flowcontainer = {
			ignoreinvisible = yes
			# spacing = 8
			button_checked = {

			}

			text_single = {
				# parentanchor = vcenter
				align = nobaseline
				# default_format = "#clickable"

				block "text" {
					text = "DEFAULT_TEXT"
				}
				alwaystransparent = yes
			}

			text_single = {
				block "extra_text" {
					visible = no
					raw_text = ""
				}
				align = nobaseline
			}

			# text_single = {
			# 	raw_text = ",  "
			# 	align = nobaseline
			# }
			#
			# text_single = {
			# 	raw_text = "Un"
			# 	align = nobaseline
			# 	block "checkbox" {
			# 	}
			# }
			#
            # text_single = {
			# 	raw_text = "checked."
			# 	align = nobaseline
			# }
        }
    }

	type hotkeys_window = flowcontainer {
		direction = vertical
		parentanchor = vcenter
		margin = { 20 10 }
		position = { 750 0 }
		background = { using = Background_Area_Dark }

		text_single = {
			raw_text = "Hotkeys."
		}
		text_single = {
			raw_text = "R: your resources."
		}
		text_single = {
			raw_text = "F1 through F8: main windows."
		}
		# text_single = {
		# 	raw_text = "F9: encyclopedia."
		# }
		text_single = {
			raw_text = "Tab: situation suggestions."
		}
		text_single = {
			raw_text = "O: outliner. Shows armies during war."
		}
		text_single = {
			raw_text = "B: go to the previous window. Works with characters, counties, titles."
		}
		text_single = {
			raw_text = "C: character finder."
		}
		text_single = {
			raw_text = "V: title finder."
		}
		text_single = {
			raw_text = "Space: pause or unpause."
		}
		text_single = {
			raw_text = "Z, X: lower or raise game speed."
		}
		text_single = {
			raw_text = "1 through 5: set game speed."
		}
		text_single = {
			raw_text = "Home: zoom in and center the map on your capital."
		}
		text_single = {
			raw_text = "Page Down, Page Up: zoom in, zoom out."
		}
		text_single = {
			raw_text = "Right-click a character name: open interactions."
		}
		text_single = {
			raw_text = "Golden cursor hotkeys."
		}
		text_single = {
			raw_text = "Ctrl+Shift+D: dismiss tooltips."
		}
	}

}