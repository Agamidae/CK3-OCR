######################################################
################ APPOINT COUNCILLOR ##################
######################################################

window = {
	name = "potential_councillor_window"
	parentanchor = right
	position = { -640 0 }
	layer = top
	allow_outside = yes

	using = Window_Movable
	using = Window_Size_CharacterList
	using = Window_Background_No_Edge

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	datacontext = "[PotentialCouncillorWindow.GetCharacterList]"

	vbox = {
		# using = Window_Margins
		margin = { 5 0 }

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				datacontext = "[PotentialCouncillorWindow.GetCouncilPositionType]"
				text = "POTENTIAL_COUNCILLOR_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[PotentialCouncillorWindow.Close]"
			}
		}

		vbox = {
			datacontext = "[PotentialCouncillorWindow.GetCouncillor]"
			visible = "[PotentialCouncillorWindow.HasCouncillor]"
			layoutpolicy_horizontal = expanding

			hbox = {
				layoutpolicy_horizontal = expanding

				vbox = {
					layoutpolicy_vertical = expanding
					spacing = 2

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5

						button_text = {
							# layoutpolicy_horizontal = expanding
							blockoverride "text" {
								raw_text = "CONFIRM_FIRE_COUNCILLOR_ACCEPT"

							}
							visible = "[PotentialCouncillorWindow.HasCouncillor]"
							onclick = "[PotentialCouncillorWindow.FireCouncillor]"
							enabled = "[PotentialCouncillorWindow.CanFireCouncillor]"
							tooltip = "[PotentialCouncillorWindow.GetFireCouncillorTooltip]"
							blockoverride "extra" {
								# dot = { align = left }
							}
						}
						text_single = {
							raw_text = "Current councillor:"
							align = left
						}

						text_single = {
							raw_text = "[Character.GetUINameNoTooltip]."
							max_width = 350
							align = left
						}

						expand = { }
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 3
						hbox_skills_grid = {
							datamodel = "[PotentialCouncillorWindow.GetCouncillorSkillItems]"
						}
						text_single = {
							raw_text = "[Character.GetProwess]."
							raw_tooltip = "[Character.GetProwessBreakdown]"
							align = left
						}
						text_single = {
							# layoutpolicy_horizontal = expanding
							raw_text = "Opinion: [Character.GetOpinionOf(GetPlayer)]."
							tooltip = "[Character.GetOpinionBreakdownText(GetPlayer)]"
							align = left
						}
						expand = { }
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5

						text_single = {
							visible = "[Character.HasRelationTo( GetPlayer )]"
							raw_text = "[Character.GetRelationToString( GetPlayer )]."
							tooltip = "EXTENDED_RELATIONS_TOOLTIP"
							align = left
							max_width = 500
						}

						expand = { }
					}
				}

				expand = { }
			}
		}

		vbox_character_list = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			visible = "[PotentialCouncillorWindow.CanReassignCouncillor]"

			blockoverride "scrollbox_empty"
			{
				text = "NO_POTENTIAL_COUNCILLORS"
				visible = "[Not(PotentialCouncillorWindow.HasMembers)]"
			}
			blockoverride "count_extra" {
				# text_single = {
				# 	raw_text = "Let-click to assign, right-click to view the character."
				# 	align = left
				# 	margin_left = 5
				# }
			}
			blockoverride "list_item" {
				widget_character_list_item_council = {
					size = { 650 70 }
					layoutpolicy_horizontal = expanding
				}
			}

			blockoverride "button"
			{
				using = Background_Guest
			}

			blockoverride "base_button"
			{
				alwaystransparent = yes
			}

			blockoverride "strength" { }
			blockoverride "powerful" {
				visible = "[Character.IsPowerfulVassal]"
			}

			blockoverride "bottom_right_box"
			{
				hbox = {
					# layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					button_text = {
						name = "reassign_to_position"
						blockoverride "text" {
							raw_text = "POTENTIAL_COUNCILLOR_REASSIGN"
						}
						blockoverride "disabled" {
							visible = "[PotentialCouncillorWindow.HasPendingInteraction( CharacterListItem.GetCharacter )]"
						}
						visible = "[And(And( Not( CharacterListItem.GetBool('can_swap') ), Character.IsCouncillor ), Not(CharacterListItem.GetCharacter.IsGuest))]"
						onclick = "[CharacterListItem.OnClick('set_position')]"
						enabled = "[Not( PotentialCouncillorWindow.HasPendingInteraction( CharacterListItem.GetCharacter ) )]"

						default_format = "#high"

						# tooltip = "[CharacterListItem.GetText('assign_tooltip')]"
						using = tooltip_below
					}

					button_text = {
						name = "add_to_position"
						blockoverride "pre" {
							datacontext = "[CharacterListItem.GetCharacter]"
							text_single = {
								raw_text = "[Character.GetSkill('diplomacy')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)0')]"
							}
							text_single = {
								raw_text = "[Character.GetSkill('martial')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)1')]"
							}
							text_single = {
								raw_text = "[Character.GetSkill('stewardship')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)2')]"
							}
							text_single = {
								raw_text = "[Character.GetSkill('intrigue')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)3')]"
							}
							text_single = {
								raw_text = "[Character.GetSkill('learning')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)4')]"
							}
							text_single = {
								raw_text = "[Character.GetSkill('prowess')],"
								align = left
								margin_right = 3
								visible = "[CharacterSelectionList.IsSortingBySkill('(int32)5')]"
							}
						}
						blockoverride "text" {
							text = "POTENTIAL_COUNCILLOR_ASSIGN"
						}
						blockoverride "disabled" {
							visible = "[Not(And( PotentialCouncillorWindow.CanFireCouncillor, Not( PotentialCouncillorWindow.HasPendingInteraction( CharacterListItem.GetCharacter ) ) ))]"
						}
						visible = "[And(Not( Character.IsCouncillor ), Not(CharacterListItem.GetCharacter.IsGuest))]"
						onclick = "[CharacterListItem.OnClick('set_position')]"
						enabled = "[And( PotentialCouncillorWindow.CanFireCouncillor, Not( PotentialCouncillorWindow.HasPendingInteraction( CharacterListItem.GetCharacter ) ) )]"

						default_format = "#high"

						using = tooltip_below
						# tooltip = "[Select_CString( PotentialCouncillorWindow.CanFireCouncillor, CharacterListItem.GetText('assign_tooltip'), PotentialCouncillorWindow.GetFireCouncillorTooltip )]"
					}

					button_text = {
						name = "swap_position"
						blockoverride "text" {
							text = "POTENTIAL_COUNCILLOR_SWAP"
						}
						visible = "[And(CharacterListItem.GetBool('can_swap'), Not(CharacterListItem.GetCharacter.IsGuest))]"
						onclick = "[CharacterListItem.OnClick('swap_position')]"

						# text = "POTENTIAL_COUNCILLOR_SWAP"
						default_format = "#high"

						using = tooltip_below
						# tooltip = "[CharacterListItem.GetText('swap_tooltip')]"
					}

					button_text = {
						name = "recruit_guest"
						blockoverride "text" {
							text = "[Character.GetPlayerInteractionName('recruit_guest_interaction')]"
						}
						blockoverride "disabled" {
							visible = "[Not(Character.IsPlayerInteractionValid('recruit_guest_interaction'))]"
						}
						visible = "[And(Character.IsPlayerInteractionShown('recruit_guest_interaction'), Character.IsGuest)]"
						onclick = "[Character.OpenPlayerInteraction('recruit_guest_interaction')]"
						enabled = "[Character.IsPlayerInteractionValid('recruit_guest_interaction')]"


						# tooltip = "[Character.GetPlayerInteractionTooltip('recruit_guest_interaction')]"
						using = tooltip_below
					}
					# expand = { }
				}
			}
		}

		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			visible = "[Not(PotentialCouncillorWindow.CanReassignCouncillor)]"

			textbox = {
				name = "cannot_assign_info"
				size = { 30 20 }
				margin_bottom = 4
				default_format = "#low;italic"
				align = center
				text = "COUNCIL_WINDOW_CANT_REASSIGN_WARNING"
			}
		}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}
}
