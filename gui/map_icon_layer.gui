
hbox = {
	name = "layer_hbox"

	window = {
		name = "layer_window"
		layoutpolicy_horizontal = Expanding
		layoutpolicy_vertical = Expanding
		alwaystransparent = yes
		movable = no
		resizable = no
		filter_mouse = none

		widget = {
			name = "bottom_layer"
			size = { 100% 100% }
			alwaystransparent = yes
		}

		widget = {
			name = "middle_layer"
			size = { 100% 100% }
			alwaystransparent = yes
		}

		widget = {
			name = "top_layer"
			size = { 100% 100% }
			alwaystransparent = yes
		}
	}
}

### Unified province icon
widget = {
	name = "province_map_icon"
	widgetanchor = center
	allow_outside = yes
	scale = "[Select_float( GetVariableSystem.Exists('ocr'), '(float)1.0', '(float)0.1' )]"

	container = {
		# visible = "[GetVariableSystem.Exists('ocr')]"
		flowcontainer = {
			# alpha = 0
			visible = "[Not( IsPauseMenuShown )]"
			parentanchor = center
			direction = vertical
			ignoreinvisible = yes
			allow_outside = yes

			widget = {
				parentanchor = hcenter
				allow_outside = yes
				visible = "[Or( ProvinceIcon.HasCharacter, ProvinceIcon.HasCombat)]"

				flowcontainer = {
					parentanchor = bottom|hcenter
					direction = vertical
					ignoreinvisible = yes
					allow_outside = yes

					widget_combat_icon = {
						visible = "[And(ProvinceIcon.HasCombat, Not(And(CombatMapIcon.RightIsNeutral, CombatMapIcon.LeftIsNeutral)))]"
						parentanchor = hcenter
						allow_outside = yes

						size = { 234 45 }
					}

					#### NEUTRAL VERSION ####
					widget_combat_icon_small = {
						visible = "[And(ProvinceIcon.HasCombat, And(CombatMapIcon.RightIsNeutral, CombatMapIcon.LeftIsNeutral))]"
						parentanchor = hcenter
						allow_outside = yes

						size = { 234 45 }
					}

					widget_character_icon = {
						datacontext = "[ProvinceIcon.GetFocusCharacter]"
						visible = "[ProvinceIcon.HasCharacter]"
						parentanchor = hcenter
						allow_outside = yes
					}
				}
			}

			widget = {
				visible = "[And( LessThan_int32( GetZoomLevel, '(int32)7' ), Or( ProvinceIcon.HasCoa, ProvinceIcon.HasLocationIcons ) )]"
				name = "offset_widget_v"
				size = { 2 0 }

				state = {
					name = "map_zoom_0"
					size = { 2 60 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_1"
					size = { 2 50 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_2"
					size = { 2 40 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_3"
					size = { 2 30 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_4"
					size = { 2 20 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_5"
					size = { 2 10 }
					duration = 0.25
				}

				state = {
					name = "map_zoom_6"
					size = { 2 0 }
					duration = 0.25
				}
			}

			flowcontainer = {
				ignoreinvisible = yes
				allow_outside = yes
				visible = "[ProvinceIcon.HasUnits]"

				widget = {
					name = "offset_widget_h"
					visible = "[And( ProvinceIcon.HasUnits, ProvinceIcon.HasCoa )]"
					size = { 0 2 }


					state = {
						name = shift_right
						size = { 30 2 }
						duration = 0.25
						# trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)7' )]"
					}

					state = {
						name = shift_above
						size = { 0 2 }
						duration = 0.25
						# trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)6' )]"
					}
				}

				widget = {
					parentanchor = vcenter
					allow_outside = yes

					state = {
						name = units_fade_in
						trigger_when = "[Not( ProvinceIcon.HasHolding )]"
						using = Animation_FadeIn_Standard
					}

					state = {
						name = units_fade_out
						trigger_when = "[ProvinceIcon.HasHolding]"
						using = Animation_FadeOut_Standard
					}

					flowcontainer_unit_items = {
						allow_outside = yes
						parentanchor = vcenter
						position = { 0 0 }
					}
				}
			}

			flowcontainer = {
				parentanchor = hcenter
				allow_outside = yes
				ignoreinvisible = yes

				visible = "[Or( ProvinceIcon.HasCoa, ProvinceIcon.HasWarfareIcons )]"

				flowcontainer_realm_capital = {
					datacontext = "[ProvinceIcon.GetOwner]"
					datacontext = "[ProvinceIcon.GetCapitalIcon]"
					visible = "[ProvinceIcon.HasCoa]"
					#using = Animation_ShowHide_Standard

					blockoverride "coa_button"
					{
						tooltip = "[Character.GetDefaultRealmFlagTooltip]"
						onclick = "[DefaultOnRealmFlagClick(Character.GetID)]"
						onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
						button_ignore = "[ProvinceIcon.GetArmyIgnoreClick]"

						tooltip_enabled = "[Not(IsInteractionMenuOpenForCharacter(Character.GetID))]"
					}
				}

				widget = {
					parentanchor = vcenter
					allow_outside = yes
					visible = "[ProvinceIcon.HasWarfareIcons]"

					state = {
						name = warfare_in
						using = Animation_FadeIn_Standard
						trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)9' )]"
					}

					state = {
						name = warfare_out
						using = Animation_FadeOut_Standard
						trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)8' )]"
					}

					flowcontainer_warfare_status = {
						visible = "[ProvinceIcon.HasCoa]"
						parentanchor = left|vcenter
						allow_outside = yes
					}

					flowcontainer_warfare_status = {
						visible = "[Not( ProvinceIcon.HasCoa )]"
						widgetanchor = bottom|left
						allow_outside = yes

						blockoverride "spacer_widget"
						{
							widget = {
								name = "offset_widget_h"
								size = { 30 2 }

								state = {
									name = shift_right
									size = { 30 2 }
									duration = 0.25
									trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)5' )]"
								}

								state = {
									name = shift_above
									size = { 0 2 }
									duration = 0.25
									trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)4' )]"
								}
							}
						}
					}
				}
			}

			widget = {
				parentanchor = hcenter
				allow_outside = yes
				alpha = 1
				visible = "[ProvinceIcon.HasLocationIcons]"
				# TODO: this causes weird bugs when this item appears for a moment when icons are shown for the first time
				# using = Animation_ShowHide_Standard

				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					ignoreinvisible = yes
					allow_outside = yes

					flowcontainer_holding_info = {
						allow_outside = yes
						visible = "[ProvinceIcon.HasHolding]"
					}

					fixedgridbox_activity = {
						visible = "[ProvinceIcon.HasActivities]"
					}

					flowcontainer_active_tasks = {
						parentanchor = hcenter
						visible = "[ProvinceIcon.HasCouncilTasks]"
						datamodel = "[ProvinceIcon.GetCouncilTasks]"
					}
				}
			}
		}
	}
}

### Unit
container = {
	datacontext = "[UnitMapIconHandler.GetUnitIcon]"
	name = "unit_widget"
	allow_outside = yes
	scale = "[Select_float( GetVariableSystem.Exists('ocr'), '(float)1.0', '(float)0.1' )]"

	widget_unit_icon_item = {
		position = { -93 10 }

		alpha = 1
	}
}

container = {
	datacontext = "[UnitMapIconHandler.GetUnitIcon]"
	name = "unit_widget_flat_map"
	scale = "[Select_float( GetVariableSystem.Exists('ocr'), '(float)1.0', '(float)0.1' )]"

	widget_unit_icon_item = {
		position = { -65 10 }
		widgetanchor = vcenter
	}
}

### RALLY POINT
container = {
	name = "rally_point_widget"
	position = { -48 -10 }
	widgetanchor = center

	button_rally_point = {
		datacontext = "[RallyPointMapIcon.GetRallyPoint]"
		visible = "[RallyPointMapIcon.ShouldBeShown]"
		alwaystransparent = "[Not( RallyPointMapIcon.CanClick )]" # Ignore the clicks if we are moving or placing a rally point so it filters through to the map to handle it instead of trying to show the info of the not existing rally point
	}
}

### Major river ford
widget = {
	name = "ford_widget"
	size = { 40 40 }
	widgetanchor = center

	# tooltip = "[StraitMapIcon.GetTooltip]"

	icon = {
		name = "ford_icon"
		visible = "[StraitMapIcon.ShouldBeShown]"

		using = Animation_ShowHide_Quick

		size = { 40 40 }
		texture = "gfx/interface/icons/map_icons/ford.dds"
	}
}

### Strait
widget = {
	name = "strait_widget"
	size = { 40 40 }
	widgetanchor = center

	# tooltip = "[StraitMapIcon.GetTooltip]"

	icon = {
		name = "strait_icon"
		visible = "[StraitMapIcon.ShouldBeShown]"

		using = Animation_ShowHide_Quick

		size = { 40 40 }
		texture = "gfx/interface/icons/map_icons/strait.dds"
	}
}

### Title capital
container = {
	name = "title_capital_widget"
	widgetanchor = center
	allow_outside = yes

	# Animations have been removed for now, should be part of map_realm_coa types

	background = {
		texture = "gfx/interface/component_masks/mask_fade_circle.dds"
		color = { 0.1 0.1 0.1 1 }
		visible = "[TitleCapitalMapIcon.GetTitle.GetHolder.IsValid]"
		margin = { 15 5 }
		margin_bottom = 15
		alpha = 0.6
	}

	coa_title_small_crown = {
		datacontext = "[TitleCapitalMapIcon.GetTitle]"
		alpha = "[Select_float( TitleCapitalMapIcon.GetTitle.GetHolder.IsValid, '(float)1.0', '(float)0.7' )]"
	}
}

### Combat prediction
container = {
	name = "combat_prediction_widget"
	widgetanchor = top|hcenter
	# position = { 0 60 }
	alwaystransparent = yes

	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/Alerts/sfx_ui_notification_alert_action_show"
		}
	}

	vbox = {
		resizeparent = yes
		background = { using = Background_Area_Light margin = { 2 2 } }
		text_single = {
			raw_text = "[CombatPredictionMapIcon.GetHeader],"
		}

		text_single = {
			raw_text = "[CombatPredictionMapIcon.GetPredictionText], See tooltip."

			tooltipwidget = {
				using = combat_prediction_tooltip
			}
		}
	}
}

### Fleet prediction
flowcontainer = {
	name = "fleet_embark_widget"
	widgetanchor = top|hcenter
	direction = horizontal
	tooltip = "[FleetPredictionMapIcon.GetEmbarkCostBreakdownTooltip]"
	using = tooltip_above

	# icon = {
	# 	name = "prediction_icon"
	# 	texture = "gfx/interface/icons/map_icons/naval_transportation.dds"
	# 	parentanchor = vcenter
	# }
	background = { using = Background_Area_Light margin = { 2 2 } }

	flowcontainer = {
		parentanchor = vcenter
		text_single = {
			raw_text = "Embark cost:"
		}
		text_single = {
			text = "MAP_ICON_EMBARK_COST"
		}
	}
}

### Council Task

container = {
	name = "council_task_widget"

	flowcontainer_active_tasks = {
		widgetanchor = center
		datamodel = "[ActiveCouncilTaskIcon.GetTasks]"
	}
}

### Province move attrition
widget = {
	name = "province_move_attrition_widget"
	size = { 30 30 }
	widgetanchor = center
	# tooltip = "[ProvinceMovementAttritionIcon.GetTooltip]"

	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Notifications/Alerts/sfx_ui_notification_alert_action_show"
		}
	}

	text_single = {
		raw_text = "[ProvinceMovementAttritionIcon.GetTooltip]"
		background = { using = Background_Area_Light margin = { 2 2 } }
		resizeparent = yes
		margin_bottom = -15
	}
	#
	# highlight_icon = {
	# 	name = "attrition"
	# 	position = { 0 0 }
	# 	size = { 30 30 }
	# 	texture = "gfx/interface/icons/map_icons/attrition_icon.dds"
	# }
}

### Holy Site
widget = {
	name = "holy_site_widget"
	size = { 60 60 }
	widgetanchor = center
	datacontext = "[HolySiteIcon.GetHolySite]"
	datacontext = "[GuiHolySiteItem.GetHolySite]"

	background = {
		alpha = 0
		texture = "gfx/interface/component_masks/mask_circle.dds"
		margin = { -10 -10 }

		glow = {
			color = { 0.2 0.2 0.2 0.5 }
			glow_radius = 6

			glow_generation_rules= {
				glow_alpha_mask = 0
				glow_blur_passes = 10
				glow_texture_downscale = 5.5f
				glow_ignore_inside_pixels = yes
			}
		}
	}

	button_normal = {
		name = "faith_icon"
		texture = "[GuiHolySiteItem.GetFaith.GetIcon]"
		size = { 60 60 }
		onclick = "[HolySite.GetBarony.SelectTitle]"
		tooltip = "FAITH_WINDOW_HOLY_SITE_TOOLTIP"
	}
}

### house CoA
container = {
	name = "house_coa_icon"
	widgetanchor = center
	ignoreinvisible = yes

	coa_house_medium = {
		datacontext = "[DynastyHouseIcon.GetHouse]"
		parentanchor = center
		position = { 0 -5 }
	}
}

### Court language
flowcontainer = {
	name = "court_language_widget"
	widgetanchor = center

	datacontext = "[GetPlayer]"
	datacontext = "[Character.GetCulture]"

	button_group_court_language_data = {
		name = "grandest_language"
		datacontext = "[CCourtLanguageMapIcon.GetGrandestLanguage]"
		visible = "[CCourtLanguageMapIcon.HasGrandestLanguage]"
	}

	button_group_court_language_data = {
		name = "native_language"
		datacontext = "[CCourtLanguageMapIcon.GetNativeLanguage]"
		visible = "[CCourtLanguageMapIcon.HasNativeLanguage]"
	}
}

flowcontainer_realm_capital = {
	name = "realm_capital_small_widget"
	widgetanchor = center
	blockoverride "capital_datacontext" {
		datacontext = "[CapitalMapIcon.GetOwner]"
	}
}

types MapIcons
{
	type button_group_court_language_data = button_group
	{
		onclick = "[OpenGameViewData( 'language', IntToUnsigned( CulturePillar.GetIndex ) )]"
		tooltip = "COURT_LANGUAGE_OPEN_VIEW_TOOLTIP"

		vbox = {
			set_parent_size_to_minimum = yes
			margin ={ 20 0 }
			margin_bottom = 5


			background = {
				using = Background_Area_Dark
				alpha = 0.9

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_rough_edges.dds"
					blend_mode = alphamultiply
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 5 0 }

				text_label_center = {
					text = "COURT_LANGUAGE_NAME"
					default_format = "#high"
					using = Font_Size_Medium
					layoutpolicy_horizontal = expanding
					align = center
				}
			}

			text_single = {
				text = "IS_NATIVE_LANGUAGE"
				visible = "[ObjectsEqual( Culture.GetLanguage, CulturePillar.Self )]"
			}

			hbox = {
				margin_left = -4
				icon_culture_pillar = {
					name = "grandeur_icon"
					texture = "gfx/interface/window_roco_grandeur/icon_grandeur.dds"
					size = { 40 40 }
				}
				text_grandeur_from_language = {
					margin_bottom = 8
				}
			}
		}
	}

	type animations_map_coa = widget {
		size = { 10 10 }

		icon = {
			name = "at_war_anim"
			visible = "[CapitalMapIcon.IsAtWarWithMe]"

			parentanchor = center
			texture = "gfx/interface/icons/map_coa/at_war_icon.dds"
			size = { 95% 95% }

			modify_texture = {
				name = anim_mask1
				texture = "gfx/interface/icons/map_coa/at_war_mask.dds"
				blend_mode = alphamultiply

			}

			modify_texture = {
				name = anim_mask2
				texture = "gfx/interface/icons/map_coa/at_war_mask.dds"
				blend_mode = alphamultiply
			}

			modify_texture = {
				name = overlay
				texture = "gfx/interface/icons/map_coa/at_war_effect.dds"
				blend_mode = colordodge
			}

			state = {
				name = a
				next = b
				duration = 0.0
				trigger_on_create = yes

				modify_texture = {
					name = anim_mask1
					translate_uv = {0 0 }
				}

				modify_texture = {
					name = anim_mask2
					translate_uv = {0 -1 }
				}
			}

			state = {
				name = b
				next = a
				duration = 10

				modify_texture = {
					name = anim_mask1
					translate_uv = {0 1 }
				}

				modify_texture = {
					name = anim_mask2
					translate_uv = {0 0 }
				}
			}

			state = {
				trigger_on_create = yes
				name = start
				next = right

				duration = 0.0

				modify_texture = {
					name = overlay
					translate_uv = {0 0 }
				}
			}

			state = {
				name = right
				next = left

				duration = 7

				modify_texture = {
					name = overlay
					translate_uv = {0 1 }
				}
			}

			state = {
				name = left
				next = right
				duration = 0.0
				delay = 0

				modify_texture = {
					name = overlay
					translate_uv = {0 -0.6 }
				}
			}
		}

		icon = {
			name = "ally_war_anim"

			block "visible_ally" {
				visible = "[CapitalMapIcon.IsMyAllyInWar]"
			}

			parentanchor = center
			texture = "gfx/interface/icons/map_coa/ally_icon.dds"
			size = { 100% 100% }

			modify_texture = {
				name = overlay
				texture = "gfx/interface/icons/map_coa/ally_effect.dds"
				blend_mode = colordodge
				rotate_uv = 0
			}

			state = {
				name = right
				next = left

				duration = 15

				modify_texture = {
					name = overlay
					rotate_uv = 360
				}
			}

			state = {
				name = left
				next = right

				duration = 0
				delay = 0


				modify_texture = {
					name = overlay
					rotate_uv = 0
				}
			}

			state = {
				trigger_on_create = yes
				name = start
				next = right

				duration = 0.0

				modify_texture = {
					name = overlay
					rotate_uv = 0
				}
			}

			modify_texture = {
				name = overlay2
				texture = "gfx/interface/icons/map_coa/ally_effect.dds"
				blend_mode = colordodge
				rotate_uv = 0
			}

			state = {
				name = right2
				next = left2

				duration = 15

				modify_texture = {
					name = overlay2
					rotate_uv = -360
				}
			}

			state = {
				name = left2
				next = right2

				duration = 0
				delay = 0


				modify_texture = {
					name = overlay2
					rotate_uv = 0
				}
			}

			state = {
				trigger_on_create = yes
				name = start
				next = right

				duration = 0.0

				modify_texture = {
					name = overlay2
					rotate_uv = 0
				}
			}
		}
	}

	type coa_realm_map_big = widget {
		size = { 70 110 }

		container = {
			parentanchor = center
			scale = 1

			state = {
				name = "map_zoom_close"
				scale = 1
				duration = 0.25
				trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)14' )]"
			}

			state = {
				name = "map_zoom_far"
				scale = 0.8
				duration = 0.25
				trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)13' )]"
			}

			animations_map_coa = {
				name = "animations"
				parentanchor = center
				position = { 0 -35 }
				size = { 120 110 }
			}

			icon = {
				name = "ally_war_icon"
				visible = "[CapitalMapIcon.IsMyAlly]"
				parentanchor = center
				position = { -8 -30 }

				size = { 72 78 }
				texture = "gfx/interface/icons/map_coa/icon_ally.dds"
			}

			icon = {
				name = "at_war_icon"
				visible = "[CapitalMapIcon.IsAtWarWithMe]"
				parentanchor = center
				position = { 0 -20 }
				size = { 80 80 }
				texture = "gfx/interface/icons/map_coa/icon_at_war_big.dds"
			}


			icon = {
				name = "player_icon"
				visible = "[CapitalMapIcon.GetOwner.IsPlayer]"

				texture = "gfx/interface/icons/map_coa/icon_player.dds"
				framesize = { 156 156 }
				frame = 4

				position = { 0 -10 }
				size = { 100 100 }
				parentanchor = center
			}

			coa_realm_medium_crown = {
				parentanchor = center
			}
		}
	}

	type coa_realm_map_medium = widget {
		size = { 55 80 }


		container = {
			parentanchor = center
			scale = 1

			state = {
				name = "map_zoom_close"
				scale = 1
				duration = 0.25
				trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)14' )]"
			}

			state = {
				name = "map_zoom_far"
				scale = 0.8
				duration = 0.25
				trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)13' )]"
			}


			animations_map_coa = {
				name = "animations"
				parentanchor = center
				position = { 0 -25 }
				size = { 85 80 }
			}

			icon = {
				name = "ally_war_icon"
				visible = "[CapitalMapIcon.IsMyAlly]"
				parentanchor = center
				position = { -6 -21 }

				size = { 60 63 }
				texture = "gfx/interface/icons/map_coa/icon_ally.dds"
			}

			icon = {
				name = "at_war_icon"
				visible = "[CapitalMapIcon.IsAtWarWithMe]"
				parentanchor = center
				position = { 0 -20 }
				size = { 55 55 }
				texture = "gfx/interface/icons/map_coa/icon_at_war_big.dds"
			}

			icon = {
				name = "player_icon"
				visible = "[CapitalMapIcon.GetOwner.IsPlayer]"

				texture = "gfx/interface/icons/map_coa/icon_player.dds"
				framesize = { 156 156 }
				frame = 3

				position = { 0 -14 }
				size = { 72 72 }
				parentanchor = center
			}

			coa_realm_small_crown = {
				parentanchor = center
				position = { 0 -5 }
			}
		}
	}

	type coa_realm_map_small = widget {
		size = { 40 50 }

		animations_map_coa = {
			name = "animations"
			parentanchor = center
			position = { 1 -15 }
			size = { 60 65 }
		}

		icon = {
			name = "ally_war_icon"
			visible = "[CapitalMapIcon.IsMyAlly]"
			parentanchor = center
			position = { -4 -15 }

			size = { 42 42 }
			texture = "gfx/interface/icons/map_coa/icon_ally.dds"
		}

		icon = {
			name = "at_war_icon"
			visible = "[CapitalMapIcon.IsAtWarWithMe]"
			parentanchor = center
			position = { 0 -5 }
			size = { 40 40 }
			texture = "gfx/interface/icons/map_coa/icon_at_war_big.dds"
		}

		icon = {
			name = "player_icon"
			visible = "[CapitalMapIcon.GetOwner.IsPlayer]"

			texture = "gfx/interface/icons/map_coa/icon_player.dds"
			framesize = { 156 156 }
			frame = 2

			position = { 0 -7 }
			size = { 48 48 }
			parentanchor = center
		}

		coa_realm_tiny_crown = {
			parentanchor = center
		}
	}

	### Holding
	type flowcontainer_holding_info = flowcontainer  {
		datacontext = "[ProvinceIcon.GetHolding]"
		direction = vertical
		ignoreinvisible = yes
		tooltipwidget = { holding_tooltip = {} }

		# widget = {
		# 	coa_realm_map_small = {
		# 		datacontext = "[Title.GetLessee]"
		# 		#	visible = "[And(Title.IsLeasedOut,Title.GetLessee.GetPrimaryTitle.IsHolyOrder)]"

		# 		position = { 30 0 }

		# 		tooltip = "[holy_order|E]"
		# 		alwaystransparent = no
		# 		widgetanchor = bottom|left
		# 		allow_outside = yes
		# 	}
		# }

		flowcontainer = {
			parentanchor = hcenter
			allow_outside = yes
			margin_top = -6

			container = {
				name = "name_banner"

				icon = {
					size = { 100% 36 }
					texture = "gfx/interface/icons/banners/banner_blue_center.dds"
					spriteType = Corneredtiled
					spriteborder = { 72 0 }
					spriteborder_right = 114
					texture_density = 4
					using = Holding_Mouse_Entry
				}

				flowcontainer = {
					margin_left = 45
					ignoreinvisible = yes

					text_single = {
						name = "tutorial_highlight_capital_holding"
						snap_to_pixels = no
						margin_top = 8

						text = "[ProvinceIcon.GetTitle.GetNameNoTierNoTooltip]"
						default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
						using = Font_Type_Flavor
						fontsize = 17
					}

					widget = {
						size = { 70 33 }
						tooltip = "REALM_CAPITAL_TOOLTIP"
						visible = "[Holding.GetProvince.IsRealmCapital]"

						icon = {
							name = "realm_capital_icon"
							parentanchor = left|vcenter
							position = { 0 1 }
							size = { 38 38 }
							framesize = { 63 63 }
							texture = "gfx/interface/icons/icon_capital.dds"
							frame = 2
						}
					}

					spacer = {
						size = { 45 33 }
						visible = "[Not(Holding.GetProvince.IsRealmCapital)]"
					}
				}

			}

			widget = {
				allow_outside = yes
				flowcontainer_unit_items = {
					allow_outside = yes
					visible = "[ProvinceIcon.HasUnits]"
				}
			}
		}

		widget = {
			visible = "[And( Not( Holding.GetHolder.IsAtWar ), ProvinceIcon.HasHoldingDetails )]"
			parentanchor = hcenter
			size = { 150 28 }

			background = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				color = { 0.1 0.1 0.1 1 }
				margin = { 50 0 }
				margin_top = 20
				margin_bottom = 20
				alpha = 0.6
			}

			flowcontainer = {
				name = "holding_info"
				parentanchor = center
				ignoreinvisible = yes

				widget = {
					flowcontainer = {
						position = { -10 0 }
						widgetanchor = right
						ignoreinvisible = yes

						icon = {
							visible = "[Holding.CanConstructAnyBuilding(GetPlayer)]"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/map_icons/county_building_available.dds"
							tooltip = "MY_REALM_WINDOW_CONSTRUCT_BUILDING"
						}

						icon = {
							visible = "[Holding.IsLowControl]"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/map_icons/county_low_control.dds"
							tooltip = "MY_REALM_WINDOW_MAP_ICON_LOW_CONTROL"
						}
					}
				}

				flowcontainer = {
					spacing = 3

					icon = {
						parentanchor = vcenter
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_gold.dds"
					}

					text_single = {
						name = "tax_text"
						snap_to_pixels = no
						text = "[Holding.GetIncome|1]"
						default_format = "#high"
						align = nobaseline
						fontsize = 17
					}
				}

				spacer = {
					size = { 10 10 }
				}

				flowcontainer = {
					spacing = 3

					icon = {
						parentanchor = vcenter
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_soldier.dds"
					}

					text_single = {
						name = "levies_text"
						snap_to_pixels = no
						text = "[Holding.GetMaxLevySize]"
						default_format = "#high"
						align = nobaseline
						fontsize = 17
					}
				}
			}
		}

		widget = {
			parentanchor = hcenter
			visible = "[And( Holding.GetHolder.IsAtWar, ProvinceIcon.HasHoldingDetails )]"

			#using = Animation_MapIcon_Fade
			#blockoverride "icon_size"
			#{
			size = { 150 28 }
			#}

			background = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				color = { 0.1 0.1 0.1 1 }
				margin = { 50 0 }
				margin_top = 15
				margin_bottom = 20
				alpha = 0.6
			}

			flowcontainer = {
				name = "holding_info_war"
				parentanchor = center
				ignoreinvisible = yes

				widget = {
					flowcontainer = {
						position = { -10 0 }
						widgetanchor = right
						ignoreinvisible = yes

						icon = {
							visible = "[Holding.CanConstructAnyBuilding(GetPlayer)]"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/map_icons/county_building_available.dds"
							tooltip = "MY_REALM_WINDOW_CONSTRUCT_BUILDING"
						}

						icon = {
							visible = "[Holding.IsLowControl]"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/map_icons/county_low_control.dds"
							tooltip = "MY_REALM_WINDOW_MAP_ICON_LOW_CONTROL"
						}
					}
				}

				flowcontainer = {
					spacing = 3

					icon = {
						size = { 25 25 }
						texture = "gfx/interface/icons/text_icons/icon_holding.dds"
					}

					text_single = {
						name = "fort_text"
						datacontext = "[ProvinceIcon.GetProvince]"
						visible = "[Province.HasFort]"
						snap_to_pixels = no

						text = "[Province.GetFortLevel]"
						default_format = "#high"
						align = nobaseline
						fontsize = 17
					}
				}

				spacer = {
					size = { 10 10 }
				}

				flowcontainer = {
					spacing = 3

					icon = {
						size = { 25 25 }
						texture = "gfx/interface/icons/icon_garrison.dds"
					}

					text_single = {
						name = "garrison_text"
						snap_to_pixels = no

						text = "[Holding.GetCurrentGarrisonSize]"
						default_format = "#high"
						align = nobaseline
						fontsize = 17
					}
				}
			}
		}
	}

	### CHARACTER
	type widget_character_icon = widget {

		#using = Animation_MapIcon_Fade
		#blockoverride "icon_size"
		#{
		size = { 150 28 }
		#}

		button = {
			name = "portrait_pin"
			parentanchor = bottom|hcenter

			texture = "gfx/interface/icons/map_icons/portrait_pin.dds"
			size = { 84 95 }

			tooltip = "[Character.GetLocationDesc]"
			onclick = "[DefaultOnCharacterClick(Character.GetID)]"

			background = {
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				color = { 0.1 0.1 0.1 1 }
				margin = { 20 20 }
				alpha = 0.5
			}

			portrait_button = {
				parentanchor = bottom|hcenter
				size = { 80 100 }
				using = portrait_base
				portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
				mask = "gfx/portraits/portrait_mask_map.dds"
				effectname = "NoHighlight"

				using = Portrait_Background_Glows
			}
		}
	}

	type button_rally_point = button_normal {
		name = "rally_point_button"
		size = { 34 34 }
		texture = "gfx/interface/window_military/banner_icon.dds"
		tintcolor = "[RallyPoint.GetIconColor]"

		block "rally_point_click" {
			onclick = "[RallyPointMapIcon.OnClick]"
		}

		tooltip = "RP_TOOLTIP_CLICK"
	}

	type flowcontainer_active_tasks = flowcontainer {
		spacing = 6
		margin = { 5 5 }

		item = {
			icon = {
				visible = "[Not( ActiveCouncilTask.IsFrozen )]"
				texture = "gfx/interface/icons/map_icons/map_council_task_base.dds"
				size = { 52 52 }

				tooltipwidget = {
					container = {
						using = DefaultTooltipBackground
						using = GeneralTooltipSetup
						layoutpolicy_horizontal = preferred
						alwaystransparent = no
						flowcontainer = {
							layoutpolicy_horizontal = preferred
							ignoreinvisible = yes
							text_single = {
								name = "frozen"
								margin = { 12 12 }
								margin_top = 3

								text = ACTIVE_COUNCIL_TASK_FROZEN_TT
								visible = "[ActiveCouncilTask.IsFrozen]"
							}

							council_task_map_icon_tooltip_widget = {
								name = "active"
								visible = "[Not( ActiveCouncilTask.IsFrozen )]"
							}
						}
					}
				}

				progresspie = {
					name = "progress"
					parentanchor = center
					size = { 45 45 }
					texture = "gfx/interface/progressbars/action_progress_thin.dds"
					framesize = { 124 124 }
					frame = 2
					value = "[ActiveCouncilTask.GetProgressPie]"
					min = 0
					max = 1
				}

				button_normal = {
					name = "council_task"
					parentanchor = center
					alwaystransparent = no
					texture = "[ActiveCouncilTask.GetTaskType.GetIcon]"
					framesize = { 140 140 }
					size = { 35 35 }
					onclick = "[ProvinceIcon.OnActiveTaskClick( ActiveCouncilTask.Self )]"
				}

				highlight_icon = {
					name = "inactive"
					parentanchor = center
					size = { 15 15 }
					texture = "gfx/interface/icons/symbols/icon_cross.dds"
					visible = "[ActiveCouncilTask.IsFrozen]"
				}
			}
		}
	}

	type fixedgridbox_activity = fixedgridbox {
		name = "activity_items_grid"
		addcolumn = 46
		addrow = 46
		maxhorizontalslots = 10
		datamodel = "[ProvinceIcon.GetActivities]"

		item = {
			widget = {
				alwaystransparent = yes
				size = { 46 46 }

				icon = {
					name = "activity_icon"
					visible = "[Not(ActivityMapItem.GetActivity.GetType.HasActivityWindow)]"
					alwaystransparent = no
					parentanchor = center
					tooltip = "ACTIVITY_MAP_ITEM_TOOLTIP_TOGGLE_CLICKABLE"
					framesize = { 160 160 }
					size = { 46 46 }

					texture = "gfx/interface/icons/map_icons/map_council_task_base.dds"

					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.1 0.1 0.1 1 }
						margin = { 10 10 }
						alpha = 0.6
					}

					highlight_icon = {
						visible = "[ActivityMapItem.GetActivity.GetType.HasIcon]"
						parentanchor = center
						alwaystransparent = yes
						texture = "[ActivityMapItem.GetActivity.GetType.GetIcon]"
						size = { 35 35 }
					}
				}

				icon = {
					name = "activity_button_with_window"
					visible = "[ActivityMapItem.GetActivity.GetType.HasActivityWindow]"
					alwaystransparent = no
					parentanchor = center
					tooltip = "ACTIVITY_MAP_ITEM_TOOLTIP_TOGGLE_CLICKABLE"
					framesize = { 160 160 }
					size = { 46 46 }

					texture = "gfx/interface/icons/map_icons/map_council_task_base.dds"

					button_icon = {
						texture = "gfx/interface/buttons/button_round_big.dds"
						parentanchor = center
						size = { 46 46 }
						onclick = "[ActivityMapItem.OnClick]"

						highlight_icon = {
							visible = "[ActivityMapItem.GetActivity.GetType.HasIcon]"
							parentanchor = center
							alwaystransparent = yes
							texture = "[ActivityMapItem.GetActivity.GetType.GetIcon]"
							size = { 35 35 }
						}
					}
				}

				watch_window_button = {
					size = { 30 20 }
					parentanchor = top|left
					onclick = "[AddWatchWindow( ActivityMapItem.GetActivity.MakeScope )]"
				}
			}
		}
	}

	type flowcontainer_warfare_status = flowcontainer {
		allow_outside = yes
		ignoreinvisible = yes

		block "spacer_widget" {}

		button_rally_point = {
			datacontext = "[ProvinceIcon.GetRallyPoint]"
			visible = "[ProvinceIcon.HasRallyPoint]"
			parentanchor = vcenter

			blockoverride "rally_point_click" {
				onclick = "[ProvinceIcon.OnRallyPointClick]"
			}
		}

		flowcontainer = {
			parentanchor = vcenter
			direction = vertical
			ignoreinvisible = yes

			flowcontainer = {
				visible = "[ProvinceIcon.HasSiegeGroup]"
				ignoreinvisible = yes
				parentanchor = vcenter
				margin_bottom = 25

				button_group_siege = {
					datacontext = "[ProvinceIcon.GetSiege]"
					visible = "[ProvinceIcon.HasSiege]"
					parentanchor = vcenter
				}

				button_group_raid = {
					datacontext = "[ProvinceIcon.GetRaid]"
					visible = "[ProvinceIcon.HasRaid]"
					parentanchor = vcenter
				}

				icon = {
					datacontext = "[ProvinceIcon.GetProvince]"
					visible = "[ProvinceIcon.HasBeenRaided]"
					parentanchor = vcenter
					name = "recently_raided_icon"
					texture = "gfx/interface/icons/map_icons/recently_raided.dds"
					size = { 35 35 }
					tooltip = "RECENTLY_RAIDED_TOOLTIP"
				}
			}
		}
	}

	type widget_combat_icon = widget {
		name = "combat_widget"
		datacontext = "[ProvinceIcon.GetCombatIcon]"
		datacontext = "[CombatMapIcon.GetCombat]"

		button_group = {
			parentanchor = hcenter
			onclick = "[CombatMapIcon.OnClick]"
			tooltip = "COMBAT_ON_MAP_TOOLTIP"
			using = tooltip_below

			container = {
				position = { 0 6 }

				button_normal = {
					name = "left_side_bg"
					visible = "[CombatMapIcon.LeftIsPlayer]"
					texture = "gfx/interface/icons/map_icons/army_bg_me.dds"
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button_normal = {
					name = "left_side_bg_ally"
					visible = "[CombatMapIcon.LeftIsAlly]"
					texture = "gfx/interface/icons/map_icons/army_bg_ally.dds"
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button_normal = {
					name = "left_side_bg_neutral"
					visible = "[CombatMapIcon.LeftIsNeutral]"
					texture = "gfx/interface/icons/map_icons/army_bg_neutral.dds"
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button_normal = {
					name = "left_side_bg_enemyl"
					visible = "[Or( CombatMapIcon.LeftIsEnemy, CombatMapIcon.LeftIsHostile )]"
					texture = "gfx/interface/icons/map_icons/army_bg_enemy.dds"
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}
			}

			container = {
				position = { 80 6 }

				button = {
					name = "right_side_bg_me"
					visible = "[CombatMapIcon.RightIsPlayer]"
					texture = "gfx/interface/icons/map_icons/army_bg_me.dds"
					mirror = horizontal
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button = {
					name = "right_side_bg_ally"
					visible = "[CombatMapIcon.RightIsAlly]"
					texture = "gfx/interface/icons/map_icons/army_bg_ally.dds"
					mirror = horizontal
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button = {
					name = "right_side_bg_neutral"
					visible = "[CombatMapIcon.RightIsNeutral]"
					texture = "gfx/interface/icons/map_icons/army_bg_neutral.dds"
					mirror = horizontal
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}

				button = {
					name = "right_side_bg"
					visible = "[Or( CombatMapIcon.RightIsEnemy, CombatMapIcon.RightIsHostile )]"
					texture = "gfx/interface/icons/map_icons/army_bg_enemy.dds"
					mirror = horizontal
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4

					#TODO
					# state = {
					# 	name = add_from_map
					# 	trigger_when = "[Or( CombatMapIcon.RightIsEnemy, CombatMapIcon.RightIsHostile )]"
					# 	on_start = "[GetScriptedGui('add_from_map_outliner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', CombatMapIcon.GetCombat.GetRightSide.MakeScope).End )]"
					# }
				}
			}

			progressbar = {
				name = "power_progressbar"
				parentanchor = top|hcenter
				position = { 0 30 }
				size = { 150 12 }
				progresstexture = "gfx/interface/progressbars/onmap_progress_blue.dds"

				noprogresstexture = "gfx/interface/progressbars/onmap_progress_red.dds"
				value = "[Combat.GetPowerSlider]"
				direction = horizontal
				alwaystransparent = yes
			}

			button = {
				name = "combat_icon"
				parentanchor = center
				alwaystransparent = no
				texture = "gfx/interface/icons/map_icons/combat_map_icon.dds"
				size = { 40 40 }
			}
		}

		background = {
			name = "unit_highlight"
			visible = "[CombatMapIcon.IsSelected]"
			texture = "gfx/interface/icons/map_icons/army_selected.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 5 }
			margin_left = -38
			margin_right = -26
			margin_top = -6
			margin_bottom = -2
		}

		coa_realm_small = {
			name = "left_realm_flag"
			parentanchor = hcenter
			position = { -92 1 }
			datacontext = "[Combat.GetLeftSideResult.GetMainParticipant]"
			using = tooltip_below
		}

		coa_realm_small = {
			name = "right_realm_flag"
			parentanchor = hcenter
			position = { 92 1 }
			datacontext = "[Combat.GetRightSideResult.GetMainParticipant]"
			using = tooltip_below
		}

		flowcontainer = {
			parentanchor = hcenter
			position = { -42 5 }

			text_single = {
				name = "soldiers_left"
				parentanchor = vcenter
				text = "[Combat.GetLeftSide.GetCurrentFightingMen|0]"
				default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
				snap_to_pixels = no
				max_width = 40
				fontsize_min = 12
			}

			icon = {
				name = "unit_quality_left"
				texture = "gfx/interface/icons/army_quality_icon.dds"
				framesize = { 32 32 }
				size = { 22 22 }
				frame = "[Combat.GetLeftSide.GetComposition.CalcQualityLevel]"
			}
		}

		flowcontainer = {
			parentanchor = hcenter
			position = { 45 5 }

			text_single = {
				name = "soldiers_right"
				text = "[Combat.GetRightSide.GetCurrentFightingMen|0]"
				default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
				snap_to_pixels = no
				max_width = 40
				fontsize_min = 12
			}

			icon = {
				name = "unit_quality_right"
				texture = "gfx/interface/icons/army_quality_icon.dds"
				framesize = { 32 32 }
				size = { 22 22 }
				frame = "[Combat.GetRightSide.GetComposition.CalcQualityLevel]"
			}
		}
	}

	type widget_combat_icon_small = widget {
		name = "combat_widget"
		datacontext = "[ProvinceIcon.GetCombatIcon]"
		datacontext = "[CombatMapIcon.GetCombat]"

		button_group = {
			parentanchor = hcenter
			onclick = "[CombatMapIcon.OnClick]"
			tooltip = "COMBAT_ON_MAP_TOOLTIP"
			using = tooltip_below

			background = {
				using = Background_Area_Light
				spriteType = Corneredtiled
				spriteborder = { 20 5 }
				margin = { 10 3 }
				margin_top = -10
			}

			container = {
				position = { 0 6 }

				button_normal = {
					name = "left_side_bg_neutral"
					texture = "gfx/interface/icons/map_icons/army_bg_neutral.dds"
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}
			}

			container = {
				position = { 80 6 }

				button = {
					name = "right_side_bg_neutral"
					texture = "gfx/interface/icons/map_icons/army_bg_neutral.dds"
					mirror = horizontal
					size = { 82 27 }
					framesize = { 164 54 }
					frame = 4
				}
			}

			progressbar = {
				name = "power_progressbar"
				parentanchor = top|hcenter
				position = { 0 30 }
				size = { 156 10 }
				progresstexture = "gfx/interface/progressbars/onmap_progress_blue.dds"

				noprogresstexture = "gfx/interface/progressbars/onmap_progress_red.dds"
				value = "[Combat.GetPowerSlider]"
				direction = horizontal
				alwaystransparent = yes
			}

			button = {
				name = "combat_icon"
				parentanchor = center
				alwaystransparent = no
				texture = "gfx/interface/icons/map_icons/combat_map_icon.dds"
				size = { 40 40 }
			}
		}

		background = {
			name = "unit_highlight"
			visible = "[CombatMapIcon.IsSelected]"
			texture = "gfx/interface/icons/map_icons/army_selected.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 5 }
			margin_left = -34
			margin_right = -24
			margin_top = -7
			margin_bottom = -3
		}

		coa_realm_tiny = {
			name = "left_realm_flag"
			parentanchor = hcenter
			position = { -88 3 }
			datacontext = "[Combat.GetLeftSideResult.GetMainParticipant]"
			using = tooltip_below
		}

		coa_realm_tiny = {
			name = "right_realm_flag"
			parentanchor = hcenter
			position = { 88 3 }
			datacontext = "[Combat.GetRightSideResult.GetMainParticipant]"
			using = tooltip_below
		}

		flowcontainer = {
			parentanchor = hcenter
			position = { -42 5 }

			text_single = {
				name = "soldiers_left"
				parentanchor = vcenter
				text = "[Combat.GetLeftSide.GetCurrentFightingMen|0]"
				default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
				snap_to_pixels = no
				max_width = 40
				fontsize_min = 12
			}

			icon = {
				name = "unit_quality_left"
				texture = "gfx/interface/icons/army_quality_icon.dds"
				framesize = { 32 32 }
				size = { 22 22 }
				frame = "[Combat.GetLeftSide.GetComposition.CalcQualityLevel]"
			}
		}

		flowcontainer = {
			parentanchor = hcenter
			position = { 45 5 }

			text_single = {
				name = "soldiers_right"
				text = "[Combat.GetRightSide.GetCurrentFightingMen|0]"
				default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
				snap_to_pixels = no
				max_width = 40
				fontsize_min = 12
			}

			icon = {
				name = "unit_quality_right"
				texture = "gfx/interface/icons/army_quality_icon.dds"
				framesize = { 32 32 }
				size = { 22 22 }
				frame = "[Combat.GetRightSide.GetComposition.CalcQualityLevel]"
			}
		}
	}


	type flowcontainer_unit_items = flowcontainer {
		datacontext = "[ProvinceIcon.GetUnitIcon]"
		position = { 15 0 }
		direction = vertical
		ignoreinvisible = yes

		alpha = 1

		state = {
			name = map_zoom_in
			trigger_when = "[ProvinceIcon.HasUnits]"
			using = Animation_FadeIn_Standard
		}

		state = {
			name = map_zoom_out
			trigger_when = "[Not( ProvinceIcon.HasUnits )]"
			using = Animation_FadeOut_Standard
		}

		# state = {
		# 	name = test
		# 	trigger_on_create = yes
		# 	on_start = "[GetScriptedGui('add_from_map_outliner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', UnitItem.GetArmy.MakeScope).End )]"
		# }

		widget_unit_icon_item = {

			#visible = "[ProvinceIcon.HasUnits]"
		}
	}

	type flowcontainer_realm_capital = flowcontainer {
		name = "realm_capital_widget"
		ignoreinvisible = yes

		block "capital_datacontext" {
			datacontext = "[ProvinceIcon.GetOwner]"
		}

		coa_realm_map_small = {
			visible = "[EqualTo_int32(Character.GetPrimaryTitle.GetTierFrame, '(int32)3')]" #Count Rank
		}

		coa_realm_map_medium = {
			visible = "[EqualTo_int32(Character.GetPrimaryTitle.GetTierFrame, '(int32)4')]" #Duke Rank
		}

		coa_realm_map_big = {
			visible = "[GreaterThanOrEqualTo_int32(Character.GetPrimaryTitle.GetTierFrame, '(int32)5')]" #King or Empire Rank
		}
	}
}
