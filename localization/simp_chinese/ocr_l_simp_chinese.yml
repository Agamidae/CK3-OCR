l_simp_chinese:
 # resources_topbar: "Gold: [GetPlayer.GetGold|0]. $CURRENT_BALANCE$.\nPrestige: [GetPlayer.GetPrestige|0]"
 north: "North"
 northeast: "North East"
 east: "East"
 southeast: "South East"
 south: "South"
 southwest: "South West"
 west: "West"
 northwest: "North West"
 none: ""
 trait_tooltip: "[Trait.GetNameNoTooltip(Character.Self)], [Trait.GetTraitCategoryLabel].\n[Trait.GetFullDescription(Character.Self, GetPlayer.GetFaith.Self)]."



 mod_version: "Mod version 0.99.8."
 mod_changes: "Removed the 3D map to improve performance, replaced with a flat one.\nRaised map volume back a little.\nSelecting courtiers or vassals from a character view will reset tabs.\nCopied some localization to other languages.\n$prev_changes$"
 prev_changes: "0.99 changes.\nSummary: Reworked army, character and county windows.\nAdded council tasks to counties.\nDistances are now displayed in days or months of travel,\nPractically all windows in the game should be accessible now (except for Royal court stuff)."



foreign_affairs_text: "$no_affairs$$affairs_wars$"
affairs_wars: "[AddTextIf( GreaterThan_CFixedPoint( GuiScope.SetRoot(Character.MakeScope).ScriptValue('num_of_wars'), '(CFixedPoint)0' ), GuiScope.SetRoot(Character.MakeScope).ScriptValue('num_of_wars'))]"
# affairs_
# affairs_
# affairs_
# no_affairs: "[AddTextIf(IsDataModelEmpty(CharacterWindow.GetDiplomacyItems), 'No foreign affairs')]"
no_affairs: "1"
game_saved: "Game saved"

war_started: "date"
total_war_men: "total soldiers"
all_wars: "all wars"
vassal_wars: "vassal wars"
realm_wars: "your realm wars"
holy_wars: "holy wars"
great_holy_wars: "crusades"
civil_wars: "civil wars"


goose_desc: "[GetPlayer.MakeScope.Var('test').GetValue]"

world_africa_north_west: "North Western Africa"
world_africa_north_east: "North Eastern Africa"

undress_interaction:0 "Undress"
undress_interaction_desc:0 "Take off your clothes"
dress_interaction:0 "Get Dressed"
dress_interaction_desc:0 "Put on your clothes"
realms_ocr: "Realms text"

powner: "[SCOPE.GetValue('test_distance')]"
empty: "0"

distance_days: "[SCOPE.GetValue('saved_distance')] days"
distance_months: "[GuiScope.SetRoot(MakeScopeValue(SCOPE.GetValue('saved_distance'))).ScriptValue('distance_in_months')|0] months"
test_prov: "HoldingView.GetProvince"

#TODO clean up distances
AnyProvinceDistance: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('saved_distance', MakeScopeValue(GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('province_distance'))).Custom('ProvinceDistance')]"
AnyProvinceDirection: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).Custom('province_direction')]"

ProvinceDistance: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('saved_distance', MakeScopeValue(GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', HoldingView.GetProvince.MakeScope).ScriptValue('province_distance'))).Custom('ProvinceDistance')]"
ArmyDistance: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('saved_distance', MakeScopeValue(GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Army.GetLocation.MakeScope).ScriptValue('province_distance'))).Custom('ProvinceDistance')]"

FortDistance: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3')|0] days"

FortDistanceDays: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3')|0] days"
FortDistanceMonths: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3_months')|0] months"

AnyProvinceDistanceDirection: "$AnyProvinceDistance$ $AnyProvinceDirection$."




#####
# new
# expects Army and Province
# direction from army to province
ArmyProvinceDistance: "[SelectLocalization(GreaterThan_CFixedPoint(GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('squared_province_distance'), '(CFixedPoint)3600'), 'ArmyDistanceMonths', 'ArmyDistanceDays')] $ArmyDirection$."

# since there can be a lot of forts, we use a less precise version
ArmyDistanceDays: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3')|0] days"
ArmyDistanceMonths: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3_months')|0] months"

ArmyDirection: "[GuiScope.SetRoot(Army.GetLocation.MakeScope).AddScope('second', Province.MakeScope).Custom('province_direction')]"

####

# new
# expects rovince
# direction from your capital to province
OutlinerProvinceDistance: "[SelectLocalization(GreaterThan_CFixedPoint(GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('squared_province_distance'), '(CFixedPoint)3600'), 'OutlinerDistanceMonths', 'OutlinerDistanceDays')] $OutlinerDirection$."

# a less precise version since I copied from forts
OutlinerDistanceDays: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3')|0] days"
OutlinerDistanceMonths: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3_months')|0] months"

OutlinerDirection: "[GuiScope.SetRoot(GetPlayer.GetCapitalLocation.MakeScope).AddScope('second', Province.MakeScope).Custom('province_direction')]"

####

#####
# new
# for combat window
# direction from army to province
CombatProvinceDistance: "[SelectLocalization(GreaterThan_CFixedPoint(GuiScope.SetRoot(Combat.GetProvince.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('squared_province_distance'), '(CFixedPoint)3600'), 'CombatDistanceMonths', 'CombatDistanceDays')] $CombatDirection$."


CombatDistanceDays: "[GuiScope.SetRoot(Combat.GetProvince.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3')|0] days"
CombatDistanceMonths: "[GuiScope.SetRoot(Combat.GetProvince.MakeScope).AddScope('second', Province.MakeScope).ScriptValue('square_root_of_distance_3_months')|0] months"

CombatDirection: "[GuiScope.SetRoot(Combat.GetProvince.MakeScope).AddScope('second', Province.MakeScope).Custom('province_direction')]"

####

fabricate_claim_title: "Fabricate claim on [county.GetName], held by [county.GetHolder.GetNameNoTooltip]"
convert_faith_title: "Convert [county.GetCountyData.GetFaith.GetAdjective] faith in [county.GetName]"

active_task_warning: "Your [councillor.GetActiveCouncilTask.GetPositionNamePossesive] current task, [councillor.GetActiveCouncilTask.GetTaskTypeOrDefault.GetName] [councillor.GetActiveCouncilTask.GetTaskTarget], will be aborted"
task_integrate_title_title: "Integrate [county.GetName] into your primary title, [GetPlayer.GetPrimaryTitle.GetNameNoTooltip]"

task_increase_control_title: "Increase control in [county.GetName]"

task_develop_county_title: "Develop [county.GetName], currently [county.GetCountyData.GetDevelopmentLevelString]"
task_promote_culture_title: "Promote [GetPlayer.GetCulture.GetName] culture in [county.GetName] over [county.GetCountyData.GetCulture.GetName]"
task_accept_culture_title: "Increase [county.GetCountyData.GetCulture.GetName] acceptance, currently [GetPlayer.GetCulture.GetAcceptance( county.GetCountyData.GetCulture)|0]%, present in [county.GetName]"
task_convince_dejure_title: "Convince [county.GetHolder.GetTopLiege.GetPrimaryTitle.GetNameNoTierNoTooltip] to hand over [county.GetName] to [county.GetDeJureLiege.GetNameNoTooltip]"
task_find_secrets_title: "Find secrets in the court of [target_character.GetNameNoTooltip]"

barony_controller_text: "[controller.Char.GetNameOrMeNoTooltip]"

NOT_you: "Not you"
NOT_your_vassal: "Not your vassal"

holding: "holding"

msg_building_done_ocr: "Building done"