action_dying = {
	type = alert

	check_create_action = {

		if = {
			limit = {
				health <= death_chance_dying_health
			}
			try_create_important_action = {
				important_action_type = action_dying
				actor = root
			}
		}

	}

	effect = {
		scope:actor = {
			open_view_data = {
				view = character
			}
		}
	}
}

action_can_assign_guardian = {
	priority = 350
	combine_into_one = yes
	check_create_action = {
		every_child = {
			limit = {
				is_adult = no
				num_of_relation_guardian = 0
				age >= childhood_education_start_age
				exists = liege
				liege = root
				root = {
					is_character_interaction_valid = {
						recipient = prev
						interaction = educate_child_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_assign_guardian
				actor = root
				recipient = this
				secondary_recipient = this
			}
		}

	}

	unimportant = {
		scope:recipient = {
			any_sibling = { #Not one of your three first kids
				is_child_of = root
				age > scope:recipient.age
				count >= 3
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = educate_child_interaction
			actor = scope:actor
			recipient = scope:actor
			secondary_recipient = scope:secondary_recipient
		}
	}
}

action_can_ransom = {
	combine_into_one = yes
	check_create_action = {
		every_prisoner = {
			limit = {
				OR = {
					AND = {
						OR = {
							is_pool_guest = yes
							is_ruler = yes
						}
						gold > 10
					}
					AND = {
						is_ruler = no
						exists = liege
						liege = {
							gold > 10
						}
					}
				}
				NOT = { is_at_war_with = root }
				root = {
					is_character_interaction_potentially_accepted = {
						recipient = prev
						interaction = ransom_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_ransom
				actor = root
				recipient = this
			}
		}

	}

	effect = {
		open_interaction_window = {
			interaction = ransom_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_vassalize = {
	priority = 900
	combine_into_one = yes
	check_create_action = {
		every_neighboring_top_liege_realm_owner = {
			limit = {
				root = {
					is_character_interaction_potentially_accepted = {
						recipient = prev
						interaction = offer_vassalization_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_vassalize
				actor = root
				recipient = this
			}
		}

	}

	effect = {
		open_interaction_window = {
			interaction = offer_vassalization_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_propose_alliance_to_family_member = {
	priority = 300
	combine_into_one = yes
	check_create_action = {
		every_close_or_extended_family_member = {
			limit = {
				root = {
					is_character_interaction_potentially_accepted = {
						recipient = prev
						interaction = negotiate_alliance_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_propose_alliance_to_family_member
				actor = root
				recipient = this
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = negotiate_alliance_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_demand_payment = {
	combine_into_one = yes
	check_create_action = {
		every_hooked_character = {
			limit = {
				root = {
					is_character_interaction_potentially_accepted = {
						recipient = prev
						interaction = demand_payment_interaction
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_can_demand_payment
				actor = root
				recipient = this
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = demand_payment_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_can_ask_hof_for_money = {
	priority = 900
	type = alert
	check_create_action = {
		if = {
			limit = {
				exists = faith.religious_head
				faith.religious_head = {
					root = {
						is_character_interaction_potentially_accepted = {
							recipient = prev
							interaction = hof_ask_for_gold_interaction
						}
					}
				}
			}
			faith.religious_head = {
				try_create_important_action = {
					important_action_type = action_can_ask_hof_for_money
					actor = root
					recipient = this
				}
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = hof_ask_for_gold_interaction
			actor = scope:actor
			recipient = scope:recipient
		}
	}
}

action_hook_expiring = {
	combine_into_one = yes
	check_create_action = {
		every_hooked_character = {
			limit = {
				root = {
					time_to_hook_expiry = {
						target = prev
						value < 90
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_hook_expiring
				actor = root
				recipient = this
			}
		}
	}

	effect = {
		scope:recipient = {
			open_view_data = {
				view = character
			}
		}
	}
}
