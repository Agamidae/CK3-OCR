quicksave = {
	effect = {
		send_interface_toast = {
		    title = "game_saved"
		}
	}
}

followers = {
	effect = {
		clear_variable_list = followers
		ordered_faith_character = {
			order_by = current_military_strength
			min = 0
			root = {
				add_to_variable_list = {
					name = followers
					target = prev
				}
			}
		}
	}
}

destroy_artifact = {
	confirm_title = "Confirm destroying artifact."
	effect = {
		destroy_artifact = root
	}
}

artifacts_list = {
	effect = {
		clear_variable_list = all_artifacts
		capital_province = {
			save_scope_as = second
		}

		if = {
			limit = {
				NOT = { exists = var:sort_artifacts }
			}
			set_variable = {
				name = sort_artifacts
				value = flag:rarity
			}
		}

		if = {
			limit = {
				NOT = { exists = var:filter_artifacts }
			}
			set_variable = {
				name = filter_artifacts
				value = flag:all
			}
		}

		every_artifact = {
			limit = {
				trigger_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:helmet }
					artifact_slot_type = helmet
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:primary_armament }
					artifact_slot_type = primary_armament
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:armor }
					artifact_slot_type = armor
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:regalia }
					artifact_slot_type = regalia
				}
				trigger_else_if = {
					limit = { exists = root.var:filter_artifacts root.var:filter_artifacts = flag:miscellaneous }
					artifact_slot_type = miscellaneous
				}
				trigger_else = { }
			}
			add_to_list = all_artifacts
		}

		switch = {
			trigger = var:sort_artifacts

			flag:rarity = {
				add_to_ledger = { list = all_artifacts x = artifact_rarity_svalue }
			}

			flag:distance = {
				ordered_in_list = {
					list = all_artifacts
					order_by = {
						value = artifact_owner.location.province_distance
						multiply = -1
					}
					min = 0

					root = {
						add_to_variable_list = {
							name = all_artifacts
							target = prev
						}
					}
				}
			}
		}
	}
}

sort_rarity = {
	effect = {
		if = {
			limit = {
				var:sort_artifacts = flag:rarity
			}
			set_variable = {
				name = sort_artifacts
				value = flag:distance
			}
		}
		else = {
			set_variable = {
				name = sort_artifacts
				value = flag:rarity
			}
		}
	}
	is_shown = {
		exists = var:sort_artifacts
		var:sort_artifacts = flag:rarity
	}
}

filter_artifacts_all = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:all
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:all
	}
}

filter_artifacts_helmet = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:helmet
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:helmet
	}
}

filter_artifacts_primary_armament = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:primary_armament
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:primary_armament
	}
}

filter_artifacts_armor = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:armor
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:armor
	}
}

filter_artifacts_regalia = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:regalia
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:regalia
	}
}

filter_artifacts_miscellaneous = {
	effect = {
		set_variable = {
			name = filter_artifacts
			value = flag:miscellaneous
		}
	}
	is_shown = {
		exists = var:filter_artifacts
		var:filter_artifacts = flag:miscellaneous
	}
}

ongoing_wars_list = {
	effect = {
		clear_variable_list = ongoing_wars

		if = {
			limit = {
				NOT = { exists = var:sort_wars }
			}
			set_variable = {
				name = sort_wars
				value = flag:total_war_men
			}
		}

		if = {
			limit = {
				NOT = { exists = var:filter_wars }
			}
			set_variable = {
				name = filter_wars
				value = flag:all_wars
			}
		}

		every_ruler = {
			limit = {
				is_at_war = yes
			}
			every_character_war = {
				limit = {
					NOT = {
						is_in_list = ongoing_wars_temp
					}
				}
				add_to_list = ongoing_wars_temp
			}
		}

		every_in_list = {
			list = ongoing_wars_temp

			limit = {
				trigger_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:vassal_wars }

					any_war_participant = {
						is_vassal_or_below_of = root
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:realm_wars }
					any_war_participant = {
						is_vassal_or_below_of = root
						is_liege_or_above_of = root
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:holy_wars }
					OR = {
						using_cb = minor_religious_war
						using_cb = religious_war
						using_cb = major_religious_war
						using_cb = excommunication_war
						using_cb = flowery_war_cb
						using_cb = undirected_great_holy_war
						using_cb = directed_great_holy_war
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:great_holy_wars }
					OR = {
						using_cb = undirected_great_holy_war
						using_cb = directed_great_holy_war
					}
				}

				trigger_else_if = {
					limit = { exists = root.var:filter_wars root.var:filter_wars = flag:civil_wars }
					OR = {
						using_cb = independence_faction_war
						using_cb = liberty_faction_war
						using_cb = populist_war
						using_cb = claimant_faction_war
						using_cb = depose_war
						using_cb = refused_liege_demand_war
						using_cb = independence_war
						using_cb = nation_fracturing_faction_war
					}
				}

				trigger_else = { }
			}

			add_to_list = ongoing_wars
		}

		switch = {
			trigger = var:sort_wars
			flag:total_war_men = {
				add_to_ledger = { list = ongoing_wars x = total_war_participants }
			}
			flag:attackers = {
				add_to_ledger = { list = ongoing_wars x = primary_attacker.current_military_strength }
			}
			flag:defenders = {
				add_to_ledger = { list = ongoing_wars x = primary_defender.current_military_strength }
			}
			flag:war_started = {
				add_to_ledger_reverse = { list = ongoing_wars x = war_days }
			}
		}
	}
}

sort_wars_total = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:total_war_men
		}
	}
}

sort_wars_attackers = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:attackers
		}
	}
}

sort_wars_defenders = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:defenders
		}
	}
}

sort_wars_time = {
	effect = {
		set_variable = {
			name = sort_wars
			value = flag:war_started
		}
	}
}

filter_wars_all = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:all_wars
		}
	}
	is_shown = {
		var:filter_wars = flag:all_wars
	}
}

filter_wars_your_realm = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:vassal_wars
		}
	}
}

filter_wars_top_liege_realm = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:realm_wars
		}
	}
}

filter_wars_holy_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:holy_wars
		}
	}
}

filter_wars_great_holy_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:great_holy_wars
		}
	}
}

filter_wars_civil_wars = {
	effect = {
		set_variable = {
			name = filter_wars
			value = flag:civil_wars
		}
	}
}

special_buildings_list = {
	effect = {
		clear_variable_list = special_buildings
		capital_province = {
			save_scope_as = second
		}
		if = {
			limit = {
				NOT = { exists = var:sort_sp_buildings }
			}
			set_variable = {
				name = sort_sp_buildings
				value = flag:tax
			}
		}

		every_province = {
			limit = {
				has_holding = yes
				# OR = {
				# }
				trigger_if = {
					limit = {
						root = {
							exists = var:empty_sp_slots
						}
					}
					has_special_building_slot = yes
					has_special_building = no
				}
				trigger_else = {
					has_special_building = yes
				}
			}
			add_to_list = special_buildings
			special_buildings_switch = { }
		}

		switch = {
			trigger = var:sort_sp_buildings

			flag:tax = {
				add_to_ledger = { list = special_buildings x = monthly_income }
			}
			flag:levy = {
				add_to_ledger = { list = special_buildings x = building_levies }
			}
			flag:distance = {
				add_to_ledger_reverse = { list = special_buildings x = province_distance }
			}
		}

		if = { limit = { exists = var:special_buildings } }
		# add_to_ledger = { list = special_buildings x = monthly_income }
	}
}

sort_sp_tax = {
	effect = {
		if = {
			limit = {
				exists = var:sort_sp_buildings
				var:sort_sp_buildings = flag:tax
			}
			set_variable = {
				name = sort_sp_buildings
				value = flag:distance
			}
		}
		else = {
			set_variable = {
				name = sort_sp_buildings
				value = flag:tax
			}
		}
	}
	is_shown = {
		exists = var:sort_sp_buildings
		var:sort_sp_buildings = flag:tax
	}
}

sort_sp_levy = {
	effect = {
		set_variable = {
			name = sort_sp_buildings
			value = flag:levy
		}
	}
}

sort_sp_distance = {
	effect = {
		set_variable = {
			name = sort_sp_buildings
			value = flag:distance
		}
	}
}

filter_sp_slots = {
	effect = {
		if = {
			limit = { exists = var:empty_sp_slots }
			remove_variable = empty_sp_slots
		}
		else = {
			set_variable = empty_sp_slots
		}
	}
	is_shown = {
		exists = var:empty_sp_slots
	}
}

regions = {
	effect = {
		set_global_variable = {
			name = all_playable_rulers
			value = all_playable_rulers
		}

		add_playable_rulers = { x = world_europe }
		add_playable_rulers = { x = world_europe_west }
		add_playable_rulers = { x = world_europe_west_britannia }
		add_playable_rulers = { x = world_europe_west_germania }
		add_playable_rulers = { x = world_europe_west_francia }
		add_playable_rulers = { x = world_europe_west_iberia }
		add_playable_rulers = { x = world_europe_north }
		add_playable_rulers = { x = world_europe_south }
		add_playable_rulers = { x = world_europe_south_east }
		add_playable_rulers = { x = world_europe_south_italy }
		add_playable_rulers = { x = world_europe_east }

		add_playable_rulers = { x = world_asia_minor }

		add_playable_rulers = { x = world_middle_east }
		add_playable_rulers = { x = world_middle_east_jerusalem }
		add_playable_rulers = { x = world_middle_east_arabia }
		add_playable_rulers = { x = world_middle_east_persia }

		add_playable_rulers = { x = world_india }
		add_playable_rulers = { x = world_india_deccan }
		add_playable_rulers = { x = world_india_bengal }
		add_playable_rulers = { x = world_india_rajastan }

		add_playable_rulers = { x = world_africa }
		add_playable_rulers = { x = world_africa_north }
		add_playable_rulers = { x = world_africa_north_west }
		add_playable_rulers = { x = world_africa_north_east }
		add_playable_rulers = { x = world_africa_west }
		add_playable_rulers = { x = world_africa_east }

		add_playable_rulers = { x = world_steppe }
		add_playable_rulers = { x = world_steppe_tarim }
		add_playable_rulers = { x = world_steppe_west }
		add_playable_rulers = { x = world_steppe_east }

		add_playable_rulers = { x = world_tibet }

		add_playable_rulers = { x = world_burma }
	}
}

all_rulers = {
	effect = {
		set_global_variable = {
			name = all_landed_rulers
			value = all_landed_rulers
		}

		add_landed_rulers = { x = world_europe }
		add_landed_rulers = { x = world_europe_west }
		add_landed_rulers = { x = world_europe_west_britannia }
		add_landed_rulers = { x = world_europe_west_germania }
		add_landed_rulers = { x = world_europe_west_francia }
		add_landed_rulers = { x = world_europe_west_iberia }
		add_landed_rulers = { x = world_europe_north }
		add_landed_rulers = { x = world_europe_south }
		add_landed_rulers = { x = world_europe_south_east }
		add_landed_rulers = { x = world_europe_south_italy }
		add_landed_rulers = { x = world_europe_east }

		add_landed_rulers = { x = world_asia_minor }

		add_landed_rulers = { x = world_middle_east }
		add_landed_rulers = { x = world_middle_east_jerusalem }
		add_landed_rulers = { x = world_middle_east_arabia }
		add_landed_rulers = { x = world_middle_east_persia }

		add_landed_rulers = { x = world_india }
		add_landed_rulers = { x = world_india_deccan }
		add_landed_rulers = { x = world_india_bengal }
		add_landed_rulers = { x = world_india_rajastan }

		add_landed_rulers = { x = world_africa }
		add_landed_rulers = { x = world_africa_north }
		add_landed_rulers = { x = world_africa_north_west }
		add_landed_rulers = { x = world_africa_north_east }
		add_landed_rulers = { x = world_africa_west }
		add_landed_rulers = { x = world_africa_east }

		add_landed_rulers = { x = world_steppe }
		add_landed_rulers = { x = world_steppe_tarim }
		add_landed_rulers = { x = world_steppe_west }
		add_landed_rulers = { x = world_steppe_east }

		add_landed_rulers = { x = world_tibet }

		add_landed_rulers = { x = world_burma }
	}
}

playable_vassals = {
	effect = {
		clear_variable_list = playable_vassals
		ordered_vassal = {
			order_by = sub_realm_size
			min = 0
			limit = {
				sub_realm_size > 0
				exists = capital_province
				NOR = {
					has_government = theocracy_government
					has_government = republic_government
					has_government = mercenary_government
					has_government = holy_order_government
				}
			}
			save_scope_as = vassal
			prev = {
				add_to_variable_list = {
					name = playable_vassals
					target = scope:vassal
				}
			}
		}
	}
}

stop_errors = {
	effect = {
		add_to_variable_list = {
			name = battles
			target = this
		}
	}
	is_shown = {
		has_variable_list = battles
		has_global_variable = all_playable_rulers
		# has_variable = test
		# has_global_variable = test
	}
}

is_tooltip_open = {
	is_shown = {
		current_tooltip_depth > 0
	}
}

find_closest = {
	effect = {
		scope:target = {
			remove_variable = closest_county
			save_scope_as = second
		}

		ordered_sub_realm_county = {
			order_by = {
				value = province_distance
				multiply = -1
			}
			max = 1

			scope:target = {
				set_variable = {
					name = closest_county
					value = prev
					days = 1
				}
			}
		}
	}
}
#
# go_to_closes = {
# 	effect = {
#
# 	}
# }

close_interactions = {
	effect = {
		if = {
			limit = {
				has_variable = close_interactions
			}
			remove_variable = close_interactions
		}
		else = {
			set_variable = close_interactions
		}
	}
	is_shown = {
		has_variable = close_interactions
	}
}