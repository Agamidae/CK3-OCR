is_army_in_combat = {
	is_shown = {
		is_army_in_combat = yes
	}
}


add_from_map_outliner = {
	saved_scopes = { target }

	effect = {
		scope:target = {
			save_scope_as = army
			army_owner = {
				trigger_event = {
					on_action = outliner_armies
				}
			}
		}

		if = {
			limit = {
				NOR = {
					is_target_in_variable_list = {
						name = hostiles_inside
						target = scope:target
					}
					is_target_in_variable_list = {
						name = allied_units
						target = scope:target
					}
					any_player = {
						this = scope:target.army_owner
					}
				}
				# any_player = {
				# 	any_war_enemy = {
				# 		this = scope:target.army_owner
				# 	}
				# }
			}
			add_to_variable_list = {
				name = hostile_armies_temp
				target = scope:target
			}
		}
	}
}

sort_armies = {
	effect = {
		clear_variable_list = hostiles_outside

		ordered_in_list = {
			variable = hostile_armies_temp
			min = 0
			order_by = {
				value = location.distance_to_player
				multiply = -1
			}
			root = {
				add_to_variable_list = {
					name = hostiles_outside
					target = prev
				}
			}
		}

		every_in_list = {
			variable = hostiles_outside
			limit = {
				NOT = { exists = this }
			}
			root = {
				remove_list_variable = {
					name = hostiles_outside
					target = prev
				}
			}
		}

		clear_variable_list = hostile_armies_temp
	}
	# remove_variable = refresh_armies
}

clear_allied_units = {
	effect = {
		clear_variable_list = allied_units
	}
}

clear_dead_armies = {
	effect = {
		if = {
			limit = { has_variable_list = allied_units }
			every_in_list = {
				variable = allied_units
				add_to_list = allied_check
			}

			clear_variable_list = allied_units

			every_in_list = {
				list = allied_check
				root = {
					add_to_variable_list = {
						name = allied_units
						target = prev
					}
				}
			}
		}

		if = {
			limit = { has_variable_list = hostiles_inside }

			every_in_list = {
				variable = hostiles_inside
				add_to_list = hostiles_check
			}

			clear_variable_list = hostiles_inside

			every_in_list = {
				list = hostiles_check
				root = {
					add_to_variable_list = {
						name = hostiles_inside
						target = prev
					}
				}
			}

			every_in_list = {
				variable = hostiles_inside
				save_scope_as = army

				if = {
					limit = {
						NOT = {
							any_player = {
								# if we aren't at war with them anymore
								OR = {
									any_war_enemy = {
										this = scope:army.army_owner
									}
									AND = {
										exists = liege
										liege = {
											any_war_enemy = {
												this = scope:army.army_owner
											}
										}
									}
									any_hostile_raider = {
										this = scope:army.army_owner
									}
								}
								# and they aren't in out land anymore
								OR = {
									any_realm_province = {
										this = scope:army.location
									}
									any_war_ally = {
										any_realm_province = {
											this = scope:army.location
										}
									}
								}
							}
						}
					}
					# we remove them from the list
					root = {
						remove_list_variable = {
							name = hostiles_inside
							target = scope:army
						}
					}
				}
			}
		}
	}
}

is_war_target = {
	saved_scopes = {
		target
	}
	is_shown = {
		any_character_war = {
			casus_belli = {
				any_target_title = {
					trigger_if = {
						limit = {
							exists = title_province
						}
						title_province = {
							this = scope:target
						}
					}
					trigger_else = {
						always = no
					}
				}
			}
		}
	}
}

adjacent_to_war_target = {
	saved_scopes = {
		target
	}
	is_shown = {
		any_character_war = {
			casus_belli = {
				any_target_title = {
					trigger_if = {
						limit = {
							exists = title_province
						}
						title_province = {
							county = {
								any_neighboring_county = {
									title_province = {
										this = scope:target
									}
								}
							}
						}
					}
					trigger_else = {
						always = no
					}
				}
			}
		}
	}
}

you_control = {
	saved_scopes = {
		target
	}
	is_shown = {
		any_sub_realm_county = {
			this = scope:target.county
		}
	}
}

hostile_forts = {
	effect = {
		clear_variable_list = adjacent_hostile_forts
		clear_variable_list = adjacent_across_water_hostile_forts
		clear_variable_list = war_targets
		clear_variable_list = personal_forts
		clear_variable_list = hostile_forts
		clear_variable_list = your_hostile_forts

		if = {
			limit = {
				is_at_war = yes
			}

			# add target titles
			# I forgot why I don't use this
			every_character_war = {
				casus_belli = {
					every_target_title = {
						if = {
							limit = {
								exists = title_province
							}
							title_province = {
								add_to_list = war_targets
							}
						}
					}
				}
			}

			# add all enemy holdings
			every_war_enemy = {
				every_realm_province = {
					save_scope_as = test
					limit = {
						fort_level > 0
						barony_controller = {
							OR = {
								is_at_war_with = root
								AND = {
									any_liege_or_above = {
										is_at_war_with = root
									}
									NOT = {
										any_liege_or_above = {
											this = root
										}
									}
									NOT = {
										this = root
									}
								}
								AND = {
									any_liege_or_above = {
										is_at_war_with = root
										is_vassal_or_below_of = root
									}
									NOT = {
										this = root
									}
								}
							}
						}
					}
					add_to_list = hostile_forts_unsorted
				}
			}

			# sort them all
			ordered_in_list = {
				list = hostile_forts_unsorted
				order_by = {
					value = distance_to_player
					multiply = -1
				}
				min = 0
				add_to_list = hostile_forts
			}

			# add your captured holdings
			every_realm_province = {
				limit = {
					fort_level > 0
					barony_controller = {
						OR = {
							is_at_war_with = root
							any_liege_or_above = {
								is_at_war_with = root
								NOT = {
									is_liege_or_above_of = root
								}
							}
						}
					}
					NOT = {
						is_in_list = hostile_forts
					}
				}
				add_to_list = hostile_forts
			}

			# find adjacents first
			ordered_in_list = {
				list = hostile_forts
				order_by = {
					value = distance_to_player
					multiply = -1
				}
				min = 0
				limit = {
					county = {
						save_temporary_scope_as = county
						any_neighboring_county = {
							NOT = {
								any_county_province = {
									is_in_list = hostile_forts
								}
							}
							county_controller = {
								OR = {
									this = root
									AND = {
										any_liege_or_above = {
											OR = {
												this = root
												is_allied_to = root
											}
										}
									}
								}
							}
						}
					}
				}
				root = {
					add_to_variable_list = {
						name = adjacent_hostile_forts
						target = prev
					}
				}
				remove_from_list = hostile_forts
			}

			# # find adjacent across water
			# every_in_list = {
			# 	list = hostile_forts
			# 	limit = {
			# 		county = {
			# 			save_temporary_scope_as = county
			# 			any_title_to_title_neighboring_and_across_water_county = {
			# 				county_controller = {
			# 					#there's probably a trigger for this
			# 					OR = {
			# 						this = root
			# 						any_liege_or_above = {
			# 							this = root
			# 						}
			# 						any_vassal_or_below = {
			# 							this = root
			# 						}
			# 					}
			# 					NOT = {
			# 						is_at_war_with = root
			# 					}
			# 				}
			# 			}
			# 		}
			# 	}
			# 	root = {
			# 		add_to_variable_list = {
			# 			name = adjacent_across_water_hostile_forts
			# 			target = prev
			# 		}
			# 	}
			# 	remove_from_list = hostile_forts
			# }

			# show your captured forts
			# every_in_list = {
			# 	list = your_hostile_forts
			# 	root = {
			# 		add_to_variable_list = {
			# 			name = your_hostile_forts
			# 			target = prev
			# 		}
			# 	}
			# }

			# find personal holdings
			# ordered_in_list = {
			# 	list = hostile_forts
			# 	order_by = {
			# 		value = distance_to_player
			# 		multiply = -1
			# 	}
			# 	min = 0
			# 	limit = {
			# 		county_controller = {
			# 			is_at_war_with = root
			# 		}
			# 	}
			# 	root = {
			# 		add_to_variable_list = {
			# 			name = personal_forts
			# 			target = prev
			# 		}
			# 	}
			# 	remove_from_list = hostile_forts
			# }

			# add the rest
			every_in_list = {
				list = hostile_forts
				root = {
					add_to_variable_list = {
						name = hostile_forts
						target = prev
					}
				}
			}
		}
	}
}


#  = {
# 	limit = {
# 		is_at_war = yes
# 	}
# 	every_character_war = {
# 		casus_belli = {
# 			every_target_title = {
# 				if = {
# 					limit = {
# 						exists = title_province
# 					}
# 					title_province = {
# 						add_to_list = war_targets
# 					}
# 				}
# 			}
# 		}
# 	}
# 	every_realm_province = {
# 		limit = {
# 			fort_level > 0
# 			barony_controller = {
# 				is_at_war_with = root
# 			}
# 			NOT = {
# 				is_in_list = war_targets
# 			}
# 		}
# 		add_to_list = your_hostile_forts
# 	}
# 	every_war_enemy = {
# 		every_realm_province = {
# 			limit = {
# 				fort_level > 0
# 				barony_controller = {
# 					is_at_war_with = root
# 				}
# 				NOT = {
# 					is_in_list = war_targets
# 				}
# 				NOT = {
# 					is_in_list = your_hostile_forts
# 				}
# 			}
# 			add_to_list = hostile_forts
# 		}
# 	}
#
# 	every_in_list = {
# 		list = war_targets
# 		root = {
# 			add_to_variable_list = {
# 				name = war_targets
# 				target = prev
# 			}
# 		}
# 	}
# 	every_in_list = {
# 		list = hostile_forts
# 		root = {
# 			add_to_variable_list = {
# 				name = hostile_forts
# 				target = prev
# 			}
# 		}
# 	}
# 	every_in_list = {
# 		list = your_hostile_forts
# 		root = {
# 			add_to_variable_list = {
# 				name = your_hostile_forts
# 				target = prev
# 			}
# 		}
# 	}
# }

# sieges_and_battles = {
# 	effect = {
# 		clear_variable_list = sieges
# 		clear_variable_list = battles
#
# 		every_in_list = {
# 			variable = hostiles_inside
# 			limit = {
# 				OR = {
# 					is_army_in_siege = yes
# 					is_army_in_raid = yes
# 				}
# 				is_army_in_combat = no
# 			}
# 			root = {
# 				add_to_variable_list = {
# 					name = sieges
# 					target = prev
# 				}
# 			}
# 		}
#
# 		every_in_list = {
# 			variable = hostiles_inside
# 			limit = {
# 				is_army_in_combat
# 			}
# 			root = {
# 				add_to_variable_list = {
# 					name = battles
# 					target = prev
# 				}
# 			}
# 		}
# 	}
# }
#
# county_holdings = {
# 	effect = {
# 		if = {
# 			limit = {
# 				NOT = { has_variable_list = adj_holdings }
# 			}
#
# 		}
# 	}
# }

adjacent_to_ally = {
	saved_scopes = { me }

	is_shown = {
		county = {
			save_temporary_scope_as = county
			any_neighboring_county = {
				NOT = {
					ROOT = {
						is_target_in_variable_list = {
							name = hostile_forts
							target = prev
						}
					}
				}
				county_controller = {
					OR = {
						this = scope:me
						AND = {
							any_liege_or_above = {
								OR = {
									this = scope:me
									is_allied_to = scope:me
								}
							}
						}
					}
				}
			}
		}
	}
}