army_size_sval = {
	value = army_size
}

army_max_size_sval = {
	value = army_max_size
}

direction_svalue = {
	value = direction_svalue_temp

	multiply = -1
}
difference_margin_ruler = 400
difference_margin_ruler_reverse = {
	value = difference_margin
	multiply = -1
}

total_army_siege_svalue = {
	value = total_army_siege_value
}

ruler_direction_svalue = {
	value = 0

	if = {
		limit = {
			x_difference > difference_margin_ruler
		}
		add = 3
		if = {
			limit = {
				y_difference > difference_margin_ruler
			}
			subtract = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_ruler_reverse
			}
			add = 1
		}
	}
	else_if = {
		limit = {
			x_difference < difference_margin_ruler_reverse
		}
		add = 7
		if = {
			limit = {
				y_difference > difference_margin_ruler
			}
			add = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_ruler_reverse
			}
			subtract = 1
		}
	}
	else = {
		if = {
			limit = {
				y_difference > difference_margin_ruler
			}
			add = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_ruler_reverse
			}
			add = 5
		}
	}
	multiply = -1
}

x_difference = {
	value = var:pos_x
	subtract = scope:origin.var:pos_x
}

y_difference = {
	value = var:pos_y
	subtract = scope:origin.var:pos_y
}

difference_margin = 10
difference_margin_reverse = {
	value = difference_margin
	multiply = -1
}

direction_svalue_temp = {
	value = 0

	if = {
		limit = {
			x_difference > difference_margin
		}
		add = 3
		if = {
			limit = {
				y_difference > difference_margin
			}
			subtract = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_reverse
			}
			add = 1
		}
	}
	else_if = {
		limit = {
			x_difference < difference_margin_reverse
		}
		add = 7
		if = {
			limit = {
				y_difference > difference_margin
			}
			add = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_reverse
			}
			subtract = 1
		}
	}
	else = {
		if = {
			limit = {
				y_difference > difference_margin
			}
			add = 1
		}
		else_if = {
			limit = {
				y_difference < difference_margin_reverse
			}
			add = 5
		}
	}
}

total_tax = {
	every_county_province = {
		add = monthly_income
	}
}

total_levies = {
	every_county_province = {
		add = building_levies
	}
}

my_counties = {
	every_sub_realm_county = {
		add = 1
	}
}

num_artifacts = {
	every_character_artifact = {
		add = 1
	}
}

num_artifacts_claims = {
	every_claimed_artifact = {
		add = 1
	}
}

ocr_attacker_war_score = {
	value = attacker_war_score
}

ocr_defender_war_score = {
	value = defender_war_score
}

realm_holdings = {
	every_realm_province = {
		add = 1
	}
}

vassal_holdings = {
	value = realm_holdings
	every_directly_owned_province = {
		limit = {
			barony = {
				is_leased_out = no
			}
		}
		subtract = 1
	}
}

vassal_counties = {
	every_sub_realm_county = {
		limit = {
			NOT = {
				holder = root
			}
		}
		add = 1
	}
}

ransom_cost_situation = {
	value = ransom_cost_value
}

current_char_gold = {
	value = 0
	if = {
		limit = { is_ruler = yes }
		add = gold
	}
	else_if = {
		limit = { exists = liege }
		add = liege.gold
	}
}

prestige_cost_call_ally = {
	value = 0

	if = {
		limit = { highest_held_title_tier = 2 }
		add = minor_prestige_value
	}
	else_if = {
		limit = { highest_held_title_tier = 3 }
		add = medium_prestige_value
	}
	else_if = {
		limit = { highest_held_title_tier = 4 }
		add = major_prestige_value
	}
	else_if = {
		limit = { highest_held_title_tier = 5 }
		add = massive_prestige_value
	}
}

num_of_wars = {
	every_character_war = {
		add = 1
	}
}

num_of_allies = {
	every_ally = {
		add = 1
	}
}

num_of_truces = {
	every_truce_target = {
		add = 1
	}
}

num_of_raids = {
	every_hostile_raider = {
		add = 1
	}
}


trigger_to_script_bitsum = {
    value = scope:tmp_testbit
    if = {
        limit = {
            exists = scope:tmp_numbit
        }
        add = scope:tmp_numbit
    }
}

distance_to_prev = {
    if = {
        limit = {
            save_temporary_trigger_breakpoint_as = {
                TRIGGER = rf_distance_to_prev
                NAME = tmp
            }
        }
        add = scope:tmp
    }
}

distance_to_player = {
    if = {
        limit = {
			any_player = {
				capital_barony = {
					save_temporary_scope_as = capital
				}
			}
            save_temporary_trigger_breakpoint_as = {
                TRIGGER = rf_distance_to_player
                NAME = tmp
            }
        }
        add = scope:tmp
		divide = 1000
		# multiply = 0.77
    }
}

direction_from_capital = {
	value = 0

	if = {
		limit = {
			any_player = {
				capital_province = {
					save_temporary_scope_as = origin
				}
			}
		}
		add = direction_svalue
	}
}

de_jure_penalty = {
	value = 1

	if = {
		limit = {
			highest_held_title_tier = tier_county
			primary_title = {
				duchy = {
					# is_title_created = no
					NOT = {
						holder = root.liege
					}
				}
			}
		}
		add = -0.5
		if = {
			limit = {
				primary_title = {
					any_this_title_or_de_jure_above = {
						holder = root.liege
					}
				}
			}
			add = 0.25
		}
	}

	else_if = {
		limit = {
			highest_held_title_tier = tier_duchy
		}
		if = {
			limit = {
				primary_title = {
					is_titular = yes
				}
			}
			add = -0.5
		}
		else_if = {
			limit = {
				primary_title = {
					kingdom = {
						# is_title_created = no
						NOT = {
							holder = root.liege
						}
						empire = {
							NOT = {
								holder = root.liege
							}
						}
					}
				}
			}
			add = -0.5
		}
	}
	else_if = {
		limit = {
			highest_held_title_tier = tier_kingdom
		}
		if = {
			limit = {
				primary_title = {
					is_titular = yes
				}
			}
			add = -0.5
		}
		else_if = {
			limit = {
				primary_title = {
					empire = {
						NOT = {
							holder = root.liege
						}
					}
				}
			}
			add = -0.5
		}
	}

}

county_opinion_val = {
	value = county_opinion
}

num_buildings_sval = {
	value = num_buildings
	add = -1
	min = 0
}

free_building_slots_sval = {
	value = free_building_slots
	if = {
		limit = {
			has_holding = no
		}
		add = -1
	}
}